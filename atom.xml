<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[iOS App]]></title>
  <link href="http://xuguoxing.github.io/atom.xml" rel="self"/>
  <link href="http://xuguoxing.github.io/"/>
  <updated>2015-06-04T11:33:01+08:00</updated>
  <id>http://xuguoxing.github.io/</id>
  <author>
    <name><![CDATA[xuguoxing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Team Geek]]></title>
    <link href="http://xuguoxing.github.io/blog/2015/05/28/team-geek/"/>
    <updated>2015-05-28T14:11:50+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2015/05/28/team-geek</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.cn/Team-Geek-A-Software-Developer-s-Guide-to-Programming-Well-with-Others-Fitzpatrick-Brian-W/dp/1449302440/">Team Geek &ndash; A software Developer&rsquo;s Guide to Working Well with Others</a></p>

<h1>一.The Myth of Genius Programmer</h1>

<p>The critical idea in this chapter is to understand that software development is a team sport. And in order to succeed on an engineering team, you need to reorganize your behaviors around the core principles of <code>humility, respect, and trust</code>.</p>

<h2>How programmers behave in general.</h2>

<ol>
<li><p>Help Me Hide My Code</p>

<p> The key motif here is insecurity. People are afraid of others seeing and judging their work in progress. In one sense, it’s just a part of human nature—nobody likes to be criticized, especially for things that aren’t finished. This attitude tipped us off to a trend within software development. Insecurity is actually the symptom of a larger problem.</p></li>
<li><p>The Genius Myth</p>

<p> Humans have a natural instinct to locate leaders and role models, idolize them, and attempt to imitate them. We all need heroes for inspiration, and the programming world has its heroes too. The phenomenon of “techie-celebrity” has almost spilled over into mythology. We all want to write something worldchanging like Linux, or design the next brilliant programming language.</p>

<p> It turns out that this Genius Myth is just another aspect of our insecurity. Most programmers are afraid to share work they’ve only just started, because it means peers will see their mistakes and know the author of the code is not a genius.</p>

<p> Another common motivation for holding your cards close to your chest is the fear that another programmer might take your idea and run with it before you get around to working on it. By keeping it secret, you control the idea.</p></li>
</ol>


<p>you’re doing it wrong, and it is a big deal.</p>

<ol>
<li><p>Hiding Is Considered Harmful</p>

<p> If you spend all your time working alone, you’re increasing the risk of failure and cheating your potential for growth.   First of all, how do you even know if you’re on the right track?</p>

<p> If you keep your great idea hidden from the world and refuse to show anyone anything until the implementation is polished, you’re taking a huge gamble. It’s easy to make fundamental design mistakes early on. You risk reinventing wheels. You need to make sure that you’re working on the right thing, you’re doing it correctly, and it hasn’t been done before. The chances of an early misstep are high. The more feedback you solicit early on, the more you lower this risk. Remember the triedand-true mantra of “Fail early, fail fast, fail often”.</p>

<p> Early sharing isn’t just about preventing personal missteps and getting your ideas vetted. It’s also important to strengthen what we call the <code>bus factor</code> of your project.</p>

<p> Bus factor (noun): the number of people that need to get hit by a bus before your project is completely doomed.</p>

<p> How dispersed is the knowledge and know-how in your project? If you’re the only person who understands how the prototype code works, it may be nice job security, but it also means the project is toast if you get hit by a bus. If you’re working with a friend, however, you’ve doubled the bus factor. And if you’ve got a small team designing and prototyping together, things are even better—the project won’t be over when a team member disappears.Remember: team members may not literally get hit by buses, but other unpredictable life events still happen. Someone may get married, have to move away, leave the company, or have to take care of a sick relative.You need to future-proof a project’s success by managing the bus factor.</p>

<p> Beyond the bus factor, there’s the issue of overall pace of progress.It’s easy to forget that working alone is often a tough slog, much slower than people want to admit. How much do you learn when working alone? How fast do you move? The Web is a great dumping ground of opinions and information, but it’s no substitute for actual human experience. Working with other people directly increases the collective wisdom behind the effort. When you get stuck on something absurd, how much time do you waste pulling yourself out of the hole? Think about how different the experience would be if you had a couple of peers to look over your shoulder and tell you—instantly—how you goofed and how to get past the problem. This is exactly why teams sit together (or do pair programming) in software engineering companies: you often find yourself needing a second pair of eyes.</p>

<p> Ambitious projects evolve quickly and have to adapt to changing environments as they go. Projects run into unpredictable design obstacles, or political obstacles, or simply discover that things aren’t working as planned. Requirements morph unexpectedly. How do you get that feedback loop so that you know the instant your plans or designs need to change? Answer: by working in a team. Eric Raymond is often quoted as saying, “Many eyes make all bugs shallow,” but a better version might be, “Many eyes make sure your project stays relevant and on track.” People working in caves awake to discover that while their original vision may be complete, the world has changed and made the product irrelevant.</p>

<p> <code>working alone is inherently riskier than working with others.</code> While you may be afraid of someone stealing your idea or thinking you’re dumb, you should be much more scared of wasting huge swaths of your time toiling away on the wrong thing.</p></li>
</ol>


<h2>Software development is a team sport.</h2>

<p>Creating a superstar team is the real goal, and is fiendishly difficult. The best teams make brilliant use of their superstars, but the whole is always greater than the sum of its parts.</p>

<p>You need to work with other people. Share your vision. Divide the labor.Learn from others. Create a brilliant team.</p>

<h3>The Three Pillars</h3>

<p>In order to reach collaborative nirvana,you first need to learn and embrace what we call the “three pillars” of social skills. These three principles aren’t just about greasing the wheels of relationships; they’re the foundation on which all healthy interaction and collaboration are based.</p>

<ul>
<li><p>Humility</p>

<p>  You are not the center of the universe. You’re neither omniscient nor infallible. You’re open to self-improvement.</p></li>
<li><p>Respect</p>

<p>  You genuinely care about others you work with. You treat them as human beings, and appreciate their abilities and accomplishments.</p></li>
<li><p>Trust</p>

<p>  You believe others are competent and will do the right thing,and you’re OK with letting them drive when appropriate.</p></li>
</ul>


<p>Together, we refer to these principles as HRT. We pronounce this as “heart” and not “hurt” because it’s all about decreasing pain and not about injuring people.</p>

<p>Do not underestimate the power of playing the social game. It’s not about tricking or manipulating people; it’s about creating relationships to get things done, and relationships always outlast projects.</p>

<h3>HRT in Practice</h3>

<ul>
<li><p>Lose the Ego</p>

<p>  “Being humble” is not the same as saying one should be an utter doormat: there’s nothing wrong with self-confidence. Just don’t come off like a know-it-all. Even better, think about going for a “collective” ego instead; rather than worrying about whether you’re personally awesome, try to build a sense of team accomplishment and group pride.</p></li>
<li><p>Learn to Both Deal Out and Handle Criticism</p>

<p>  Criticism is almost never personal in a professional software engineering environment—it’s usually just part of the process of making a better product. The trick is to make sure you (and those around you) understand the difference between constructive criticism of someone’s creative output and flat-out assaults against someone’s character. The latter is useless—it’s petty and nearly impossible to act on. The former is always helpful and gives guidance on how to improve. And most importantly, it’s imbued with <code>respect</code>: the person giving the constructive criticism genuinely cares about the other person and wants her to improve herself or her work. Learn to respect your peers and give constructive criticism politely. If you truly respect someone, you’ll be motivated to choose tactful, helpful phrasing—a skill acquired with much practice.</p>

<p>  On the other side of the conversation, you need to learn to accept criticism as well. This means not just being <code>humble</code> about your skills, but <code>trusting</code> that the other person has your best interests (and those of your project!) at heart and doesn’t actually think you’re an idiot. Programming is a skill like anything else. It improves with practice. If a peer pointed out ways in which you could improve your juggling, would you take it as an attack on your character and value as a human being? We hope not. In the same way, <code>your self-worth shouldn’t be connected to the code you write</code>.</p></li>
<li><p>Fail Fast; Learn; Iterate</p>

<p>  It’s widely recognized that if you’re not failing now and then, you’re not being innovative enough or taking enough risks. Failure is viewed as a golden opportunity to learn and improve for the next go-around.</p>

<p>  The key to learning from your mistakes is to <code>document</code> your failures.Write up “postmortems,”as they’re often called in our business.A proper postmortem should always contain an explanation of <code>what was learned and what is going to change</code> as a result of the learning experience. Then make sure you put it in an easy-to-find place and really follow through on the proposed changes. Remember that properly documenting failures also makes it easier for other people (present and future) to know what happened and avoid repeating history. Don’t erase your tracks—light them up like a runway for those who follow you!</p>

<p>  A good postmortem should include the following:     * A brief summary   * A timeline of the event, from discovery through investigation to resolution   * The primary cause of the event    * Impact and damage assessment  * A set of action items to fix the problem immediately  * A set of action items to prevent the event from happening again   * Lessons learned</p></li>
<li><p>Leave Time for Learning
  Tt is fun to be the most knowledgeable person in the room, and mentoring others can be incredibly rewarding. The problem is that once you reach a local maximum on your team,you stop learning. And when you stop learning, you get bored.Or accidentally become obsolete. It’s really easy to get addicted to being a leading player; but only by giving up some ego will you ever change directions and get exposed to new things. Again, it’s about increasing <code>humility</code> and being willing to learn as much as teach. Put yourself outside your comfort zone now and then; find a fishbowl with bigger fish than you and rise to whatever challenges they hand out to you. You’ll be much happier in the long run.</p></li>
<li><p>Learn Patience</p></li>
<li><p>Be Open to Influence</p>

<p>  The more you are open to influence, the more you are able to influence; the more vulnerable you are, the stronger you appear.It’s OK for someone else to change your mind. Choose your battles carefully.Remember that in order to be heard properly, you first need to listen to others. In the case of being influenced, this listening should take place before you’ve put a stake in the ground or firmly declared that you’ve decided on something—if you’re constantly changing your mind, people will think you’re wishy-washy.</p>

<p>  Admitting you’ve made a mistake or you’re simply out of your league is a way to increase your status over the long run. In fact, it encompasses all of HRT: it’s an outward show of <code>humility</code>,it’s about accountability and taking responsibility, it’s a signal that you <code>trust</code> others’ opinions, and in return, people end up <code>respecting</code> your honesty and strength. Sometimes the best thing you can do is just to say, “I don’t know.”</p></li>
</ul>


<h1>二.Building an Awesome Team Culture</h1>

<h2>What IS Culture?</h2>

<p>A team’s culture isn’t just the way in which team members write code or treat one another: it’s <code>a set of shared experiences, values, and goals</code> that is unique to every engineering team we’ve ever been on or observed. The founding members of a team or company define the biggest part of a team’s culture, but it will continue to change and develop over the life of the team.</p>

<p>The elements that make up a team culture vary wildly. Some are directly relevant to writing software, like code reviews, test-driven development, and the value you place on having good design docs before starting to crank out reams of code. Some elements might be more social, like going out to a particular restaurant for lunch every Thursday, or going out for drinks at a favorite bar on Fridays. Some of them might seem completely silly or outlandish to an outsider.All of these things make up a team’s culture and affect the team’s productivity and ability to attract and retain good team members.</p>

<p>Take a look at any wildly successful software company today—Google, Apple, Microsoft, Oracle—and you’ll find that each company has a very different culture: one that has its roots in the culture that was set by the founders and earliest employees. As these companies have grown and matured, their cultures have evolved and changed, but they’ve still retained a unique identity that trickles down to just about every aspect of how they develop products, treat their employees, and compete with other companies.</p>

<h2>Why Should You Care?</h2>

<p>In short, you should care because if you don’t put effort into building and maintaining your culture, your team will eventually be overtaken by a strong personality who cultivates his culture in your team. This culture may turn out to be a productive, healthy culture that cranks out piles of great code, but more often than not,it won’t turn out as such, and you’ll suddenly find <code>a lot of your energy that used to go into designing and writing code is suddenly expended in arguments and infighting</code>.</p>

<p>while the founders and leads usually tend to the health of your culture, <code>every member of your team participates in the culture and bears some responsibility for defining, maintaining, and defending the culture</code>. When someone joins your team, she doesn’t pick up the culture from the team leader alone, but from every team member she works with.</p>

<p>A “strong culture” is one that is open to change that improves it, yet is resistant to radical change that harms it. The team cultures that are most successful are those that <code>focus the majority of the team’s effort on shipping great software</code>.A strong culture gives you focus, efficiency, and strength, and these things make for a happier team.</p>

<p>The interesting thing about team culture is that, if you build a strongly defined one, it will become <code>self-selecting</code>. In the open source world, projects that are built on HRT and focused on writing clean,elegant, maintainable code will attract engineers who are interested in—surprise, surprise—working with people they respect and trust, and writing clean, elegant, maintainable code. If, however, your team is built on a culture of aggression, hazing, and ad hominem attacks, you’re going to wind up attracting more people like that.</p>

<h2>Culture and People</h2>

<p>In the software world, a great deal of creative thinking is required of engineers working on a product,and if you want a great product, you need great engineers. If you want great engineers to do great work (and to stick around), you need to create a culture for them that allows them to safely share ideas and have a voice in the decision-making process.</p>

<p>If you want to get excellent engineers to work on your team, you need to start by hiring, well, some great engineers! That may sound weird, but the fact of the matter is that <code>most great engineers want to be on teams with other great engineers</code>. Many great engineers we know gravitate toward teams where they can learn from giants of the industry.So how do you attract these engineers in the first place?</p>

<p>For starters, they’re going to want to be able to not only contribute to the development of your product, but also participate in the product’s decision-making process, and that usually means some level of <code>consensus-driven management</code>.In the case of consensus-driven management, the entire team participates in the decision-making process.</p>

<p>What we mean by “consensus” is that <code>everyone has a strong sense of ownership and responsibility for the product’s success</code> and that the leaders really listen to the team (with an emphasis on the “respect” component of HRT). This may mean there are times when extended discussion and reflection is what the product needs to succeed, and there are other times when the team agrees they need to move quickly. In the latter case, team members may decide to entrust a great deal of the nitty-gritty day-to-day decision-making to one or more team leads. In order for this to happen, the team as a whole needs to agree on the general mission of the team, and believe it or not, the key to that is the development of a <code>team mission statement</code>.</p>

<p>Just as important as your team’s decision-making process is <code>the manner in which team members treat one another</code>, because this is more self-selecting than anything else.If you create a culture of HRT where team members treat one another kindly and take the effort to give constructive criticism, you’ll not only attract a much larger set of people, but you’ll also spend a great deal more of your energy writing software. Having a strong team ego is good; a team totally eclipsed by individual egos is a recipe for disaster.</p>

<p><code>Constructive criticism is essential to the growth and development of any engineering team</code>. It requires a certain amount of self-confidence to take any kind of criticism, and we think constructive criticism is the easiest kind to receive. On the downside, it’s a lot harder to give someone constructive criticism than to simply lambast her or ridicule something she did. Of course, we realize it’s incredibly difficult to solicit and then receive constructive criticism from most people—they assume that when you ask them to criticize your work, you’re only looking for compliments and assurance.</p>

<p><code>Aggressive people can (usually) get along fine in a quieter environment, but quieter, more introverted people rarely excel (or enjoy working) in an aggressive environment</code>—it’s not only harder to hear their voices over the noise, but it also tends to discourage them from being active participants. If you’re looking for a culture that allows the broadest range of people to work most efficiently, you could do a lot worse than building that culture on humility,respect, and trust.</p>

<p><code>Calm, easygoing cultures built on respect are more vulnerable to disruption by aggressive people than aggressive cultures are vulnerable to disruption from more easygoing people</code>. Easygoing cultures need to be aware of this and not let the aggressive newcomer take over, typically by refusing to engage this person in an aggressive tone. In some cases, one or more of the more senior team members may have to meet the aggressive newcomer head-on to prevent her from harming an easygoing team culture.</p>

<h2>Communication Patterns of Successufl Cultures</h2>

<h3>High-Level Synchronization</h3>

<p>At the highest level, the team needs to keep common goals in sync and follow best practices around communicating their progress.</p>

<ul>
<li><p>The Mission Statement</p>

<p>  For an engineering team, writing a mission statement is a way to concisely define the direction and limit the scope of your product.Writing a good mission statement takes some time and effort, but it can potentially save you years of work by clarifying what your team should and shouldn’t be working on.</p>

<p>  As your project progresses, the mission statement keeps things on track. It shouldn’t become an insurmountable impediment to change, however. If radical changes happen to the environment or business plan (say, at a startup company), software team members need to be honest with themselves and reevaluate whether the mission still makes sense. If a company or product pivots suddenly, the mission statement needs to keep up.</p></li>
<li><p>Efficient Meetings</p>

<p>  If you’re trying to design something new, try to include no more than five people in your meeting—it’s practically impossible to come up with new designs and make decisions with more than five people in a room unless there’s only one person in the room making the decisions.</p>

<p>  Meetings are frequently an interruption to what many refer to as “make time,” inspired by Paul Graham’s “Maker’s Schedule, Manager’s Schedule.”It can be hard for engineers to get into the zone if they’re constantly stopping work to attend meetings. Schedule time on your calendar in three- to four-hour blocks and label these blocks as “busy” or even “make time,” and get your work done. If you have to set up a meeting, try to set it up near another natural break in the day, like lunchtime, or the very end of the day.</p>

<p>  Five simple rules for running a meeting:        1. Only invite people who absolutely need to be there.  2. Have an agenda and distribute it well before the meeting starts. 3. End the meeting early if you’ve accomplished the meeting’s goals.    4. Keep the meeting on track.   5. Try to schedule the meeting near other interrupt points in your day (e.g., lunch, end of day).</p>

<p>  If you’re going to have a meeting, create an agenda and distribute it to all attendees at least a day before the meeting so that they’ll know what to expect. Invite as few people as possible (remember the cost of synchronous communication).</p>

<p>  Only invite people to the meeting who actually need to be there for the meeting to accomplish its goal.</p>

<p>  Whoever’s running the meeting should actually run the meeting and not hesitate to (gently) cut off someone who veers off-topic or, even worse, tries to monopolize the conversation. Doing this well can be tricky, but is worthwhile. And most importantly, don’t be afraid to end a meeting early if you’ve completed the agenda.</p></li>
<li><p>Working in a “Geographically Challenged” Team</p>

<p>  When you’re part of a distributed team or working remotely from them, you not only need to find different ways to communicate, but also need to put more work into communication, period. If you’re on a team that has remote workers, this means documenting and sharing decisions in writing, usually over email. Online chats, instant messages, and hallway conversations might be where a lot of discussion takes place, but there needs to be some way to broadcast relevant discussions like these to everyone to make sure they’re informed and participating (and as a bonus, archived email lists provide documentation). Video chat is also incredibly useful as a quick conversation enabler, and these days it’s pretty cheap to outfit a whole team with webcams.</p>

<p>  “If the discussion didn’t happen on the email list, then it never really happened.” People spent lots of time bantering around ideas in chat rooms, but in order to make the resolutions “real” we had to be mindful of everyone else who didn’t witness them. By forcing conversations to re-post to email lists, we gave the entire distributed team a chance to see how decisions were arrived at (and to speak up if they wanted to). This is particularly critical if you’re trying to encourage a consensus-based team culture.</p>

<p>  <code>Talking to someone from a remote location should be as frictionless as walking over to his desk</code>. If you’re working remotely, overcommunicate with your team using every available medium (e.g., online chat, instant messages, email, video chat, phone calls, etc.) to make sure everyone knows not only that you exist, but also what you’re working on. And most important of all, <code>do not underestimate the bandwidth of a face-to-face conversation</code>.No matter how much you email, chat, or call, don’t be afraid to regularly get on a plane and visit the rest of your team. This goes for remote employees, remote teams, and remote offices as well—make the time to get out to the home office and talk to people.</p></li>
<li><p>Design Docs</p>

<p>  A design doc is typically owned by one person, authored by two or three, and reviewed by a larger set. It serves not only as a highlevel blueprint of your future project, but also as a low-cost way to communicate to your larger team what you want to do and how you intend to do it. Since you haven’t spent weeks (or months) writing code, it’s a lot easier to accept criticism at this point and you’ll wind up with a better product and a better implementation.In addition, once you’ve nailed down the design doc, it will serve as your guide for both scheduling and dividing the work on your project. Once you start coding, however, you should treat your design doc as a living document and not one carved in stone: you and your team <code>should update the document as your project grows and changes</code>, not once you’ve shipped, although this is easier said than done. Most teams have no docs at all, while the rest have a short period of awesome docs, followed by a long period of out-ofdate docs.</p></li>
</ul>


<h3>Day-to-Day Discussions</h3>

<ul>
<li><p>Mailing Lists</p></li>
<li><p>Online Chat</p>

<p>  Online chat is an incredibly convenient way for teams to communicate, especially since it provides a way to send a quick request to a teammate without interrupting her work (providing, of course, she has her chat program configured to not interrupt her work!). It’s a good tool for teams to use if they’re doing some light work in the evening or on the weekend, or if one team member is out of the office for a day or two. One-on-one chat is useful and certainly has its place in team communication, but we strongly recommend that teams use some sort of group chat mechanism.</p>

<p>  It’s very tempting to indulge your insecurity and take what might be perceived as a stupid question to a one-on-one discussion rather than risk embarrassment in front of the rest of the team. Unfortunately, this increases the burden on the team because there’s no shared lore created and different team members may ask other team members the same question over and over again. Regardless of the application you use for chat, <code>we strongly recommend that your team have a convenient and accessible mechanism for group chat</code>.</p></li>
<li><p>Using an Issue Tracker</p>

<p>  If you’re going to use an issue/bug tracker (and you should),it’s important that you have some sort of process in place for <code>processing and triaging bugs to encourage people to file and fix important bugs in a timely manner</code>. If your bug tracker is neglected and not prioritized, people will stop filing bugs and begin shouting complaints into the void; and when your team eventually digs into the bug tracker, more than likely they will be fixing unimportant bugs and ignoring important ones.</p>

<p>  Keep in mind that a bug tracker is really just a slightly specialized “Internet forum” or “bulletin board.” As such, it shares most properties in common with email lists and the same best practices apply. Hallway conversations about bugs should <code>be recorded as updates in the bug tracker, making thoughts and decisions “official” for all to see</code>. Keep the tone civil and don’t tolerate trollish behaviors.If conversations get overly long or fragmented, take the discussion temporarily to the main email list—an email client is a much better tool for complex threads.</p></li>
<li><p>Communication as Part of Engineering</p>

<ul>
<li><p>Code Comments</p>

<p>  Comments should be focused on <code>why</code> the code is doing what it’s doing, not <code>what</code> the code is doing.</p>

<p>  Take the time to come up with a commenting style for your team and have everyone stick to it—we think being consistent is more important than the actual choice.</p></li>
<li><p>Require Code Reviews for Every Commit</p>

<p>  Whether you review the code before committing it or after committing it, you should make sure every line of code that goes into your repository gets a second pair of eyes on it to check for style, quality, and, of course, careless mistakes. Keep code changes small and reviewable—changesets that are thousands of lines long are unreviewable for anything but formatting nits. This not only results in a higher-quality code base,but also goes a long way toward instilling a strong sense of group pride in the quality of your code.</p></li>
<li><p>Have Real Test and Release Processes</p>

<p>  The more automated tests you have for your product, the more confident you can be when you’re tearing through fixing bugs or adding new features. Once your team determines the role that testing will play, it should be part of the coding and review process. Just as importantly, your release process should be lightweight enough that you can do frequent releases (e.g., weekly), but thorough enough that you catch brokenness before it hits your users.</p></li>
</ul>
</li>
</ul>


<h2>It Really Is About the Code After All</h2>

<p>We’ve found that building a strong, productive team culture and taking some time to pay attention to communication in the team creates a team that will spend more time writing and shipping code and less time arguing about what code to write.</p>

<p>Strong teams don’t arise spontaneously; they’re carefully seeded and cultivated by team leads and founders who understand the high <code>cost</code> of trying to write software with a dysfunctional team. Putting this work in from the outset helps to <code>create a self-selecting culture</code> that builds a team that will spend much more time designing and writing code than defining and defending their culture. A big side benefit of this effort—communication and process—is that it drastically <code>reduces the barrier to entry for newcomers</code> to your team.</p>

<p>While getting the right people on your team and the right values instilled in your team is important, the overwhelming majority of effort that goes into a culture turns out to be communication.Mission statements, meetings, mailing lists, online chat, code comments, documentation, and even decision-making processes all make up the many different ways your team communicates, both with itself and with others. It’s often a surprise to people that it takes so much communication—including emotional time and effort—to build a strong team for the sole purpose of writing code, but it’s true. <code>Code is ultimately about communications with people, not just with a machine</code>.</p>

<h1>三.Every Boat Needs a Captain</h1>

<h2>@Deprecated Manager</h2>

<p>Managers frequently treated employees in the same way that cart drivers would treat their mules: they motivated them by alternately leading them forward with a carrot, and, when that didn’t work,whipping them with a stick. This <code>“carrot and stick”</code> method of management survived the transition from the factory to the modern office, where the stereotype of the hard-ass manager-as-mule-driver flourished in the middle part of the 20th century when employees would work at the same job for years and years (frequently relying on their pension as well).
This continues today in some industries—even in industries that require creative thinking and problem solving (like engineering!)—despite numerous studies suggesting that the anachronistic carrot and stick is ineffective and harmful to engineers’ productivity.While the assembly-line worker of years past could be trained in days and replaced at will, an engineer can take months to get up to speed on a new team. Unlike the mechanical efficiency of the assembly-line worker, <code>an engineer needs nurturing, time, and space to think and create</code>.</p>

<h3>“Leader” Is the New “Manager”</h3>

<p>We think the term <code>manager</code> should be deprecated and the term <code>leader</code> should be used instead.The word <code>manager</code> has become a four-letter word—a rolewhose very existence encourages new managers to <code>manage</code> their <code>reports</code>.A leader forges the way for a team, looking out for their safety and well-being, all while making sure their needs are met.
<code>Traditional managers worry about how to get things done,while leaders worry about what things get done . . . (and trust their team to figure out how to do it).</code></p>

<h3>The Only Thing to Fear Is &hellip; Well, Everything</h3>

<p>If you’ve spent the majority of your career writing code, you typically end a day with something you can point to—whether it’s code, a design document, or a pile of bugs you just closed—and say,“That’s what I did today.” Based on this metric of productivity, at the end of a busy day of “management” you’ll usually find yourself thinking, <code>“I didn’t do a damned thing today.”</code>  Quantifying management work is more difficult than counting widgets you turned out, and you don’t have to take credit for your team’s work; however,making it possible <code>for them to be happy and productive is a big measure of your job</code>.
There are great reasons to consider becoming a manager: first, it’s a way to <code>scale yourself</code>. Even if you’re great at writing code, there’s still an upper limit to the amount of code you can write. Imagine <code>how much code a team of great engineers could write under your leadership</code>! Second, you might just be really good at it—many engineers who find themselves sucked into the leadership vacuum of a project discover that they’re exceptionally skilled at providing the kind of guidance, help, and air cover a team needs.</p>

<h2>The Servant Leader</h2>

<p>The symptoms of the “management” disease include, but are by no means limited to, <code>micromanagement, ignoring low performers, and hiring pushovers</code>. Without prompt treatment, this disease can kill an entire team. One of the greatest urges of the newly minted manager is to actively “manage” her employees because that’s what a manager does. This typically has disastrous consequences.
The cure for the “management” disease is a liberal application of what we call <code>“servant leadership,”</code> which is a nice way of saying the most important thing a manager can do is to serve her team. As a servant leader, you should strive to <code>create an atmosphere of humility, respect, and trust (HRT)</code>. This may mean <code>removing bureaucratic obstacles</code> that an engineer can’t remove by herself, <code>helping a team achieve consensus</code>, or even buying dinner for the team when they’re working late at the office. The servant leader fills in the cracks to smooth the way for her team as well as advise them when necessary, but still isn’t afraid of <code>getting her hands dirty</code>. The only managing that a servant leader does is to <code>manage both the technical and social health of the team</code>; as tempting as it may be to focus purely on the technical health of the team, the social health of the team is just as important (but often infinitely harder to manage!).</p>

<h3>Antipatterns</h3>

<ol>
<li>Hire Pushovers.
 If you’re a manager and you’re feeling insecure in your role , one way to make sure no one questions your authority or threatens your job is to <code>hire people you can push around</code>. You can achieve this by hiring people who <code>aren’t as smart or ambitious</code> as you are, or just people who are more insecure than you. While this will cement your position as the team leader and decision maker, it will mean <code>a lot more work for you</code>. Your team won’t be able to make a move without you leading them like dogs on a leash. If you build a team of pushovers, you probably can’t take a vacation; the moment you leave the room, productivity comes to a screeching halt.
 Instead, you should strive to hire people who are <code>smarter than you and can replace you</code>. This can be difficult because these very same people will <code>challenge you on a regular basis</code> (in addition to letting you know in no uncertain terms when you screw up). These very same engineers will also consistently <code>impress you and make great things happen</code>. They’ll be able to direct themselves to a much greater extent, and some will <code>be eager to lead the team</code> as well. You shouldn’t see this as an attempt to usurp your power, but rather as <code>an opportunity for you to lead an additional team, investigate new opportunities</code>, or even take a vacation without worrying about checking in on the team every day to make sure they’re getting their work done.</li>
<li><p>Ignore Low Performers.
 Sometimes you get to be the tooth fairy, other times you have to be the dentist.
 We’ve seen team leaders do all the right things to build incredibly strong teams, only to have these teams fail to excel (and eventually fall apart) because of just <code>one or two low performers</code>. We understand that the human aspect is the hardest part of writing software, but the hardest part of dealing with humans is handling someone who <code>isn’t meeting expectations</code>. Sometimes people miss expectations because they’re not working long enough or hard enough, but the most difficult cases are when someone just <code>isn’t capable of doing his job</code> no matter how long or hard he works.
 “Hope is not a strategy.” And nowhere is hope more overused as a strategy than in dealing with a low performer. Most team leaders grit their teeth, avert their eyes, and just <code>hope that the low performer either magically gets better or just goes away</code>. Yet it is extremely rare that this person does either.
 High performers on the team waste valuable time pulling the low performer along and team morale leaks away into the ether.</p>

<p> Ignoring low performers is also a way to keep new high performers from joining your team, and a way to encourage existing high performers to leave.     The benefit of dealing with a low performer as quickly as possible is that you can put yourself in the position of <code>helping him up or out</code>.If you deal with a low performer right away, you’ll oftentimes find that he merely needs some encouragement or direction to slip into a higher state of productivity.  How does one coach a low performer effectively?  It almost always requires <code>temporary micromanagement</code>—but still a whole <code>lot of HRT, particularly respect</code>. Set up a <code>specific time frame</code> (say, two or three months), and some very <code>specific goals</code> you expect him to achieve in that period. Make the goals small and incremental, so there’s an opportunity for lots of small successes. Meet with the engineer every week to <code>check on progress</code>, and be sure you set really explicit expectations around each upcoming milestone, so it’s easy to measure success or failure. If the low performer can’t keep up, it will become quite obvious to both of you early in the process. At this point, the person will often acknowledge that things aren’t going well and decide to quit; in other cases, determination will kick in and he’ll “up his game” to meet expectations. Either way, by working directly with the low performer you’re catalyzing important and necessary changes.</p></li>
<li>Ignore Human Issues.
 A team leader has two major areas of focus for his team: <code>the social and the technical</code>. It’s rather common for leaders to be stronger in the technical side, and since most leaders are promoted from a technical job, they tend to ignore human issues. It’s tempting to focus all your energy on the technical side of your team because, as an individual contributor, the vast majority of your time is spent solving technical problems. Now that you’re a leader, however, <code>you ignorethe human element of your team at your own peril</code>.</li>
<li><p>Be Everyone’s Friend.
 Don’t confuse friendship with leading with a soft touch: when you hold power over someone’s career, he may feel pressure to artificially reciprocate gestures of friendship.
 you can be a tough leader without tossing your existing friendships to the wind. We’ve found that <code>having lunch with your team</code> can be an effective way to stay socially connected to them without making them uncomfortable—this gives you a chance to have informal conversations outside the normal work environment.</p></li>
<li><p>Compromise the Hiring Bar.</p>

<p> Steve Jobs once said: “<code>A people hire other A people; B people hire C people.</code>” It’s incredibly easy to fall victim to this adage, and even more so when trying to hire quickly.</p>

<p> <code>The cost of finding the right person—whether by paying recruiters, paying advertising, or pounding the pavement for references—pales in comparison to the cost of dealing with an employee you never should have hired in the first place.</code> This “cost” manifests itself in <code>lost team productivity, team stress, time spent managing the employee up or out, and the paperwork and stress involved in firing the employee</code>.  If you still keep getting handed substandard engineers, maybe it’s time to look for another job. <code>Without the raw materials for a great team, you’re doomed</code>.</p></li>
<li><p>Treat Your Team Like Children.</p>

<p> The best way to show your team you don’t trust them is to treat them like kids.You can manifest this behavior by <code>micromanaging</code> them or simply by being <code>disrespectful of their abilities</code> and giving them <code>no opportunity to be responsible</code> for their work.If you hire people worthy of trust and show these people you trust them, they’ll usually rise to the occasion .</p></li>
</ol>


<h3>Leadership Patterns</h3>

<ol>
<li><p>Lose the Ego.</p>

<p> This pattern is frequently misunderstood as encouraging leaders to be a doormat and let their team walk all over them, but that’s not the case at all. Humility is not the same as lacking confidence. You can still have <code>self-confidence and opinions without being an egomaniac</code>.Big personal egos are hard to handle on any team, especially in the team’s leader. Instead, you should work to cultivate a strong collective <code>team ego</code> and identity.</p>

<p> Part of “losing the ego” is something we’ve covered already: <code>you need to trust your team</code>. That means <code>respecting the abilities and prior accomplishments</code> of the team members, even if they’re new to your team.</p>

<p> If you’re not micromanaging your team, you can be pretty certain the folks working in the trenches know the details of their work better than you do. This means that while you may be the one <code>driving the team to consensus and helping to set the direction</code>, the <code>nuts and bolts of how to accomplish your goals are best decided by the people</code> who are putting the product together. This gives them not only a greater sense of <code>ownership</code>, but also a greater sense of <code>accountability and responsibility</code> for the success (or failure!) of their product. If you’ve got a good team and you let them set the bar for the quality and rate of their work, they’ll accomplish more than they would by you standing over them with a carrot and a stick.</p>

<p> Many engineers new to a leadership role feel an enormous responsibility to get everything right, to know everything, and to have all the answers. We can assure you that you <code>will not get everything right, nor will you have all the answers</code>, and if you act like you do, you’ll quickly lose the respect of your team. A lot of this comes down to having a basic sense of security in your role. Try to <code>appreciate inquiry</code>: when someone questions a decision or statement you made, remember that this person is usually just trying to better understand you. If you encourage inquiry, you’re much more likely to get the kind of constructive criticism that will make you a better leader of a better team. Finding people who will give you good constructive criticism is incredibly difficult, and it’s even harder to get this kind of criticism from people who “work for you.” Think about the <code>big picture</code> of what you’re trying to accomplish as a team, and <code>accept feedback and criticism openly</code>; avoid the urge to be territorial.</p>

<p> The last part of losing the ego is a simple one, but many engineers would rather be boiled in oil than do it: <code>apologize when you makea mistake</code>.  You are absolutely going to make mistakes, and whether you admit it or not your team is going to know you’ve made a mistake. They’ll know regardless of whether they talk to you or not (and one thing is guaranteed: they will talk about it with one another). Apologizing doesn’t cost money. People have enormous respect for leaders who apologize when they screw up, and contrary to popular belief it doesn’t make you vulnerable. In fact, you’ll usually gain respect from people when you apologize, because apologizing tells people you are <code>level-headed, good at assessing situations, and—coming back to HRT—humble</code>.</p></li>
<li><p>Be a Zen Master.
 As an engineer, you likely developed an excellent sense of skepticism and cynicism, but this can be a liability when you’re trying to lead a team. That’s not to say you should be naïvely optimistic at every turn, but you would do well to be <code>less vocally skeptical while still letting your team know you’re aware of the intricacies and obstacles</code> involved in your work. <code>Mediating your reactions and maintaining your calm</code> is more important as you lead more people, because your team will (both unconsciously and consciously) look to you for clues on how to act and react to whatever is going on around you.</p>

<p> This brings us to another <code>Zen management trick: asking questions</code>.The engineer asking for advice typically doesn’t want you to solve his problem, but rather to <code>help him solve it</code>, and the easiest way to do this is to ask him questions.  you can apply some HRT and try to help him solve the problem on his own by trying to <code>refine and explore</code> his problem. This will usually lead the engineer to the answer, and it will be his answer, which leads back to the ownership and responsibility we went over earlier in this chapter. Whether you have the answer or not, using this technique will almost always leave the engineer with the impression that you did.</p></li>
<li><p>Be a Catalyst.</p>

<p> One of the ways in which catalysts work (e.g., enzymes) is to <code>bring reactants into close proximity</code>: instead of bouncing around randomly in a solution, the reactants are much more likely to favorably interact with one another when the catalyst helps bring them together. This is a role you’ll often need to play as a leader, and there are a number of ways you can go about it.</p>

<p> One of the most common things a team leader does is to <code>build consensus</code>. This may mean you drive the process from start to finish, or you just give it a gentle push in the right direction to speed it up.  If your team is looking to move quickly, sometimes they’ll voluntarily concede authority and direction to one or more team leads. While this might look like a dictatorship or oligarchy, when it’s done voluntarily it’s a form of consensus.</p>

<p> Sometimes your team already has consensus about what you need to do, but they hit a roadblock and get stuck. This could be a technical or organizational roadblock, but jumping in to <code>help the team get moving again</code> is a common leadership technique. There are some roadblocks that, while virtually impossible for your team members to get past, will be easy for you to handle, and helping your team to understand that you’re glad (and able) to help out with these roadblocks is valuable.</p>

<p> You don’t have to know all the answers to help remove roadblocks, but it usually helps to know the people who do. In many cases, <code>knowing the right people is more valuable than knowing the right answer</code>.</p>

<p> Another way to catalyze your team is to make them <code>feel safe and secure so that they can take greater risks</code>. Risk is a fascinating thing—most humans are terrible at evaluating risk, and most companies try to avoid risk at all costs. If you try to achieve an impossible goal, there’s a good chance you’ll fail,but if you fail trying to achieve the impossible, you’ll most likely accomplish way more than you would have accomplished had you merely attempted something you knew you could complete. A good way to build a culture where risk taking is accepted is to let your team <code>know it’s OK to fail</code>.</p>

<p> In fact, we like to think of <code>failure as a way of learning a lot really quickly</code>, providing that you’re not repeatedly failing at the same thing. In addition, it’s important to see <code>failure as an opportunity to learn</code> and not to point fingers or assign blame. <code>Failing fast is good</code>, because there’s not a lot at stake. This postmortem procedure is a way to <code>document the events that led to the actual failure and to develop a series of steps that will prevent it from happening in the future</code>. This is not an opportunity to point fingers, nor is it intended to introduce unnecessary bureaucratic checks, but rather to <code>focus strongly on the core of the problem and fix it once and for all</code>. It’s very difficult, but quite effective (and cathartic!).</p>

<p> It’s OK to fail, but <code>fail as a team</code> and learn from your failures. If an individual succeeds, <code>praise him in front of the team</code>. If an individual fails, give <code>constructive criticism in private</code>.Whatever the case, take advantage of the opportunity and apply a liberal helping of HRT to help your team to learn from their failures.</p></li>
<li><p>Be a Teacher and a Mentor.</p>

<p> <code>Teaching team members and giving them a chance to learn on their own</code> can be incredibly difficult at first, but it’s a vital component of effective leadership. This is especially important for new hires who, in addition to learning your team’s technology and code base, are learning your team’s culture and the appropriate level of responsibility to assume.</p>

<p> It doesn’t take a lot of formal education or preparation to be a mentor; in fact, you primarily need three things: <code>experience with your team’s processes and systems, the ability to explain things to someone else, and the ability to gauge how much help your mentee needs</code>.</p></li>
<li><p>Set Clear Goals.</p>

<p> If you’re going to get your team moving rapidly in one direction, you need to make sure they all understand and agree on what the direction is.</p>

<p> The easiest way to set a clear goal and get your team pulling the product in the same direction is to create a <code>concise mission statement</code> for the team. Onceyou’ve helped the team define their direction and goals, you can <code>step back and give them more autonomy</code>, <code>periodically checking</code> into make sure they’re still on the right track.This not only frees up your time to handle other leadership tasks, but it also <code>drastically increases the efficiency of your team</code>.6. Be Honest.</p>

<p> This doesn’t mean we’re assuming you are lying to your team, but it merits a mention because you’ll inevitably find yourself in a position where you <code>can’t tell your team something</code> or, even worse, you have to <code>tell them something they don’t want to hear</code>.</p>

<p> If a team member approaches you about something you can’t share with him, <code>it’s OK to just tell him you know the answer but can’t tell him</code>. Even more common is when a team member asks you something you don’t know the answer to: <code>you can tell him you don’t know</code>.</p>

<p> Giving <code>hard feedback</code> is &hellip; well, hard. The first time you have to tell one of your engineers he made a mistake or didn’t do his job as well as was expected of him can be incredibly stressful.We strongly advise <code>against using the compliment sandwich</code>.It’s possible to employ HRT here: <code>be kind and empathetic when delivering constructive criticism</code> without resorting to the compliment sandwich. In fact, kindness and empathy are critical if you want the recipient to hear the criticism and not immediately go on the defensive.
 When providing direct feedback or criticism, your delivery is key to <code>making sure your message is heard and not deflected</code>. If you put the recipient on the defensive, he’s not going to be thinking of how he can change, but rather how he can argue with you to show you you’re wrong.</p></li>
<li><p>Track Happiness.
 As a leader, one way to make your team more productive (and less likely to leave) in the long term is to take some time to <code>gauge the team’s happiness</code>. The best leaders we’ve worked with have all been amateur psychologists, looking in on their team members’ welfare from time to time, making sure they <code>get recognition for what they do</code>, and trying to make certain they are <code>happy with their work</code>.
 One of the most valuable tools in tracking your team’s happiness is, at the end of each one-on-one meeting, to ask the team member, <code>“What do you need?”</code> This simple question is a great way to wrap up and make sure each team member has what he needs to be productive and happy, although you may need to carefully probe a bit to get details.If you ask this every time you have a one-onone, you’ll find that eventually your team will remember this and sometimes even come to you with a laundry list of things they need to make their job better.</p>

<p> It can also be worthwhile to pay some attention to your team’s <code>happiness outside the office</code>. <code>Be wary of assuming that people have no life outside of work—having unrealistic expectations about the amount of time people can put into their work will cause people to lose respect for you, or worse, to burn out</code>. We’re not advocating that you pry into your team members’ personal lives, but being sensitive to personal situations that your team members are going through can give you a lot of insight into why they may be more or less productive at any given time. Giving a little extra slack to a team member who is having a tough time at home now can make him a lot more willing to put in longer hours when your team has a tight deadline to hit later.        A big part of tracking your team members’ happiness is <code>tracking their careers</code>.There are usually a few things that every engineer would like to do in the next five years: <code>get promoted, learn something new, launch something important, and work with smart people</code>. If you’re going to be an effective leader, you should be thinking about how you can help make all those things happen and let your team know you’re thinking about this. The most important part of this is to <code>take these implicit goals and make them explicit</code> so that when you’re giving career advice you have a real set of metrics on which to evaluate situations and opportunities.   Tracking happiness comes down to not just monitoring careers,but also giving your team members <code>opportunities to improve themselves</code>, <code>get recognized for the work they do</code>, and <code>have a little fun</code> along the way.</p></li>
<li>Other Tips and Tricks.

<ul>
<li>Delegate, but get your hands dirty.
  If you’re new to a leadership role, you probably need to work hard to <code>delegate work to other engineers</code> on your team, even if it will take them a lot longer than you to accomplish that work. Not only is this one way for you to <code>maintain your sanity</code>, but also it’s how <code>the rest of your team will learn</code>. If you’ve been leading teams for a while or if you pick up a new team, one of the easiest ways to <code>gain the team’s respect and get up to speed on what they’re doing</code> is to get your hands dirty—usually by <code>taking on a grungy task no one else wants to do</code>. You can have a résumé and a list of achievements a mile long, but nothing lets a team know how skillful and dedicated (and humble) you are like jumping in and actually doing some hard work.</li>
<li>Seek to replace yourself.
  This starts, as we mentioned earlier, with the hiring process: if you want a member of your team to replace you, you need to hire people capable of replacing you, which we usually sum up by saying you need to <code>“hire people smarter than you.”</code> Once you have the engineers capable of doing your job, you need to <code>give them opportunities to take on more responsibilities or occasionally lead the team</code>. If you do this, you’ll quickly see which engineers have the most aptitude to lead as well as which engineers want to lead the team.</li>
<li>Know when to make waves.
  You will (inevitably and frequently) have difficult situations crop up where every cell in your body is screaming at you to do nothing about it.It may be the engineer on your team whose <code>technical chops aren’t up to par</code>. It may be the engineer who <code>jumps in front of every train</code>. These are the situations whereyou need to <code>make the biggest waves and you need to make them now</code>. Rarely will these problems work themselves out, and the longer you wait to address them, the more they’ll adversely affect the rest of the team and the more they’ll keep you up at night thinking about them. By waiting, you’re only delaying the inevitable and causing untold damage in the process. So <code>act, and act quickly</code>.</li>
<li>Shield your team from chaos.
  When you step into a leadership role, the first thing you’ll usually discover is that <code>outside your team is a world of chaos and uncertainty (or even insanity)</code> that you never saw when you were an individual contributor.</li>
<li>Give your team air cover.
  While it’s important that you <code>keep your team informed about what’s going on “above” them in the company</code>, it’s just as important that you defend them from a lot of the uncertainty and frivolous demands that may be imposed upon you from outside your team. Share as much information as you can with your team, but don’t distract them with organizational craziness that is extremely unlikely to ever actually affect them.</li>
<li>Let your team know when they’re doing well.
  Just as you let someone know when he screws up, be sure to let him know when he does well, and be sure to let him (and the rest of the team) know when he knocks one out of the park.

<h2>People Are Like Plants</h2></li>
</ul>
</li>
</ol>


<p>Engineers are like plants: some need more light, and some need more water (and some need more bullshit, er, fertilizer). It’s your job as their leader to figure out which engineers need what and to then give it to them.</p>

<p>Instead of water and sunlight, you need to provide engineers with a combination of <code>motivation</code> and <code>direction</code> to make them happy and productive.</p>

<p>Giving direction is fairly straightforward—it requires <code>a basic understanding of what needs to be done, some simple organizational skills, and enough coordination to break it down into manageable tasks</code>. With those tools in hand you can provide enough guidance for an engineer in need of directional help. Motivation,however, is a bit more sophisticated and merits some explanation.</p>

<h3>Intrinsic Versus Extrinsic Motivation</h3>

<p>There are two types of motivation: <code>extrinsic</code>, which originates from outside forces (such as monetary compensation), and <code>intrinsic</code>, which comes from within.In his book Drive,Dan Pink claims you can increase intrinsic motivation by giving people three things:<code>autonomy, mastery, and purpose</code>.</p>

<p>An engineer has <code>autonomy</code> when she has the ability to <code>act on her own without someone micromanaging</code> her. With autonomous engineers, you might give them the general direction in which they need to take the product, but leave it up to them to decide how to get there. This helps with motivation not only because they have <code>a closer relationship</code> with the product (and likely <code>know better</code> than you how to build it), but also because it gives them a much <code>greater sense of ownership</code> of the product. The bigger their stake is in the success of the product, the greater their interest is in seeing it succeed.<code>Mastery</code> in its basest form simply means you need to give an engineer the <code>opportunity to learn new skills and improve existing skills</code>. Giving ample opportunities for mastery not only helps to motivate engineers, but also makes them better engineers over time, which makes for stronger teams. Ample opportunities for engineers to learn new things and master their craft will <code>keep them sharp, efficient, and effective</code>.
All the autonomy and mastery in the world isn’t going to help motivate someone if he’s doing work for no reason at all, which is why you need to <code>give his work purpose.</code>If you can help them to see this purpose in their work, you’ll see a tremendous increase in their motivation and productivity.One manager we know keeps a close eye on the email feedback the company gets for its product (one of the “smaller-impact” products), and whenever he sees a message from a customer talking about how the company’s product has helped the customer personally or helped the customer’s business, he immediately forwards it to the engineering team. This not only motivates the team, but also frequently <code>inspires them to think about ways they can make their product even better</code>.</p>

<h1>四.Dealing with Poisonous People</h1>

<h2>Defining “Poisonous”</h2>

<p>If you’re trying to build a highly efficient, fast-moving team, it’s important to focus on what you <code>don’t want</code>. While brilliant engineers can make your team faster and more efficient, certain <code>antibehaviors</code> can make your team slower and less efficient, and make your company a less comfortable place to work—and eventually erode the bonds that hold the team together.</p>

<p>The term poisonous person is a <code>nasty label</code> and automatically creates a dividing line between “us” (the good guys) and “them” (those nasty jerks). There’s a betterway to think about the problem. Instead of running your team as an elite fraternity with a mission to repel mean people, it’s healthier to create a culture that simply <code>refuses to tolerate certain negative behaviors</code>. It’s the behaviors you want to filter out, not particular individuals.</p>

<h2>Fortifying Your Team</h2>

<p>Poisonous people are a <code>direct threat</code> to your highfunctioning team. If you allow bad behaviors to persist, not only does your productivity decrease, but also you may find your culture slowly changing for the worse. The best defense is to fortify your culture through a strong set of best practices and procedures. We covered them in Chapter 2, but here’s a quick refresher:<em> Have a visible mission statement, to keep you focused on both your goals and nongoals.</em> Establish proper etiquette around email discussions. Keep archives, get newcomers to read them, and prevent filibustering by noisy minorities.<em> Document all history: not just code history, but also design decisions, important bug fixes, and prior mistakes.</em> Collaborate effectively. Use version control, keep code changes small and reviewable, and spread the “bus factor” around to prevent territoriality.<em> Have clear policies and procedures around fixing bugs, testing, and releasing software.</em> Streamline the barrier to entry for newcomers.* Rely on consensus-based decisions, but also have a process for resolving conflicts when consensus can’t be reached.</p>

<p>The more ingrained these best practices are,the more intolerant of poisonous behavior your community will be.</p>

<h2>Identifying the Threat</h2>

<p>What’s specifically at risk is your team’s <code>attention and focus</code>.</p>

<p><code>Attention and focus are the scarcest resources</code> you have. If you don’t actively protect these things, it’s easy for poisonous people to disrupt your team’s flow. Your team ends up bickering, distracted, and emotionally drained. Everyone ends up spending all their attention and focus on things other than writing great software.</p>

<p>What does a poisonous person look like? To defend yourself, you need to know what to look out for.</p>

<ul>
<li><p>Not Respecting Other People’s Time</p>

<p>  There are certain people out there who simply are unable to figure out what’s going on in a project. Rather than spending a few minutes of their own time reading fundamental project documentation, mission statements, FAQs, or the latest email discussion threads, they repeatedly distract the entire team with questions about things they could easily figure out on their own.</p></li>
<li><p>Ego</p>

<p>  Perhaps ego isn’t the perfect word here, but we’re using the term to describe anyone who is <code>incapable of accepting a consensus decision, incapable of listening to or respecting other points of view, and incapable of reaching compromises</code>.</p></li>
<li><p>Overentitlement</p>

<p>  Anytime you have a visitor who <code>demands that something be done</code>, your alarm should go off. The person puts all her energy into <code>complaining about the inadequacies</code> of the software, but is <code>unwilling to directly contribute</code> in any way.</p></li>
<li><p>Immature or Confusing Communication</p></li>
<li><p>Paranoia</p>

<p>  Sometimes an inappropriate sense of entitlement leads directly into open hostility toward a project. Many times we see it escalate into complete paranoia.When an existing team disagrees with the visitor, the poisonous person will sometimes start to throw accusations of a “cabal” and conspiracy.The recommendation here is to not even bother responding to such charges.</p></li>
<li><p>Perfectionism</p>

<p>  On the surface, perfectionists don’t seem dangerous at all. Sure, there may be a touch of odd obsessive-compulsive behavior now and then, but usually the person is humble, polite, respectful, and a good listener. He seems stuffed full of happy HRT and good intentions. What’s the problem, then? The problem is the threat of <code>paralysis</code>.</p></li>
</ul>


<h2>Repelling the Poison</h2>

<p>Bad behaviors will not be tolerated. If, after repeated warnings, the behavior doesn’t change, only then does it makes sense to consider formal rejection.</p>

<p>Concentrating your effort on removing toxic behavior is often enough to turn an intelligent (although perhaps socially awkward) person into a productive member of your team.</p>

<ul>
<li><p>Redirect the Energy of Perfectionists</p>

<p>  Once a good-enough solution is found for the original problem,point the perfectionist to a different problem that still needs attention.</p>

<p>  There’s an old saying to <code>not let “the perfect be the enemy of the good,”</code> and in your quest to create a high-performing team, you need to be just as vigilant about avoiding perfectionism as you are about calling out more obvious disruptive behaviors.</p>

<p>  This trick of redirecting energy also works on the overly entitled people who spend more time complaining and criticizing than helping out.Try getting him to take an interest in formally testing the software and pointing out regressions. It allows him to keep complaining, but in a useful way.</p></li>
<li><p>Don’t Feed the Energy Creature</p>

<p>  This works best against deliberate trolls—people who are purposely trying to get a rise out of you or your team.The <code>simple silent treatment often works best</code>. When the person realizes nobody’s paying attention, he typically loses interest and just leaves. Note that it often takes quite a bit of willpower to not respond. Stay strong!</p></li>
<li><p>Don’t Get Overly Emotional</p>

<p>  When somebody accuses you of making a bad design decision or of conspiracy, or simply wastes your time by asking too many questions whose answers are obvious, it’s easy to get upset.Remember that your job is to write great software, not to appease every visitor or repeatedly justify your existence.<code>Choose your battles carefully and keep calm</code>. Carefully decide who’s worth replying to, and who you’ll let be.</p></li>
<li><p>Look for Facts in the Bile</p>

<p>  Continuing on with the theme of staying clear of too much emotion, a corollary is to <code>actively look for facts</code>. If someone is complaining, listen carefully. Always start by giving the person the benefit of the doubt, despite the angry or rude language. <code>Does the person have a real point? Is there something to learn from the person’s experience, or is there an idea worth responding to?</code> Very often the answer is “yes”—that despite a poisonous person’s vitriolic prose, some wisdom really is buried in there. Always <code>bring the argument back to a technical discussion</code>.</p></li>
<li><p>Repel Trolls with Niceness</p>

<p>  Sometimes it’s possible to scare people away just by being too kind!</p></li>
<li><p>Know When to Give Up</p>

<p>  Sometimes no matter how hard you try, you simply need to flip the bozo bit and move on.</p></li>
<li><p>Focus on the Long Term</p>

<p>  If there’s a common theme in dealing with the distraction of poisonous people, it’s that it’s all too easy to get caught up in the immediate drama of a situation. If you’re witnessing what you think may be poisonous behavior, you need to ask yourself two critical questions:</p>

<ul>
<li>Despite the short-term loss of your team’s attention and focus, <code>do you truly believe the project will still benefit in the long run?</code></li>
<li>Do you believe the conflict will ultimately <code>resolve itself in a useful way?</code></li>
</ul>


<p>  If your answer to either of these questions is “no,” you need to intervene to stop the behavior as soon as possible.Somebody may be a great technical contributor but still exhibit poisonous behavior.There’s a temptation to turn a blind eye to the behavior in order to benefit from the technical advancement. But be careful! <code>A strong culture based on HRT is irreplaceable, while technical contributions are definitely replaceable</code>.</p>

<p>  To be totally explicit: <code>it’s not worth compromising your culture for the short-term gains</code>—particularly if it’s about a brilliant contributor who doesn’t acknowledge the importance of HRT.</p></li>
</ul>


<h1>五.The Art of Organizational Manipulation</h1>

<h2>The Ideal: How a Team Ought to Function Within a Company</h2>

<p>There are two levels of a properly functioning company: <code>your manager</code>, who you’ll deal with most of the time, and <code>the corporation beyond your manager</code>, which includes engineers, middle managers, executives, salespeople, lawyers, and so on.</p>

<h3>Your Life Under an Ideal Manager</h3>

<p><code>Pursue extra responsibility</code> as you’re getting your work done.The <code>proactive, responsibility-seeking</code> behavior reduces your manager’s workload because she has one less thing to worry about, and it shows that you’re <code>capable of doing work beyond your current level</code>. This also means you’ll <code>likely have to leave your comfort zone and try new things</code>, and that’s OK if you’re on a team where you’re encouraged to take risks and fail fast.</p>

<p><code>Take risks and don’t fear failure.</code>In the presence of an enlightened manager, failing is a great way to learn quickly, discover the limits of what you can and can’t do, and grow those limits over time.If you don’t fail at least once a year, you’re not taking enough risks. And like the pursuit of extra responsibility, taking risks is a way to show you’re capable of bigger things.If you don’t take risks in your work, you’ll have fewer failures, but you’ll have fewer big successes as well. A good manager wants a team that’s willing to push the envelope to see what they can and can’t do (and to learn a lot in the process), and she’ll provide a soft landing for when you fail. When you fail, take responsibility, don’t seek to assign blame, and document what happened and what you can do to avoid that same failure again. Lather, rinse, repeat.</p>

<p><code>Act like an adult.</code>you are responsible for teaching people how to act and how to treat you. Bad managers will frequently train their teams to act like children by squashing any initiative, responsibility, or rule breaking. If you’ve had one of these managers, you often come to expect this sort of treatment from all managers.</p>

<p><code>Question things</code> that you’re unsure about. If your manager makes a decision that you disagree with, don’t be afraid to argue with her or question the premise upon which she made the decision. While this isn’t a license to be an obstacle, being a “yes-man” isn’t helpful to someone in a leadership position if you’ve got information or experience that she lacks.</p>

<p><code>Your manager is not clairvoyant</code>: only rarely will you find a person in an organization who overcommunicates, so don’t hesitate to update your team’s leader on what you’re doing before she asks you what’s going on. Drop her a quick note when you hit an obstacle, score a victory, need something, or expect something.</p>

<h2>The Reality: When Your Environment Is an Obstacle to Your Success</h2>

<p>There are innumerable ways in which the environment in your company can work to prevent you from succeeding, but they can usually be divided into two major categories: <code>bad people</code> and <code>bad organizations</code>.</p>

<h3>Your Life Under a Bad Manager</h3>

<p><code>Fear of failure</code> is one of the most common traits of bad managers. This insecurity tends to make them very <code>conservative</code>, which is antithetical to the work style of the typical engineer. If your manager <code>doesn’t want you to take risks</code>, there is little opportunity for you to inject your own ideas into your product and you’ll usually wind up implementing (by rote) the product that someone else designed.</p>

<p>Oftentimes the insecure manager will insist on <code>inserting herself into any interaction you have with people outside your team</code>, thereby preventing you from speaking directly to other teams without “going through the chain of command.” This kind of manager will consider any direct contact you make with engineers outside your team or—heaven forfend—another manager, to be akin to mutiny or insubordination. If you need anything outside your team or their organization, this manager expects you to go through her, which allows her to <code>elevate her importance and subordinate you, thus giving her more power</code>.</p>

<h3>The Office Politician</h3>

<p>We advise that you <code>steer clear of the office politician</code>: route around him where possible, but don’t carelessly badmouth him to other people above him in the organization, because it’s quite difficult to know who he has hoodwinked and who is wise to him.If you don’t <code>put energy into getting promoted</code> because you don’t want to “play the game,” you may find that the office politician gets promoted over you, in which case you’ve now got a bad manager and an office politician.</p>

<h3>The Bad Organization</h3>

<p>As companies grow, they develop bureaucracy and processes in an effort to manage profit, reduce risk, increase predictability, and support the massive weight of the organization itself.Over time, this bureaucracy can grow to a point where it prevents the company from succeeding.
It’s a simple fact that most companies are not engineering-focused.That is to say: <code>engineers are a means to accomplish business goals that are typically not technical</code>. This means the people running the company probably don’t understand the technical underpinnings of their system, just the demands set upon them by the business, and so they wind up <code>creating unrealistic demands on engineering</code>.Typically you’ll see this directly in the form of <code>unrealistic deadlines</code> and <code>lack of qualified technical people</code> to get projects completed on time. You may have <code>difficulty acquiring enough hardware</code> to effectively run your product, or find your team spending weeks rewriting something when a hardware purchase costing only a few hundred dollars would have done the job. This is unfortunately typical of a company that doesn’t value engineers and treats them like slaves, giving them no voice in how the company operates.
The most egregiously bad organizations have ossified command and control structures that resemble fiefdoms.
Other companies are filled with people who are <code>obsessed with titles and organizational hierarchy</code>. This results in endless power struggles, with managers often <code>preventing engineers from transferring to another team</code> in order to protect their own team from losing a valuable contributor—even when the right thing to do for both the company and the engineer is to let the transfer happen.
Has your company ever <code>treated you like a naughty child</code>? Are you <code>unable to get to innocuous external websites</code> due to an overzealous company firewall? Do you have to carefully <code>account for every moment of your day with a detailed timecard</code>? Some organizations will even go so far as to <code>measure your productivity by meaningless  methods</code> such as the number of lines of code you write every week.Still other organizations will breed employees who judge their success not by the number and quality of products they ship, but by <code>the number of meetings</code> they’re invited to attend.
Lastly, your company might <code>lack important things like focus, vision,or direction</code>. This is often the result of too many masters, or “design by committee,” which results in conflicting orders being sent down to the rank and file. So you wind up moving in ever-tighter circles instead of in a coherent direction.</p>

<h2>Manipulating Your Organization</h2>

<p>Companies are made of rules: some of them can be bent, and others can be broken. Acknowledge the way things are, and focus on navigating your organization’s structure to <code>find the mechanisms you can use to get things done</code> and to <code>carve out a happy place for yourself</code> in your company. Whether you’re in a good organization or a bad one, there are a number of strategies that we’ve found to be quite effective at getting things done.</p>

<ul>
<li><p>“It’s Easier to Ask for Forgiveness Than Permission”</p>

<p>  It’s important to <code>know what you can get away with in your organization without explicitly getting approval</code> from one of your superiors, but wherever possible, we advise you to do what you think is right for the company.</p>

<p>  Even if you’re prepared to beg for forgiveness, <code>choose your battles wisely</code>.Be strategic and fight for things either that <code>matter</code> or that you’re <code>pretty sure</code> you have some chance of winning. Blowing all your capital on a battle you know you can’t win is pointless, stressful, and career limiting for no good reason.</p>

<p>  If you do decide to go the “beg for forgiveness” route, it’s useful to <code>have colleagues and friends in your company that you can use as a sounding board for your ideas</code>—especially your riskier ideas.These people should have a good sense of what you can and can’t get away with in the company as well as which ideas just won’t fly.</p></li>
<li><p>If You Can’t Take the Path, Make the Path</p>

<p>  Another strategy for making change in a company is to <code>find ways to get your ideas accepted at a grassroots level</code>. If you can get enough people to buy into your idea or use a particular product, it will often be too late for the bureaucracy to squash you, and management will be forced to notice and either accept it or act against it.</p>

<p>  Ideas in particular are fascinating things: <code>they can go a long way if you don’t care who gets the credit</code>! Sometimes you’ll find that people will spread an idea only if they can take credit for the idea as their own.Despite the fact that it may pain you to hear your words coming out of another  person’s mouth, it’s often the only way for an idea to travel.Think about the broad audience that your idea—which would otherwise go unheard—can reach in this case!</p>

<p>  Just as with individuals, eliminating bad habits in a company is difficult.It’s impossible to simply stop a bad habit; you need to <code>replace it with a good habit</code>.Don’t like a certain weekly meeting? Replace it with a different kind of meeting or alternate (more effective) ritual. Don’t like a useless reporting process? Don’t complain about it; write a useful one that’s too compelling to ignore.</p></li>
<li><p>Learn to Manage Upward</p>

<p>  Whether you’re a manager or an individual contributor, you need to spend some of your time managing upward. By this we mean you need to try to ensure that both your manager and the people outside your team are not only aware of what you’re doing, but are <code>aware that you’re doing it well</code>. Some engineers find this mode of <code>“selling yourself”</code> distasteful, and it may remain so, but the benefits of doing this are huge.</p>

<p>  We’re not advocating that you sandbag all your estimates and pad out your deadlines, but wherever you can, try to <code>avoid promising things that you can’t deliver</code>, even if it means saying “no” more often than you’d like. If you constantly miss deadlines or drop features, other people in the company will have less of a reason to trust you and will most likely pass over you when they’re looking for someone to get something done.</p>

<p>  As an engineer, try to <code>focus your energies on launching products over just about everything else</code>. Shipping things gives you <code>credibility, reputation, and political capital</code> more than just about anything else in a company. Launching your product is a <code>high-visibility event</code> that shows you’re accomplishing something.If you dedicate more than half of your time to the <code>defensive work</code>, it’s hardly valued at all and you’ll find yourself in the somewhat embarrassing position of having nothing (politically) important to show for your time.</p>

<p>  <code>“Offensive” Versus “Defensive” Work.</code> Offensive work is typically effort toward <code>new user-visible features</code>—shiny things that are easy to show outsiders and get them excited about, or things that <code>noticeably advance the sexiness of a product</code> (e.g., <code>improved UI, speed, or interoperability</code>).Defensive work is effort aimed at the <code>long-term health</code> of a product (e.g., <code>code refactoring, feature rewrites, schema changes, data migration, or improved emergency monitoring</code>). Defensive activities make the product more maintainable, stable, and reliable. And yet, despite the fact that they’re absolutely critical, you get <code>no political credit</code> for doing them. If you spend all your time on them, people perceive your product as holding still. And to make wordplay on an old maxim: “Perception is nine-tenths of the law.”<code>A team should never spend more than one-third to one-half of its time and energy on defensive work</code>, no matter how much technical debt there is. Any more time spent is a recipe for political suicide.</p></li>
<li><p>Luck and the Favor Economy</p>

<p>  Lucky people “are <code>skilled at creating and noticing chance opportunities.</code>” We think the same tenet applies to creating opportunities in companies: if you perform your job to the letter of the law and focus only on getting your own work done to the exclusion of all else, there will be few chance opportunities for you. If you <code>help others get their jobs done when given the chance</code>, even when it’s not part of your job, there’s no guarantee that they’ll return the favor, but many people will gladly repay the favor in the future if given the chance.</p>

<p>  Every company has this sort of <code>gray-market favor economy</code> that lives outside the org chart.There’s usually something you can quickly and easily do that benefits your company but is someone else’s job, and if you keep your eyes open for the chance to do these things, you <code>earn a bit of credit</code> in this favor economy.Think of these credits as a series of small bets: <code>some will never pay you back, others will pay even money, and still others will pay enormous dividends</code>.Even if you never get “paid back” you’ll often <code>learn something new</code> in the process of helping someone, and it feels good to help other people, so what do you have to lose other than a little time and effort?</p>

<p>  One of the most interesting things about the favor economy is that <code>your account doesn’t just empty out when you leave a job or a company</code>—you’ll frequently be able to call on folks at your company for a hand even after you’ve left.The tech industry is a lot smaller than you think, and people talk more than you think, so the guy you stick it to today might very well be the person who kills your job application 10 years from now.</p></li>
<li><p>Get Promoted to a Position of Safety</p>

<p>  In most companies you need to put some amount of effort into <code>“playing the promotion game”</code> to get yourself promoted(usually in addition to excelling at your job).</p>

<p>  The higher in the organization you can get (either as an individual contributor or as a manager), the <code>more control</code> you’ll have over your destiny inside the company. Putting a modicum of effort toward getting promoted when you’re comfortable in your position is a great way to <code>invest in your security and happiness</code> when something bad happens to your company or team. <code>Keep track of your accomplishments and use them in your self-assessment</code>. Update your résumé and share it with your manager or promotion committee.<code>Read up on the promotion process</code> and talk to your manager about what boxes you need to tick off to get promoted, and methodically work to tick off every box. Even if getting promoted is subjective and nondeterministic, there’s a lot you can do to increase the odds in your favor.</p></li>
<li><p>Seek Powerful Friends</p>

<p>  Every company has a <code>“shadow” org chart</code> that is unwritten but through which power and influence flow. There are only a few different types of people who make up the nodes in this graph:</p>

<p>  <code>Connectors</code> are people who know people in every corner of the organization, and if they don’t know someone on a team, they can find the right person for you. Sometimes getting something done is just a matter of finding the right person to speak to, and the connector can help you find that person.</p>

<p>  <code>Old-timers</code> may not have a high rank or fancy title, but they typically carry a lot of institutional knowledge and wield a lot of influence just because they’ve been around for a long time. These are great people to go to when you’re trying to understand why the organization works in a certain way, or if you need a supporter that a lot of people respect.</p>

<p>  <code>Administrative assistants</code> wield an enormous amount of power and influence in an organization because they are agents of the executives they work for. More importantly, they usually do an incredible amount of work to keep things running smoothly, so anger them at your own (and your career’s) peril. And never pass up a chance to be nice to an administrative assistant.</p>

<p>  One thing to note about all of these people is that, despite all the advances in social media and videoconferencing technology, nothing even comes close to <code>the bandwidth and the intimacy of being face to face with someone else in real life</code>.If you have an important meeting with someone in your company and you have the budget to be there in person, it’s almost always worth the hassle of traveling. The impact of an <code>in-person discussion etches itself into memory</code> in ways that phone or video chats can’t compete with.</p>

<p>  <code>You.</code> It’s always <code>easier to manipulate your organization when you’re higher on the org chart</code>, so even if you’re happy with your salary and current job, it’s worth it to keep working toward your next promotion, even if you’re working at the ideal company. Remember: if everything goes to hell, you’re going to be in a much better place to survive unscathed if you’re at the top looking down.</p></li>
<li><p>How to Ask a Busy Executive for Anything &hellip; via Email</p>

<p>  <code>“Three Bullets and a Call to Action”</code> technique, and it will drastically increase your chances of getting action—or at the very least, a response—from just about anyone you email out of the blue asking for something,not just an executive.</p>

<p>  A good Three Bullets and a Call to Action email contains (at most) <code>three bullet points detailing the issue at hand</code>, and <code>one—and only one—call to action</code>. That’s it—nothing more. You need an email that can be easily forwarded along.The bullet points should be <code>short sentences</code> (each one should fit onto a single line without wrapping), and the call to action should be as short as possible.Your email should be loaded with HRT: <code>polite, respectful, and devoid of grammar mistakes and spelling errors</code>.If you positively cannot help yourself and simply must include more background or information, put it at the very end of your email (even after your signature), and label it clearly as “More details” or “Background.”</p></li>
</ul>


<h2>Plan B:Get Out</h2>

<p>If you can’t change the system, there’s no point in continuing to put energy into changing it. Instead, <code>put energy into leaving it</code>: update your résumé, and start asking your close friends if they know of any openings for you at other companies. Train yourself in new things. One of the great things about being an engineer in this day and age is that good engineers are in high demand, and that gives you the ability to control your own future.</p>

<p>Once you realize you have this control, it’s incredibly liberating.If you poke around and discover that you have other job options available to you, you may discover that you suddenly get a lot more things done at your work (under a lot less stress) because it’s not the end of the world if your current employer fires you!</p>

<p>Do the right thing, wait to get fired.</p>

<h1>六.Users Are People,Too</h1>

<p>“Good software” is an overly narrow definition of success. If you’re trying to pay the bills you also need a lot of other people to use your software and be happy with it. The software development process doesn’t end with throwing a product over a wall; it never ends, in fact. People use your software and you need to react to them, improving the product over time. If you don’t learn how to master this feedback loop your software will die.</p>

<p>We’ll examine three general phases of user engagement in this chapter. First you need to <code>get users to notice your software</code>—are they even aware that it exists? How do they perceive it before they walk in the door? Then you’ll need to think about <code>what people experience when they start using your software</code>. Does it meet their expectations? Is it usable? Does it empower them to do great things? Finally, we’ll look at <code>how to interact productively with them</code> once they’re firmly engaged with your creation. All of these interactions are part of the cyclical nature of software development.</p>

<h2>Managing Public Perception</h2>

<p>Programmers tend to have an overdeveloped sense of logic, but most humans are driven equally by <code>logic and emotion</code>. The marketing folks are masters of emotional manipulation, and that’s why they’re so effective: they mix the facts with feelings to get attention. If you want to get new people to use your software, you have to <code>care about their emotional perception</code> of your software. You cannot change the way people make decisions.</p>

<ul>
<li><p>Pay Attention to First Impressions</p>

<p>  What is your software like to a <code>newbie</code>? Is it <code>welcoming</code> and does it <code>encourage exploration</code>? Conversely, for an <code>expert</code> who sits down to an initial session with your software, does it appear <code>familiar and sensible</code>? At first glance, does your app scream <code>instant productivity</code>,or steep learning curve and countless tears? More specifically,what does a user experience in the first 30 seconds after launching your software? Don’t just give an intellectual answer (“she sees a menu of choices, with a login box”) but give an <code>emotional answer</code> too. How does a new user feel after a minute? <code>Empowered or just confused</code>? What can you do to improve that feeling? Step back a level and look at your product’s website. Does it seem <code>professional and inviting</code>, like a good storefront? You need to take these things seriously for your software to be taken seriously.</p></li>
<li><p>Underpromise and Overdeliver</p>

<p>  Don’t let your marketing people preempt you here. If users ask about upcoming features or release timelines, take the opportunity to give overly conservative estimates.</p></li>
<li><p>Work with Industry Analysts Respectfully</p>

<p>  A good (or bad) review can make or break a product’s perception. Engineers tend to resent this sort of power and deference, though.Passive-aggressively fighting the system—no matter how irritating it is—just doesn’t make sense.Should the reviewer get preferential treatment? Probably not. But is it worth sticking it to him as a matter of principle? Probably not. You’re only hurting yourself in the process. Choose your battles carefully.</p></li>
</ul>


<h2>How Usable Is Your Software?</h2>

<p>You, as an engineer, are a terrible evaluator of your software’s usability. An interface that seems totally reasonable to you may very likely make your nontechie neighbor pull out her hair in frustration.</p>

<p>Focus on the user, and all else will follow.</p>

<ul>
<li><p>Choose Your Audience</p>

<p>  First things first: imagine your users fall across a spectrum of technical competence.</p></li>
<li><p>Consider Barrier to Entry</p>

<p>  Now think about the <code>first-time</code> users of your software. How hard is it to get going for the first time? If your users can’t easily try it out, you won’t have any. A first-time user usually isn’t thinking about whether your software is more or less powerful than a competitor’s;she just wants to get something done.Quickly.</p>

<p>  The first time your software runs, <code>don’t</code> present the user with a giant form to fill out or a giant panel of mandatory preferences to set.Forcing the user to create some sort of new account is pretty offputting as well; it implies long-term commitment before the user has even done anything. All these things send the user screaming in the other direction.</p>

<p>  If your product is a web application, make sure it <code>loads quickly</code>!When programmers make users wait in line at the entrance, that’s an irritating barrier to entry. The web browser makes it easy to walk away and redirect our attention to 12 other places.</p>

<p>  If you’re skeptical about your own product’s barrier to entry, try doing some simple tests. <code>Give your software to ordinary humans—both technical and nontechnical—and observe their first minute or two</code>. You may be surprised at what you discover.</p></li>
<li><p>Measure Usage, Not Users</p>

<p>  In pondering the size of your user base and whether it’s easy to get started, you should also consider how you measure usage. Notice that we said <code>usage, not installs or registered users</code>—you want a high number of users who use your product, not a high number of times people download your product.</p>

<p>  Usage is something that many companies (including Google) spend a lot of time measuring. Common metrics include <code>“7 day actives” and “30 day actives”</code>—that is, how many users have used the software in the past week or month. These are the important numbers that actually tell you how well your software is doing. <code>Ignore the download counts</code>. Figure out a way to measure ongoing activity instead. It’s the true indicator of software uptake.</p></li>
<li><p>Speed Matters</p>

<p>  Most programmers vastly <code>underestimate the importance of application speed</code> (or latency, which sounds more scientific). When a program responds quickly, it has a deep <code>subliminal effect</code> on users. They start using it more and more because it feels <code>frictionless</code>. It becomes an <code>unconscious extension</code> of their abilities. On the other hand, a slow application becomes increasingly frustrating over time. Users start using the software less and less, often without even realizing it.</p>

<p>  Even small improvements in latency matter when you’re serving a web-based application.Improving latency is one of the best ways to increase usage and make your users happy. <code>“Speed is a feature.”</code></p></li>
<li><p>Don’t Be All Things</p>

<p>  Some of the best software succeeds because it <code>defines the problem narrowly and solves it well</code>. Instead of solving every problem badly, it solves really common problems for most users and does it really well.</p></li>
<li><p>Don’t Be Lazy</p>

<p>  Making software easy for users can be a great annoyance to the programmer. Focus on the user, not what’s convenient for you to code. If it’s annoying to code, just suck it up anyway.</p></li>
<li><p>Hide Complexity</p>

<p>  An elegant design <code>makes easy things easy and hard things possible</code>. Even when doing complex things your software should <code>feel seamless and easy.</code></p>

<p>  While masking complexity is laudable, it is not a goal to seal the software so tight that it ends up handcuffing all your users. Hiding complexity almost always involves creating <code>clever abstractions</code>, and as a programmer you need to assume that the <code>abstractions will eventually “leak.”</code></p>

<p>  Not only is it important to keep the interface flexible and able to be circumvented; the user’s <code>data needs to be accessible</code> as well.Software shouldn’t lock users in, no matter how elegant the interface is. By allowing users to open the hood and do whatever they want with their data, it forces you to compete honestly: people use your software because they want to,not because they’re trapped. It’s about engendering trust, which is your most sacred resource.</p></li>
</ul>


<h2>Managing Your Relationship with Users</h2>

<p>Many users <code>want to have a relationship</code> with your company or team. Happy users want to know what’s going on with your software’s evolution; angry users want a place to complain.</p>

<p>In reality, customer service isn’t a nasty, soul-draining task; nor is it something that other people do. It’s a philosophy to live by—a way of thinking about your ongoing connection to users. It’s something you need to <code>do proactively as a software team</code>, not as a mere reaction to external complaints.</p>

<p>Even if they make inane suggestions or clueless complaints, the most important thing you can possibly do is <code>acknowledge</code> them. The more you allow them to participate in the discussion and development process, the more loyal and happy they’ll be. You don’t have to agree with them, but you still need to <code>listen</code>.</p>

<p>Many corporations do everything they can to put up <code>walls of bureaucracy between programmers and users</code>. They create voicemail trees to navigate through or file complaints as “help tickets” that are tracked by layers of people who aren’t actually writing the software. Messages are <code>relayed only indirectly</code> through these layers, as though direct contact with the dangerous rabble might <code>endanger developers (or pointlessly distract them from coding)</code>. This is how users end up feeling ignored and disempowered and how developers end up completely <code>disconnected</code>.</p>

<p>A much better mode of interaction is to <code>directly acknowledge users</code>.Give them a public bug tracker to complain in and respond to them directly.Create an email list for them to <code>help one another</code>.The more “human” you appear to users, the more they trust in the product,and despair begins to lessen.Only through true dialogue can you discover what they’re <code>really doing with your software</code>, possibly something clever or thrilling.</p>

<ul>
<li><p>Don’t Be Condescending</p>

<p>  When you finally have an opportunity to interact with them, the most important thing to remember is to <code>avoid condescension</code>. Being a savvy computer user is not a fair measure of general intelligence. A lot of brilliant people out there use computers as a tool and nothing more.Users don’t want to participate in the analysisprocess; they just want to get some work done. It has nothing to do with intelligence! Give users respect by default.</p></li>
<li><p>Be Patient</p>

<p>  Most users simply <code>don’t have the vocabulary to express their problems succinctly</code>. It takes years of practice to learn to understand what they’re saying.Half of the discussion comprises just trying to agree on the same vocabulary.The critical listening skill here is to learn to understand what people <code>mean</code>, not necessarily to try to interpret what they <code>literally</code> say. It requires not just some <code>language translation</code>, but some <code>emotional intelligence</code> as well. And <code>mind reading</code>.</p></li>
<li><p>Create Trust and Delight</p>

<p>  <code>Trust</code> is a tricky term.When a user trusts your team (or your company) it’s mainly an <code>emotional state</code>.They trust you because the cumulative set of interactions they’ve had with you add up to an overall emotionally positive state.Remember, <code>there is no such thing as a temporary lapse of integrity</code>.</p>

<p>  Screw your customers just a teeny bit every now and then, and eventually they view the relationship through a veil of aggregated disdain. On the other hand, every time your team does something helpful or useful, or is responsive, a bit of trust is added to an imaginary bank account in their minds.Over years of dealings the trust account grows and grows until the mention of your product brings a warm, fuzzy feeling.</p>

<p>  Trust can be <code>dangerous</code>, however, because it can be blown all at once—just like a bank account can be drained with a single stupid, impulsive, overpriced purchase. If your company does something that shows a total lack of respect for users (even if by accident), the trust bank is emptied overnight.</p>

<p>  Trust is your most <code>sacred resource</code>. Watch it carefully. Measure the size of the bank account. Before every move, think about how it will affect the bank account. <code>Focus on your long-term image</code>, not short-term conveniences.</p>

<p>  <code>Delight</code> is another feeling that can vastly improve your relationship with users. It’s a way of increasing that warm, fuzzy feeling, and making your team seem more human.Adding bits of delight and humor—tactfully—goes a long way toward showing that you’re actually paying attention to users and care about your relationship with them.</p></li>
</ul>


<h2>Remember the Users</h2>

<p>In the end, it all boils down to three simple concepts that you can stick in your pocket:</p>

<ul>
<li>Marketing     Be aware of how people perceive your software; it determines whether they even try it out.<em> Usability
  If your software isn’t easy to try, fast, friendly, and accessible, users will eventually walk away.</em> Customer service    Proactive engagement with long-term users affects your software’s evolution and user retention.</li>
</ul>


<p>Our day jobs as programmers are so <code>full of distractions—code reviews, design reviews, fighting with our tools, putting out production-related fires, triaging bugs</code>—that it’s easy to forget <code>the reason we’re writing software</code> at all. It’s not for you, or your team, or your company. It’s to <code>make life easier for users</code>. It’s critical to pay attention to what they’re thinking and saying about your product and how they’re experiencing it over the long run. Your users are the lifeblood of your software’s success.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhone &amp; iPad App Marketing Checklist]]></title>
    <link href="http://xuguoxing.github.io/blog/2015/05/14/iphone-and-ipad-app-marketing-checklist/"/>
    <updated>2015-05-14T11:40:25+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2015/05/14/iphone-and-ipad-app-marketing-checklist</id>
    <content type="html"><![CDATA[<p><a href="https://sensortower.com/iphone-app-marketing">https://sensortower.com/iphone-app-marketing</a></p>

<ol>
<li><p>Icon and Icon and Screenshots</p>

<p> Visuals that show off your App are vital for success</p>

<ul>
<li><p>Design a good meaningful icon</p>

<p>  Great Icons dive up conversion</p>

<p>  Having a great icon that explain the app&rsquo;s functionality can greatly increase App downloads. Icons that are too abstract or company logos do not perform as well. Here are some good best practices when <a href="http://www.pixelresort.com/blog/iphone-App-icon-design-best-practises/">designing icons</a>.</p></li>
<li><p>Test App icon for conversion</p>

<p>  A Well converting icon greatly increase downloads.</p>

<p>  Having an interesting and pretty icon is great,but one that converts really well is even better. Try running some <a href="https://en.wikipedia.org/wiki/A/B_testing">A/B Tests</a> on your icon via banners or within other apps to measure conversion.</p></li>
<li><p>Select good first screenshot</p>

<p>  Most users decide based on the first screenshot.</p>

<p>  The first thing every user sees when looking at your app is the icon and the screenshot. The initial screenshot is essential to convince users that your app delivers on the functinality they are looking for. Learn how to design a <a href="http://blog.sensortower.com/blog/2013/05/05/why-iphone-app-screenshots-matter-and-how-to-make-good-ones/">great first screenshot</a> for your app.</p></li>
<li><p>separate screenshots for different devices.</p>

<p>  Optimizing for multiple device is essencial.</p>

<p>  While there are more iPhones then iPads, supporting all the different devices is still important. Having an iPad specific version can do wonders for app exposure. iOS8 is also right around the corner. Learn about supporting <a href="https://developer.apple.com/ios8/">iOS8</a> and <a href="http://www.raywenderlich.com/1111/how-to-port-an-iphone-application-to-the-ipad">universal apps</a>.</p></li>
<li><p>Use all five screenshot slot</p>

<p>  Show the user the depth of the App</p>

<p>  You get five screenshots to show off your app &mdash; use all of them! Make sure your screenshots convery your app&rsquo;s strengths and are enticing for the users.There are great articles about <a href="http://www.designboost.net/how-to-design-iphone-screenshots-that-sell/">apps with great screenshots</a>, or you can learn from <a href="https://sensortower.com/ios/rankings/top/iphone/us/all-categories">top ranking apps</a> that do this well.</p></li>
</ul>
</li>
<li><p>Conversion</p>

<p> Your need to be able to convince users to install the app.</p>

<ul>
<li><p>Write a good description</p>

<p>  Descriptions convince users to install.</p>

<p>  Users that aren&rsquo;t convinced to install right away will read your description to make up their mind. Focus on the first few lines that are visible on the phone and don&rsquo;t be afraid to test similar to how <a href="http://futureperfectpublishing.com/2009/01/23/the-sticky-goodness-of-testing-book-titles-with-google-adwords/">book authors use Google Adwords</a>. A well converting description make your other effort easier.</p></li>
<li><p>Create an app Website</p>

<p>  You need one to support users, so might as well promote your app there.</p>

<p>  Your will need an App Website to support your users &mdash; you might as well promote your app there too! <a href="http://www.apptamin.com/blog/app-landing-page-or-website/">A good app loading page</a> can drive traffic to your app.</p></li>
<li><p>Give your app a boost with paid Ads</p>

<p>  Ads are expensive,but they work.</p>

<p>  If you have a budget to spend money on app Ads,there are a lot of options. <a href="http://www.mobileapptracking.com/">Mobile App Tracking</a> is an all-in-one SDK that&rsquo;s popular with games, and <a href="https://developers.facebook.com/blog/post/2012/08/07/introducing-new-mobile-ads-for-apps/">Facebook Ads</a> have recently taken off.</p></li>
<li><p>Cross promote within your other apps</p>

<p>  Your other apps can drive installs to your new app</p>

<p>  Many successful publishers like Rovio,Halfbrick and SuperCell use app cross promotion, and their efforts can put an app to the top of the chars.While not every app might have the same kind of reach,any sort of boose your app can get is helpful.</p></li>
<li><p>Record an App trailer and video</p>

<p>  Video engages your user more.</p>

<p>  A great video showcasing your app can entice users to try it out. You can place it on your app&rsquo;s landing page to give a quick overview of your app&rsquo;s functionality. Take a look at some <a href="http://www.appolicious.com/tech/articles/8746-guest-blog-great-resources-for-building-a-killer-app-trailer">trailer resouces</a> or get a service to <a href="http://apptamin.com/">make one</a> for you.</p></li>
</ul>
</li>
<li><p>Search Visibility</p>

<p> Apps that show up often in the App Store get many more download.</p>

<ul>
<li><p>Optimize keywords for Search Visibility</p>

<p>  App Store Visibility can be difference between success and an app withering out of sight.</p>

<p>  You can&rsquo;t rely on ads or Apple featureing your app as your distribution strategy. Being visibile in App Store Search is a critical step most app developers forget &mdash; avoid these <a href="http://blog.sensortower.com/blog/2012/09/25/most-common-itunes-connect-keyword-mistakes/">common iTunes Connect keyword mistakes</a> and you will stand above most app.</p></li>
<li><p>Write a good App Title tagline</p>

<p>  Your app&rsquo;s title helps with search visibility and conversion.</p>

<p>  While short app titles are good lokking, for titles other than games having a tagline after the app name(ie.<a href="https://itunes.apple.com/us/app/notability-take-notes-annotate/id360593530?mt=8">Notablity &ndash; Take Notes &amp; Annotate PDFs</a>) both help with app store visibility and with explaing to your users what your app is about.</p></li>
<li><p>Research competing Apps</p>

<p>  Let your competitors do your research for you.</p>

<p>  Knowing what your competitors do well and where they lack is often important for the way you position your own app. <a href="https://sensortower.com/node/discover-new-apps-for-iphone-and-ipad.html">Research</a> your competitor&rsquo;s apps and don&rsquo;t make the mistakes they do.</p></li>
<li><p>Internationalize the App&rsquo;s metadata</p>

<p>  There are a lot of users outside the US.</p>

<p>  While the US market is the biggest,ignoring other markets is often a mistake. Most of the top charting apps are very <a href="https://sensortower.com/ios/us/teamlava/app/dragon_story/513474544">international</a> and over 75% of their users come outside the US. Plus there is less competition between international apps, so <a href="https://developer.apple.com/internationalization/">localize your meta-data</a>.</p></li>
<li><p>Make your App Free!</p>

<p>  Free apps make more profit.</p>

<p>  The majority of top overall grossing apps are all <a href="https://sensortower.com/ios/rankings/top/iphone/us/all-categories">free with in-app-purchases</a>.Making your app free can drive exposure to your app, and typically free apps have more than one <a href="http://techcrunch.com/2012/08/26/how-free-apps-can-make-more-money-than-paid-apps/">monetization stratedy</a>.</p></li>
</ul>
</li>
<li><p>Socail Outreach</p>

<p> Engagind with users and social infuencers helps you maintain momentum.</p>

<ul>
<li><p>Get friends &amp; family to rate the app five stars</p>

<p>  Fake it until you make it.</p>

<p>  Initial reviews are really important and users are more likely to download an app with a five star rating and stellar reviews. This is especially essential whe you are just releasing a new version update &mdash; get it rated highly as quick as possible.</p></li>
<li><p>Create and maintain Facebook &amp; Twitter page</p>

<p>  Social Pages let your users interact with eachother.</p>

<p>  While large apps need <a href="http://forum.supercell.net/forumdisplay.php/4-Clash-of-Clans">bulletin boards</a> so users can engage with eachother, most apps can get away with just a Facebook and Twitter page.</p></li>
<li><p>Participate in social media</p>

<p>  Social meida crates buzz.</p>

<p>  Social influencers can be great, and engaging with them via something like <a href="https://hootsuite.com/">Hootsuite</a> or getting them to <a href="http://www.chasm.io/">cover you</a> can give your app a strong presence online. Having an active twitter and facebook page where you converse with fans and reach out to influencers can drive engagement.</p></li>
<li><p>Get in touch with social influencers,blogs and journalists</p>

<p>  Get influencial people to promote your app.</p>

<p>  Bloggers and social influencers can bring a greate amount of traffic to your app. You can reach out to <a href="http://maniacdev.com/2012/05/ios-app-review-sites">App Review</a> sites or <a href="http://technorati.com/blogs/top100/">Tech Blogs</a> to get influencial writers to cover you(just make sure to have an interesting story about your app!)</p></li>
<li><p>Post on forums, mailing lists,meetup groups</p>

<p>  Utilizing social groups like forums and groups can bring your users.</p>

<p>  About half of your time as an app developer should be spent marketing your app,and reaching out to already existing groups like nice forums,mailing lists or <a href="http://www.meetup.com/find/">Meetup</a> groups that have the established customer bases to help you reach more users.</p></li>
</ul>
</li>
<li><p>Viral Growth</p>

<p> If each of your users brings a friend your App grows virally.</p>

<ul>
<li><p>implement share-friendly SDKs</p>

<p>  Sharing is caring.</p>

<p>  SDK like <a href="http://kamcord.com/">Kamcord</a> let users record videos and engage with other users. Multipalyer turn based SDKs like <a href="http://www.makegameswith.us/sdk/">MGWU</a> let you develop games easier, and platforms like Gamecenter or Openfeint let you have easy scoreboards.</p></li>
<li><p>prompt users to share via Facebook,Twitter &amp; email</p>

<p>  Virality is best achieved by leveraging social networks.</p>

<p>  Most users are using Facebook or Twitter, so having an easy way for them to tell their friends about a great app lowers the barrier for sharing. If you get each one of your users to bring an extra friend,your audience will grow. Giving your users a reason to share within the app works best.</p></li>
<li><p>Ask engaged and happy users to review</p>

<p>  Reviews give your app social proof.</p>

<p>  Implement an SDK like [<a href="https://github.com/arashpayan/appirater">https://github.com/arashpayan/appirater</a>] and ask your engaged and happy users to leave a review. The common way to do this is prompt users after x hours or y opens to answer if they like the app, and send the ones who don&rsquo;t to yours support email while prompting happy users to leave a review.</p></li>
<li><p>Figure out monetization</p>

<p>  Free is best!</p>

<p>  The top grossing apps are free apps with in-app-purchases. The barrier to download is almost non-exist when the app is free. If you must take your app paid, you&rsquo;d better have a good reason(like ethically avoding ads) and feel free to test different price points.</p></li>
<li><p>Prepare an App update</p>

<p>  You can only change some things with an app update.</p>

<p>  Some things, like adding new keywords, screenshots or changing the title can only be done with an app update.Unless your app includes many change files,Apple is good about <a href="https://developer.apple.com/library/ios/#qa/qa1779/_index.html">keeping the file download size down</a>.Users perfer to download recently updated apps.</p></li>
</ul>
</li>
<li><p>App Analytics</p>

<p> Metrics and insight into how users use your App create success.</p>

<ul>
<li><p>Track Downloads</p>

<p>  Apple&rsquo;s tools don&rsquo;t quite cut it.</p>

<p>  Keeping track of downloads on a per app basis day to day and being able to sparate them by country or region is essencial. <a href="https://sensortower.com/">Sensor Tower</a> and many others like App Annie,Distimo,etc provide tools to track downloads.</p></li>
<li><p>Control incoming web-links</p>

<p>  It&rsquo;s like Bit.ly</p>

<p>  At the very least every incoming link  should be going through a url shortener so you can track how many people clicked trought each source. Give your blog mentions and other web-links a specific url, or implement your own and direct users to a correct App Store.</p></li>
<li><p>Implement in-App Analytics</p>

<p>  Know what your users do within the app.</p>

<p>  Things like <a href="http://apsalar.com/blog/2012/01/how-to-use-cohort-analysis-to-improve-revenue/">Cohort Analysis</a> help you understand how your users behave.Use SDKs like <a href="https://mixpanel.com/">Mixpanel</a> or <a href="https://amplitude.com/">Amplitude</a> to keep track of usage patterns so you can have a data-driven approach to improving your app.</p></li>
<li><p>Crash Reporting</p>

<p>  Catch crashed before they turn into bad reviews.</p>

<p>  Crash reporting and performance analytics can help you catch and prevent dreadfully negative reviews. SDKs like <a href="https://crittercism.com/">Crittercism</a> can help you track crashes and performance problems.</p></li>
<li><p>Keep track of Search Visibility</p>

<p>  How do users download your apps?</p>

<p>  Tracking search visility within the App Store is something every developer should do &mdash; whether you do it via manual entry into a spreadsheet or using tools like [Sensor Tower] you&rsquo;ll always be better off is you know and improve how users can find your app within the App Store.</p></li>
</ul>
</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sentence]]></title>
    <link href="http://xuguoxing.github.io/blog/2015/05/01/sentence/"/>
    <updated>2015-05-01T12:10:52+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2015/05/01/sentence</id>
    <content type="html"><![CDATA[<ul>
<li>Some will tackle questions head on, while others will dodge them entirely. 有些人会直面问题，而有些人则会完全的闪避问题。</li>
<li>Only the paranoid survive. 只有偏执狂才能生存</li>
<li>The greater fool is someone with the perfect blend of self-delusion and ego to think that he can succeed where others have failed. 大傻瓜身上完美的融合了自欺与自负，他自认为能在他人失败之处获得成功。</li>
<li>Don&rsquo;t tamper with my business. 别干预我的事。</li>
<li>A stumble may prevent a fall. 小疾防大病</li>
<li>What stumble you? 什么让你这么犹豫不决？</li>
<li>The invaders brazened their way into our motherland. 侵略者肆无忌惮地闯入了我们的祖国。</li>
<li>Her voice was full of anxiety. 她的声音饱含焦虑。</li>
<li>Local politicions have reacted with dismay and indignation. 当地政客们做出了恐慌和愤慨的反应。</li>
<li>He&rsquo;d been a fisherman all his life and was familiar with the fury of the sea.</li>
<li>The hurricane winds agitated the sea. 飓风掀起海浪。</li>
<li>Harassment and intimidation. 骚扰和恐吓。</li>
<li>He is messing up. 他陷入困境</li>
<li>Our travel arrangements have been messed up by the ticket office. 我们的旅行安排被售票处搞乱了。</li>
<li>The wind will mess my hair up. 这风要吹乱我的头发。</li>
<li>The impact dented our car&rsquo;s fender. 碰撞把我们汽车的挡泥板给撞凹下去了。</li>
<li>No sane person wished to see conflict or casualties. 理智的人都不希望看到冲突或伤亡.</li>
<li>Appetite comes with eating. (尝到甜头)胃口越吃越大。</li>
<li>Do not inconvenience yourself for my sake. 不要因我而太麻烦你自己。</li>
<li>At times the arrogance of those in power is quite blatant. 有时那些当权者的傲慢很露骨。</li>
<li>Call it what you like, but it was blatant idolatry. 随你喜欢怎么去说，但这仍然是公然的盲目崇拜。</li>
<li>They cooked without skill and ate without discirmination. 他们做饭没除以，吃饭没品位。</li>
<li>He loved gossip and scandal. 他喜欢闲话和流言蜚语。</li>
<li>Correct me if I am wrong.</li>
<li>In order to survive the competition a company should be proactive not reactive. 为了能在竞争中立于不败之地，一个公司应积极主动而非被动应变。</li>
<li>We all have that friend that acts innocent but understands all dirty jokes.</li>
<li>Grasp all,lose all. 贪多必失</li>
<li>This suggestion fell flat at the meeting; no one thought it a good idea. 这个建议在会上没有引起人们的兴趣，没有人认为它是个好主意。</li>
<li>The prospect is cheerfull. 前景乐观。</li>
<li>He is known by his political savvy and strong management skills. 他以其政治洞察力和高超的管理手段著称。</li>
<li>Many people were nostalgic for the good old days. 很多人怀念过去的好时光。</li>
<li>His power decayed in old age. 他一步入老年，体力就衰退了。</li>
<li>The thieves divvied up the loot. 强盗分赃。</li>
<li>It is said that blood is thicker than water. 常言道，血浓于水。</li>
<li>Parliament has power to introduct and pass legislation,summon and impeach ministers or the president. 议会拥有提出和通过法律、召集弹劾内阁成员或总统的权利。</li>
<li>Fire and water repel each other. 水火不相容。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build iOS Apps From Scratch]]></title>
    <link href="http://xuguoxing.github.io/blog/2015/04/23/build-ios-apps-from-scratch/"/>
    <updated>2015-04-23T11:00:21+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2015/04/23/build-ios-apps-from-scratch</id>
    <content type="html"><![CDATA[<h1>Design</h1>

<h3>Color</h3>

<ol>
<li><p><a href="http://brandcolors.net/">BrandColors</a></p>

<p> Official color codes for the world&rsquo;s biggest brands.</p></li>
<li><p><a href="http://www.sketchappsources.com">sketch resources</a></p></li>
</ol>


<h1>Service</h1>

<h2>Backend</h2>

<ol>
<li><p><a href="https://parse.com/">Parse</a></p>

<p> Focus on creating amazing user experiences and forget complex infrastructure. Instantly add a powerful cloud database, push notification services, and analytics tracking to your app. Choose from over thirteen native SDKs for mobile, desktop, and IoT devices and discover all that Parse has to offer.</p></li>
<li><p><a href="https://leancloud.cn/">LeanCloud</a></p>

<p> LeanCloud（aka. AVOS Cloud）是加速应用开发的一站式解决方案，专注于为应用开发者提供一流的工具、平台和服务。
我们提供 数据存储 、实时消息、消息推送 以及 统计分析 服务，全面涵盖应用开发的需求；全面支持 iOS、Android、web 等多个平台。我们努力帮助开发者摆脱繁重的后端开发负担，最大限度地缩短开发周期和加快迭代速度，在激烈的市场竞争中胜出。</p></li>
</ol>


<h2>Analytics</h2>

<ol>
<li><p><a href="https://developer.yahoo.com/analytics/">Flurry</a></p>

<p> Get the most widely used app analytics that’s quick to integrate, easy to use and free. Get a deep understanding of app performance metrics and everything your users are doing. Track your user acquisition campaigns and tie them back to analytics to maximize ROI.</p></li>
<li><p><a href="http://www.umeng.com/">友盟</a></p>

<p> 友盟是中国最专业、最有数据凝聚力的移动开发者服务平台。友盟以移动应用统计分析为产品起点，发展成为综合性的移动开发者服务平台。推出“一站式“解决方案，为移动开发者提供了从开发到运营的系列服务,包含移动应用统计分析以及细分行业的移动游戏统计分析、社会化分享、消息推送等产品和服务。</p></li>
<li><p><a href="crashlytics.com">Crashlytics</a></p></li>
</ol>


<h2>Project Host</h2>

<ol>
<li><p><a href="https://github.com">github</a></p>

<p> GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Over eight million people use GitHub to build amazing things together.</p></li>
<li><p><a href="https://bitbucket.org/">bitbucket</a></p></li>
</ol>


<h1>Library</h1>

<h2>Network</h2>

<ol>
<li><p><a href="https://github.com/AFNetworking/AFNetworking">AFNetworking</a></p>

<p> AFNetworking is a delightful networking library for iOS and Mac OS X. It&rsquo;s built on top of the Foundation URL Loading System, extending the powerful high-level networking abstractions built into Cocoa. It has a modular architecture with well-designed, feature-rich APIs that are a joy to use.</p>

<p> Perhaps the most important feature of all, however, is the amazing community of developers who use and contribute to AFNetworking every day. AFNetworking powers some of the most popular and critically-acclaimed apps on the iPhone, iPad, and Mac.</p></li>
<li><p><a href="https://github.com/Alamofire/Alamofire">Alamofire</a></p>

<p> Alamofire is an HTTP networking library written in Swift, from the creator of AFNetworking.</p>

<p> Features</p>

<ul>
<li>Chainable Request / Response methods</li>
<li>URL / JSON / plist Parameter Encoding</li>
<li>Upload File / Data / Stream</li>
<li>Download using Request or Resume data</li>
<li>Authentication with NSURLCredential</li>
<li>HTTP Response Validation</li>
<li>Progress Closure &amp; NSProgress</li>
<li>cURL Debug Output</li>
<li>Comprehensive Unit Test Coverage</li>
<li>Complete Documentation</li>
</ul>
</li>
<li><p><a href="https://github.com/marcelofabri/BigBrother">BigBrother</a></p>

<p>BigBrother is a Swift library made for iOS that automatically watches for any performed request and sets the <a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/Controls.html#//apple_ref/doc/uid/TP40006556-CH15-SW44">network activity indicator</a>.</p></li>
</ol>


<h2>Persistent Storage</h2>

<ol>
<li><p><a href="https://github.com/magicalpanda/MagicalRecord">MagicalRecord</a></p>

<p> MagicalRecord was inspired by the ease of Ruby on Rails&#8217; Active Record fetching. The goals of this code are:</p>

<ul>
<li>Clean up my Core Data related code</li>
<li>Allow for clear, simple, one-line fetches</li>
<li>Still allow the modification of the NSFetchRequest when request optimizations are needed</li>
</ul>
</li>
<li><p><a href="https://github.com/ccgus/fmdb">FMDB</a></p>

<p> This is an Objective-C wrapper around SQLite: <a href="http://sqlite.org/">http://sqlite.org/</a></p></li>
</ol>


<h2>Analytics</h2>

<ol>
<li><p><a href="https://github.com/orta/ARAnalytics">ARAnalytics</a></p>

<p> ARAnalytics is to iOS what <a href="https://github.com/jkrall/analytical">Analytical</a> is to ruby, or <a href="http://segmentio.github.com/analytics.js/">Analytics.js</a> is to javascript.</p>

<p> ARAnalytics is a analytics abstraction library offering a sane API for tracking events and user data. It currently supports on iOS: <code>TestFlight, Mixpanel, Localytics, Flurry, GoogleAnalytics, KISSmetrics, Crittercism, Crashlytics, Bugsnag, Countly, Helpshift, Tapstream, NewRelic, Amplitude, HockeyApp, ParseAnalytics, HeapAnalytics, Chartbeat, Yandex Mobile Metrica, and Branch</code>. And for OS X: <code>KISSmetrics and Mixpanel</code>. It does this by using CocoaPods subspecs to let you decide which libraries you&rsquo;d like to use. You are free to also use the official API for any provider too. Also, comes with an amazing DSL to clear up your methods.</p>

<p> ARAnalytics provides a common API between lots of providers, so it will try to map most of the functionality between providers, but if you&rsquo;re doing complex things, expect to also use your provider&rsquo;s SDK.</p></li>
</ol>


<h2>Image Cache</h2>

<ol>
<li><p><a href="https://github.com/rs/SDWebImage">SDWebImage</a></p>

<p> This library provides a category for UIImageView with support for remote images coming from the web.</p>

<p> It provides:</p>

<ul>
<li>An UIImageView category adding web image and cache management to the Cocoa Touch framework</li>
<li>An asynchronous image downloader</li>
<li>An asynchronous memory + disk image caching with automatic cache expiration handling</li>
<li>Animated GIF support</li>
<li>WebP format support</li>
<li>A background image decompression</li>
<li>A guarantee that the same URL won&rsquo;t be downloaded several times</li>
<li>A guarantee that bogus URLs won&rsquo;t be retried again and again</li>
<li>A guarantee that main thread will never be blocked</li>
<li>Performances!</li>
<li>Use GCD and ARC</li>
<li>Arm64 support</li>
</ul>
</li>
<li><p><a href="https://github.com/onevcat/Kingfisher?">Kingfisher</a></p>

<p> Kingfisher is a lightweight and pure Swift implemented library for downloading and caching image from the web. This project is heavily inspired by the popular SDWebImage. And it provides you a chance to use pure Swift alternation in your next app.</p>

<p> Features</p>

<ul>
<li>Everything in Kingfisher goes asynchronously, not only downloading, but also caching. That means you will never worry about blocking your UI thread.</li>
<li>Multiple-layer cache. Downloaded images will be cached in both memory and disk. So there is no need to download again and this could boost your app dramatically.</li>
<li>Cache management. You can set the max duration or size the cache could take. And the cache will also be cleaned automatically to prevent taking too much resource.</li>
<li>Modern framework. Kingfisher uses NSURLSession and the latest technology of GCD, which makes it a strong and swift framework. It also provides you easy APIs to use.</li>
<li>Cancellable processing task. You can cancel the downloading or image retriving process if it is not needed anymore.</li>
<li>Independent components. You can use the downloader or caching system separately. Or even create your own cache based on Kingfisher&rsquo;s code.</li>
<li>Options to decompress the image in background before rendering it, which could improve the UI performance.</li>
<li>A category over UIImageView for setting image from an URL directly.</li>
</ul>
</li>
<li><p><a href="https://github.com/path/FastImageCache">FastImageCache</a></p>

<p> Fast Image Cache is an efficient, persistent, and—above all—fast way to store and retrieve images in your iOS application. Part of any good iOS application&rsquo;s user experience is fast, smooth scrolling, and Fast Image Cache helps make this easier.</p>

<p> A significant burden on performance for graphics-rich applications like Path is image loading. The traditional method of loading individual images from disk is just too slow, especially while scrolling. Fast Image Cache was created specifically to solve this problem.</p></li>
<li><p><a href="https://github.com/nicklockwood/AsyncImageView">AsyncImageView</a></p>

<p> AsyncImageView includes both a simple category on UIImageView for loading and displaying images asynchronously on iOS so that they do not lock up the UI, and a UIImageView subclass for more advanced features. AsyncImageView works with URLs so it can be used with either local or remote files.</p>

<p> Loaded/downloaded images are cached in memory and are automatically cleaned up in the event of a memory warning. The AsyncImageView operates independently of the UIImage cache, but by default any images located in the root of the application bundle will be stored in the UIImage cache instead, avoiding any duplication of cached images.</p>

<p> The library can also be used to load and cache images independently of a UIImageView as it provides direct access to the underlying loading and caching classes.</p></li>
</ol>


<h2>DataParse</h2>

<ol>
<li><p><a href="https://github.com/krzysztofzablocki/KZPropertyMapper">KZPropertyMapper</a></p>

<p> There are libraries helping with that like Mantle, RESTKit and many more… But I wanted something that&rsquo;s self contained, easy to change / remove and requires minimal amount of code.</p>

<p> I&rsquo;ve created Property Mapper as part of working on <a href="http://foldifyapp.com/">Foldify</a>, a simple self contained solution that allows you to specify mapping between data you receive and data representation you have in your application&hellip; with some additional features, like type boxing, validation.</p>

<p> I don&rsquo;t like passing around JSON so I write parsing on top of native objects like NSDictionary/NSArray. If you get data as JSON just write a simple category that transforms JSON to native objects using NSJSONSerialization.</p></li>
<li><p><a href="https://github.com/CoderMJLee/MJExtension">MJExtensions</a></p>

<p> The fastest, most convenient and most nonintrusive conversion between JSON and model. Your model class don&rsquo;t need to extend another base class. You don&rsquo;t need to modify any model file. Nonintrusive, convenient.
 Features</p>

<ul>
<li>JSON &mdash;> Model、Core Data Model</li>
<li>JSONString &mdash;> Model、Core Data Model</li>
<li>Model、Core Data Model &mdash;> JSON</li>
<li>JSON Array &mdash;> Model Array、Core Data Model Array</li>
<li>JSONString &mdash;> Model Array、Core Data Model Array</li>
<li>Model Array、Core Data Model Array &mdash;> JSON Array</li>
<li>Coding all properties of model in one line code.</li>
</ul>
</li>
<li><p><a href="https://github.com/topfunky/hpple">Hpple</a></p>

<p> Hpple: A nice Objective-C wrapper on the XPathQuery library for parsing HTML.</p>

<ul>
<li>Easy searching by XPath (CSS selectors are planned)</li>
<li>Parses HTML (XML coming soon)</li>
<li>Easy access to tag content, name, and attributes.</li>
</ul>
</li>
<li><p><a href="https://github.com/amarcadet/XMLReader">XMLReader</a></p>

<p> Objective-C XML reader based on NSXMLParser</p>

<p> This project comes from a component developed by Troy Brant and published on his website : <a href="http://troybrant.net/blog/2010/09/simple-xml-to-nsdictionary-converter/">http://troybrant.net/blog/2010/09/simple-xml-to-nsdictionary-converter/</a></p></li>
<li><p><a href="https://github.com/indragiek/CocoaMarkdown">CocoaMarkdown</a></p>

<p> CocoaMarkdown is a cross-platform framework for parsing and rendering Markdown, built on top of the <a href="https://github.com/jgm/CommonMark">C reference implementation</a> of <a href="http://commonmark.org/">CommonMark</a>.</p>

<p> This is currently beta-quality code.</p>

<p> CocoaMarkdown aims to solve two primary problems better than existing libraries:</p>

<ul>
<li>More flexibility. CocoaMarkdown allows you to define custom parsing hooks or even traverse the Markdown AST using the low-level API.</li>
<li>Efficient <code>NSAttributedString</code> creation for easy rendering on iOS and OS X. Most existing libraries just generate HTML from the Markdown, which is not a convenient representation to work with in native apps.</li>
</ul>
</li>
</ol>


<h2>DataSync</h2>

<ol>
<li><p><a href="https://github.com/drewmccormack/ensembles">ensembles</a></p>

<p> Ensembles 2 is now available for purchase at <a href="http://www.ensembles.io/">ensembles.io</a>. It has performance improvements, extra backends (eg CloudKit, Dropbox Sync), and other features. This version of Ensembles continues to be maintained and supported.</p>

<p> There is a <a href="https://groups.google.com/forum/#!forum/ensembles">Google Group</a> for discussing best practices with other developers.</p>

<p> Ensembles extends Apple&rsquo;s Core Data framework to add peer-to-peer synchronization for Mac OS and iOS. Multiple SQLite persistent stores can be coupled together via a file synchronization platform like iCloud or Dropbox. The framework can be readily extended to support any service capable of moving files between devices, including custom servers.</p></li>
<li><p><a href="https://github.com/nothirst/TICoreDataSync">TICoreDataSync</a></p>

<p> TICoreDataSync is a collection of classes to enable synchronization via the Cloud (including Dropbox) of Core Data-based applications (including document-based apps) between any number of clients running under Mac OS X or iOS. It&rsquo;s designed to be easy to extend if you need to synchronize via an option that isn&rsquo;t already supported.</p></li>
<li><p><a href="https://github.com/melke/CloudKitDictionarySyncer/">CloudKitDictionarySyncer</a></p>

<p> CloudKitDictionarySyncer is a utility that you can use in your app to save an NSDictionary to both a local plist file and remotely in the user&rsquo;s CloudKit private database. If CloudKit is not available, because the user is offline, not logged in or whatever , the NSDictionary will be saved to the local plist only. CloudKitDictionarySyncer is written in Swift.</p>

<p> At app startup, when you load the dictionary, CloudKitDictionarySyncer will return a single dictionary if the plist and iCloud version are identical. If not, a Conflict tuple containing both dictionaries will be returned. Handle the conflict in a way appropriate for your app, for example by merging the data in both dictionaries or by simply choosing the last saved dictionary (last method not recommended). After the conflict is solved, you should save the dictionary immediately. This will resync the local plist dictionary and the iCloud dictionary.</p></li>
</ol>


<h2>Hook</h2>

<ol>
<li><p><a href="https://github.com/steipete/Aspects">Aspects</a></p>

<p> Delightful, simple library for aspect oriented programming by <a href="http://twitter.com/steipete">@steipete</a>.</p>

<p> Think of Aspects as method swizzling on steroids. It allows you to add code to existing methods per class or per instance, whilst thinking of the insertion point e.g. before/instead/after. Aspects automatically deals with calling super and is easier to use than regular method swizzling.</p>

<p> This is stable and used in hundreds of apps since it&rsquo;s part of <a href="http://pspdfkit.com/">PSPDFKit, an iOS PDF framework that ships with apps like Dropbox or Evernote</a>, and now I finally made it open source.</p>

<p> Adding aspects returns an opaque token of type <code>AspectToken</code> which can be used to deregister again. All calls are thread-safe.</p>

<p> Aspects uses Objective-C message forwarding to hook into messages. This will create some overhead. Don&rsquo;t add aspects to methods that are called a lot. Aspects is meant for view/controller code that is not called 1000 times per second.</p>

<p> Aspects calls and matches block arguments. Blocks without arguments are supported as well. The first block argument will be of type <code>id&lt;AspectInfo&gt;</code>.</p></li>
</ol>


<h2>Route</h2>

<ol>
<li><p><a href="https://github.com/joeldev/JLRoutes">JLRoute</a></p>

<p> JLRoutes is advanced URL parsing with a block-based callback API. It is designed to make it very easy to handle complex URL schemes in your application without having to do any URL or string parsing of any kind.</p>

<p> Features</p>

<ul>
<li>Simple API with minimal impact to existing codebases</li>
<li>Parse any number of parameters interleaved throughout the URL</li>
<li>Wildcard parameter support</li>
<li>Seamlessly parses out query string and fragment parameters and passes them along as part of the parameters dictionary</li>
<li>Route prioritization</li>
<li>Scheme namespaces to easily segment routes and block handlers for multiple schemes</li>
<li>Return NO from a handler block for JLRoutes to look for the next matching route</li>
<li>Optional verbose logging</li>
<li>Pretty-print the whole routing table</li>
<li>No dependencies other than Foundation</li>
</ul>
</li>
</ol>


<h2>Map</h2>

<ol>
<li><p><a href="https://github.com/choefele/CCHMapClusterController">CCHMapClusterController</a></p>

<p> High-performance map clustering with MapKit for iOS and OS X. Integrate with 4 lines of code.
 CCHMapClusterController solves the problem of displaying many annotations on an MKMapView and is available under the MIT license.</p></li>
<li><p><a href="https://github.com/OrbJapan/ResizableMKCircleOverlay">ResizableMKCircleOverlay</a></p>

<p> A resizable map circle overlay.</p></li>
<li><p><a href="https://github.com/fernandospr/CoreLocationUtils">CoreLocationUtils</a></p>

<p> A category with convenient methods for CLLocation, based on <a href="http://www.movable-type.co.uk/scripts/latlong.html">http://www.movable-type.co.uk/scripts/latlong.html</a></p>

<p> Features</p>

<ul>
<li>Convenient CLLocation initializers:

<ul>
<li>initialize with latitude and longitude in radians</li>
<li>initialize with a pretty string format (e.g. latitude = @&ldquo;34° 36&#8217; 12\&rdquo; N&#8221; longitude = @&ldquo;35° 12&#8217; 24\&rdquo; W&#8221;)</li>
</ul>
</li>
<li>Obtain coordinates in a pretty format</li>
<li>Distance between coordinates using:

<ul>
<li>Haversine formula</li>
<li>Spherical Law of cosines formula</li>
<li>Pythagoras formula</li>
<li>Rhumb line formula</li>
</ul>
</li>
<li>Midpoint along a great circle path between coordinates</li>
<li>Initial/final bearings to target location from source location</li>
<li>Calculate target location with a given distance and bearing from source location</li>
</ul>
</li>
<li><p><a href="https://github.com/100grams/CoreLocationUtils">CoreLocationUtils</a></p>

<p> An Objective-C library with tools and extensions for iOS CoreLocation.</p>

<p> Features</p>

<ul>
<li>Dispatching CoreLocation updates to multiple listeners.</li>
<li>Archive/Unarchive location data (play log file)</li>
<li>Calculate Direction and distance between locations and routes.</li>
<li>Dead Reckoning</li>
</ul>
</li>
</ol>


<h2>Photo</h2>

<ol>
<li><p><a href="https://github.com/mwaterfall/MWPhotoBrowser">MWPhotoBrowser</a></p>

<p> A simple iOS photo browser with optional grid view, captions and selections.
 MWPhotoBrowser can display one or more images by providing either UIImage objects, or URLs to files, web images or library assets. The photo browser handles the downloading and caching of photos from the web seamlessly. Photos can be zoomed and panned, and optional (customisable) captions can be displayed.
 The browser can also be used to allow the user to select one or more photos using either the grid or main image view.</p></li>
<li><p><a href="https://github.com/EddyBorja/EBPhotoPages">EBPhotoPages</a></p>

<p> A photo gallery for iOS with a modern feature set. Similar features as the Facebook photo browser.</p>

<p> EBPhotoPages is a photo gallery library for displaying pages of photos and their meta data in a scrollview. Users are able to zoom photos in and out, as well as create, edit or delete comments and tags, share or delete a photo, and report inappropriate photos. All photos and content are loaded asynchronously. User permissions for a photo are controlled through a delegate protocol. No graphic files are required for the gallery as icons are drawn in code.</p>

<p> The library was designed using a state pattern to control the behavior of the gallery, so that other developers can easily modify or add new states without having to understand too much of the original code.</p>

<p> Quick Feature list:</p>

<ul>
<li>Photo Tagging: Create/Edit/Delete</li>
<li>Photo Commenting: Create/Edit/Delete</li>
<li>Photo Sharing:</li>
<li>Photo Reporting:</li>
<li>Speficy User Permissions per Photo for commenting, tagging, deletion, reporting, etc.</li>
<li>Page Based Scrolling</li>
<li>Photos give immediate bounce feedback when single tapped, for a juicy interface feel.</li>
<li>Toggle Tags On/Off</li>
<li>Pinch, Zoom, Pan Photos with gestures.</li>
<li>Scrollable captions, variable lengths with auto-dimming background</li>
<li>Show/Hide UI elements with a single tap gesture</li>
<li>Asynchronous loading of data (through NSOperationQueue)</li>
<li>Activity Indicator per Photo.</li>
<li>Content Mode AspectFit/Center auto detection (prevent photos smaller than the screen from blowing up)</li>
<li>Full landscape/portrait orientation support</li>
<li>Resolution independent support (iPad/iPhone)</li>
<li>Touch and hold comments to copy or delete</li>
<li>Flat UI Design</li>
<li>Comments icon shows the number of comments posted (if there are any)</li>
<li>Other stuff</li>
</ul>
</li>
<li><p><a href="https://github.com/mariohahn/MHVideoPhotoGallery">MHVideoPhotoGallery</a></p>

<p> A Photo and Video Gallery designed for iOS 7 and iOS 8</p></li>
<li><p><a href="https://github.com/danielebogo/DBCamera">DBCamera</a></p>

<p> DBCamera is a simple custom camera with AVFoundation</p></li>
<li><p>[NYTPhotoViewer] (<a href="https://github.com/NYTimes/NYTPhotoViewer">https://github.com/NYTimes/NYTPhotoViewer</a>)</p>

<p> NYTPhotoViewer is a slideshow and image viewer that includes double tap to zoom, captions, support for multiple images, interactive flick to dismiss, animated zooming presentation, and more.</p>

<p> NYTPhotoViewer draws feature inspiration from Facebook and Tweetbot&rsquo;s image viewers. If this implementation isn&rsquo;t to your liking, you may want to consider <a href="https://github.com/jaredsinclair/JTSImageViewController">JTSImageViewController</a> or <a href="https://github.com/ideaismobile/IDMPhotoBrowser">IDMPhotoBrowser</a>.</p>

<p> TODO</p>

<ul>
<li>Animate bounds changes like Tweetbot and Facebook.</li>
<li>Publicly expose the data source property.</li>
<li><a href="https://github.com/Carthage/Carthage">Carthage</a> support.</li>
<li>An additional sample project written in Swift (currently in pull request).</li>
</ul>
</li>
<li><p><a href="https://github.com/jaredsinclair/JTSImageViewController">JTSImageViewController</a></p>

<p> An interactive iOS image viewer that does it all: double tap to zoom, flick to dismiss, et cetera.</p>

<p> JTSImageViewController is like a &ldquo;light box&rdquo; for iOS. It&rsquo;s similar to image viewers you may have seen in apps like Twitter, Tweetbot, and others. It presents an image in a full-screen interactive view. Users can pan and zoom, and use Tweetbot-style dynamic gestures to dismiss it with a fun flick.</p></li>
<li><p><a href="https://github.com/ideaismobile/IDMPhotoBrowser">IDMPhotoBrowser</a></p>

<p> Photo Browser / Viewer inspired by Facebook&rsquo;s and Tweetbot&rsquo;s with ARC support, swipe-to-dismiss, image progress and more</p>

<p> IDMPhotoBrowser is a new implementation based on <a href="https://github.com/mwaterfall/MWPhotoBrowser">MWPhotoBrowser</a>.</p>

<p> We&rsquo;ve added both user experience and technical features inspired by Facebook&rsquo;s and Tweetbot&rsquo;s photo browsers.</p>

<p> New features:</p>

<ul>
<li>Uses ARC</li>
<li>Uses AFNetworking for image loading</li>
<li>Image progress shown</li>
<li>Minimalistic Facebook-like interface, swipe up/down to dismiss</li>
<li>Ability to add custom actions on the action sheet</li>
</ul>


<p> Features</p>

<ul>
<li>Can display one or more images by providing either <code>UIImage</code> objects, file paths to images on the device, or URLs to images online</li>
<li>Handles the downloading and caching of photos from the web seamlessly</li>
<li>Photos can be zoomed and panned, and optional captions can be displayed</li>
</ul>
</li>
</ol>


<h2>Share</h2>

<ol>
<li><p><a href="https://github.com/overshare/overshare-kit">overshare-kit</a></p>

<p> Sharing is far too cumbersome to implement on iOS. UIActivityViewController is too limiting, and rolling your own library is too time-consuming. Most devs end up settling for underwhelming sharing options for lack of the time or inclination to make something better.</p>

<p> OvershareKit makes it trivial to add rich sharing options to your iOS apps. In a word, OvershareKit has everything:</p>

<ul>
<li>Beautiful share sheets with pixel-perfect, full-color icons in a simple layout.</li>
<li>Lots of tweakable options, including a gorgeous dark mode.</li>
<li>Built-in integration with iOS Twitter and Facebook accounts.</li>
<li>Built-in integration with popular third-party services like App.net, Instapaper, and more.</li>
<li>Complete multi-account management, including authentication and storing credentials securely in the Keychain.</li>
<li>Killer text editing views with as-you-type Twitter syntax highlighting, Riposte-style swipe gesture cursor navigation, and automatic smart quotes.</li>
</ul>
</li>
</ol>


<h2>Algorithems</h2>

<ol>
<li><p><a href="https://github.com/EvgenyKarkan/EKAlgorithms">EKAlgorithms</a></p>

<p> EKAlgorithms is a set of computer exercises implemented in Objective-C. Data structures, well known algorithms, CS curiosities, you name it!</p>

<ul>
<li>Arrays and Lists</li>
<li>Search Algorithms</li>
<li>Sorting Algorithms</li>
<li>Selection Algorithms</li>
<li>Strings</li>
<li>Numeric Algorithms</li>
<li>Data Structures</li>
<li>Problems</li>
<li>Geometry</li>
<li>Recursion</li>
</ul>
</li>
<li><p><a href="https://github.com/waynewbishop/SwiftStructures">SwiftStructures</a></p>

<p> This project provides a framework for commonly used data structures and algorithms written in a new iOS development language called Swift. While details of many algorithms exists on Wikipedia, these implementations are often written as pseudocode, or are expressed in C or C++. With Swift now officially released, its general syntax should be familiar enough for most programmers to understand.
 As a developer, you should already be familiar with the basics of programming. Beyond algorithms, this project also aims to provide an alternative for learning the basics of Swift. This includes implementations of many Swift-specific features such as optionals, extensions and generics. Beyond Swift, audiences should be familiar with Singleton and Factory design patterns along with sets, arrays and dictionaries.
 The project features code-level examples for the following items:</p>

<ul>
<li>Linked Lists</li>
<li>Binary Search</li>
<li>Insertion Sort</li>
<li>Bubble Sort</li>
<li>Quick Sort</li>
<li>Merge Sort</li>
<li>Generics</li>
<li>Hash Tables</li>
<li>Binary Search Trees</li>
<li>Tree Balancing (Rotations)</li>
<li>Tries</li>
<li>Stacks &amp; Queues</li>
<li>Graphs</li>
<li>Dijkstra&rsquo;s Shortest Path</li>
<li>Heaps &amp; Heapsort Operations</li>
<li>Depth-First Search</li>
<li>Breath-First Search</li>
</ul>
</li>
</ol>


<h2>IAP</h2>

<ol>
<li><p><a href="https://github.com/robotmedia/RMStore#receipt-verification">RMStore</a></p>

<p> A lightweight iOS library for In-App Purchases.</p>

<p> RMStore adds <code>blocks</code> and <code>notifications</code> to StoreKit, plus <code>receipt verification</code>, <code>content downloads</code> and <code>transaction persistence</code>. All in one class without external dependencies.</p></li>
<li><p><a href="https://github.com/rmaddy/VerifyStoreReceiptiOS">VerifyStoreReceiptiOS</a></p>

<p> These files are based off of the <a href="https://github.com/roddi/ValidateStoreReceipt">roddi/ValidateStoreReceipt</a> project.</p>

<p> For details on iOS receipt validation from Apple, see <a href="https://developer.apple.com/library/ios/releasenotes/General/ValidateAppStoreReceipt/Introduction.html">Receipt Validation Programming Guide</a> (Developer membership needed).</p>

<p> Unfortunately this document doesn&rsquo;t tell you how to process this receipt in detail, quote:</p>

<pre><code> The payload of the PKCS7 container is encoded using ASN.1, as described by ITU-T X.690.
 This validator parses and validates the payload and the PKCS7 container itself.
</code></pre>

<p> Missing from this project:</p>

<ul>
<li>Apple&rsquo;s root certificate. This may be obtained from <a href="http://www.apple.com/certificateauthority/">http://www.apple.com/certificateauthority/</a></li>
<li>Any measures to make your app cracker proof.</li>
</ul>
</li>
</ol>


<h2>Debug</h2>

<ol>
<li><p><a href="https://github.com/Flipboard/FLEX">FLEX</a></p>

<p> FLEX (Flipboard Explorer) is a set of in-app debugging and exploration tools for iOS development. When presented, FLEX shows a toolbar that lives in a window above your application. From this toolbar, you can view and modify nearly every piece of state in your running application.</p>

<ul>
<li>Inspect and modify views in the hierarchy.</li>
<li>See the properties and ivars on any object.</li>
<li>Dynamically modify many properties and ivars.</li>
<li>Dynamically call instance and class methods.</li>
<li>Observe detailed network request history with timing, headers, and full responses.</li>
<li>View system log messages (e.g. from NSLog).</li>
<li>Access any live object via a scan of the heap.</li>
<li>View the file system within your app&rsquo;s sandbox.</li>
<li>Explore all classes in your app and linked systems frameworks (public and private).</li>
<li>Quickly access useful objects such as [UIApplication sharedApplication], the app delegate, the root view controller on the key window, and more.</li>
<li>Dynamically view and modify NSUserDefaults values.</li>
</ul>


<p> Unlike many other debugging tools, FLEX runs entirely inside your app, so you don&rsquo;t need to be connected to LLDB/Xcode or a different remote debugging server. It works well in the simulator and on physical devices.</p></li>
<li><p><a href="https://github.com/AliSoftware/OHHTTPStubs">OHHTTPStubs</a></p>

<p> OHHTTPStubs is a library designed to stub your network requests very easily. It can help you:</p>

<ul>
<li>test your apps with fake network data (stubbed from file) and simulate slow networks, to check your application behavior in bad network conditions</li>
<li>write Unit Tests that use fake network data from your fixtures.</li>
</ul>


<p> It works with NSURLConnection, new iOS7/OSX.9&rsquo;s NSURLSession, AFNetworking (both 1.x and 2.x), or any networking framework that use Cocoa&rsquo;s URL Loading System.</p></li>
<li><p><a href="https://github.com/facebook/tweaks">Tweaks</a></p>

<p> An easy way to fine-tune, and adjust parameters for iOS apps in development.</p>

<p> The best way to improve an app is to use it every day. Even when ideas can be tested out in advance — for example, with <a href="http://origami.facebook.com/">Origami</a> — it can still take some time with the app to see how it works in practice.</p>

<p> Occasionally, it&rsquo;s perfect the first try. Sometimes, the idea doesn&rsquo;t work at all. But often, it just needs a few minor adjustments. That last case is where Tweaks fits in. Tweaks makes those small adjustments easy: with no code changes and no computer, you can try out different options and decide which works best.</p>

<p> Some of the most useful parameters to adjust are animation timings, velocity thresholds, colors, and physics constants. At Facebook, we also use tweaks to temporarily disable new features during development. That way, the designers and engineers involved can enable it on just their devices, without getting in the way of others testing the app.</p>

<p> Tweaks was invaluable for building <a href="http://www.facebook.com/paper">Paper</a>. We hope it can be useful for your app too.</p></li>
</ol>


<h2>Animation</h2>

<ol>
<li><p><a href="https://github.com/facebook/pop">pop</a></p>

<p> Pop is an extensible animation engine for iOS and OS X. In addition to basic static animations, it supports spring and decay dynamic animations, making it useful for building realistic, physics-based interactions. The API allows quick integration with existing Objective-C codebases and enables the animation of any property on any object. It&rsquo;s a mature and well-tested framework that drives all the animations and transitions in <a href="http://www.facebook.com/paper">Paper</a>.</p></li>
<li><p><a href="https://github.com/facebook/Shimmer">Shimmer</a></p>

<p> Shimmer is an easy way to add a shimmering effect to any view in your app. It&rsquo;s useful as an unobtrusive loading indicator.</p>

<p> Shimmer was originally developed to show loading status in <a href="http://facebook.com/paper">Paper</a>.</p></li>
</ol>


<h2>iCloud</h2>

<ol>
<li><p><a href="https://github.com/drewmccormack/icloudaccess">icloudaccess</a></p>

<p> iCloud Access is a simple class that makes it easier to work with iCloud, hiding details such as file coordination and metadata queries. It is much more like accessing a web service with a Cocoa networking class, which most developers are more used to.</p>

<p> The class was originally developed as part of the <a href="https://github.com/drewmccormack/ensembles">Ensembles</a> Core Data Sync framework, and has been extracted for easier integration in projects not using Ensembles.</p></li>
</ol>


<h2>Security</h2>

<ol>
<li><p><a href="https://github.com/mattt/Navajo">Navajo</a></p>

<p> Password Validator &amp; Strength Evaluator</p>

<p> Available Validation Rules</p>

<ul>
<li>Allowed Characters</li>
<li>Required Characters (e.g. lowercase, uppercase, decimal, symbol)</li>
<li>Non-Dictionary Word</li>
<li>Minimum / Maximum Length</li>
<li>Predicate Match</li>
<li>Regular Expression Match</li>
<li>Block Evaluation</li>
</ul>
</li>
<li><p><a href="https://github.com/arpi6/validateIt">validateIt</a></p>

<p> Validation Library for IOS apps</p>

<p> Validation for:</p>

<ul>
<li>email address,</li>
<li>required text field,</li>
<li>minimum length,</li>
<li>maximum length,</li>
<li>letters and space only.</li>
</ul>
</li>
</ol>


<h2>KVO</h2>

<ol>
<li><p><a href="https://github.com/facebook/KVOController">KVOController</a></p>

<p> Key-value observing is a particularly useful technique for communicating between layers in a Model-View-Controller application. KVOController builds on Cocoa&rsquo;s time-tested key-value observing implementation. It offers a simple, modern API, that is also thread safe. Benefits include:</p>

<ul>
<li>Notification using blocks, custom actions, or NSKeyValueObserving callback.</li>
<li>No exceptions on observer removal.</li>
<li>Implicit observer removal on controller dealloc.</li>
<li>Thread-safety with special guards against observer resurrection – <a href="http://openradar.appspot.com/radar?id=5305010728468480">rdar://15985376</a>.</li>
<li>For more information on KVO, see <a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/KeyValueObserving/KeyValueObserving.html">Apple&rsquo;s Introduction to Key-Value Observing</a>.</li>
</ul>
</li>
</ol>


<h2>API</h2>

<ol>
<li><p><a href="https://github.com/bjornsallarp/YahooFinance">YahooFinance</a></p>

<p> iOS API for Yahoo finance. Stock symbol search, stock details and currency conversion. <a href="http://blog.sallarp.com/yahoo-finance-api-for-ios/">http://blog.sallarp.com/yahoo-finance-api-for-ios/</a></p>

<p> The YahooFinance framework is an iOS Objective-C framework for Yahoo Finance.</p>

<p> Features</p>

<ul>
<li>Search for stock symbols from major global stock exchanges list</li>
<li>Retrieve stock details such as quotes, volumes etc.</li>
<li>Currency conversion for all major world currencies.</li>
</ul>
</li>
<li><p><a href="https://github.com/danielbierwirth/DropboxBrowser">DropboxBrowser</a></p>

<p> Dropbox Browser provides a simple and effective way to browse, view, and download files using the iOS Dropbox SDK. Follow the simple setup steps and in under ten minutes you&rsquo;ll have a working Dropbox File Browser in your app that lets users browse and download their Dropbox files and folders.</p></li>
<li><p><a href="https://github.com/shyambhat/InstagramKit">InstagramKit</a></p>

<p> An extensive Objective C wrapper for the Instagram API.</p>

<p> This framework is built atop AFNetworking’s blocks-based architecture and additionally parses the JSON response asynchronously so there’s absolutely no parsing on the main thread. It’s neat, fast and works like a charm providing an easy interface to interacting with Instagram’s model objects.</p></li>
</ol>


<h2>Font</h2>

<ol>
<li><p><a href="https://github.com/PrideChung/FontAwesomeKit">FontAwesomeKit</a></p>

<p> Icon font library for iOS. Currently supports Font-Awesome, Foundation icons, Zocial, and ionicons.</p>

<p> Currently FontAwesomeKit supports 4 different icon fonts.</p>

<ul>
<li><a href="http://fortawesome.github.io/Font-Awesome/">FontAwesome 4.2</a> Our old friend, contains 479 icons</li>
<li><a href="http://zurb.com/playground/foundation-icon-fonts-3">Foundation icons</a> Contains 283 icons.</li>
<li><a href="http://zocial.smcllns.com/">Zocial</a> Contains 99 social icons.</li>
<li><a href="http://ionicons.com/">ionicons 2.0.0</a> Contains 733 icons, lots of iOS 7 style outlined icons.</li>
</ul>
</li>
</ol>


<h2>Date</h2>

<ol>
<li><p><a href="https://github.com/malcommac/SwiftDate">SwiftDate</a></p>

<p> Easy NSDate Management in Swift.</p>

<p> Features</p>

<ul>
<li>Math operations with dates (ie. myDate+2.week+1.hour)</li>
<li>Easy compare using &lt;,>,==,&lt;=,>= operators</li>
<li>Easy individual date component set/get</li>
<li>Easy creation with common formats or custom formats</li>
<li>Powerful .toString methods with support for relative dates (ie. &ldquo;2hours&rdquo;&hellip;)</li>
<li>Many shortcuts to get intervals and common dates (yesterday,tomorrow&hellip;)</li>
<li>&hellip; check out documentation below!</li>
</ul>
</li>
</ol>


<h2>UI</h2>

<h3>Container</h3>

<ol>
<li><p><a href="https://github.com/ECSlidingViewController/ECSlidingViewController">ECSlidingViewController</a></p>

<p> ECSlidingViewController is a view controller container that manages a layered interface. The top layer anchors to the left or right side of the container while revealing the layer underneath it. This is most commonly known as the &ldquo;Side Menu&rdquo;, &ldquo;Slide Out&rdquo;, &ldquo;Hamburger Menu/Drawer/Sidebar&rdquo;, etc&hellip;</p></li>
<li><p><a href="https://github.com/romaonthego/RESideMenu">RESideMenu</a></p>

<p> iOS 7/8 style side menu with parallax effect inspired by Dribbble shots (<a href="http://dribbble.com/shots/1116265-Instasave-iPhone-App">first</a> and <a href="http://dribbble.com/shots/1114754-Social-Feed-iOS7">second</a>).</p>

<p> Since version 4.0 you can add menu view controllers on both left and right sides of your content view controller.</p></li>
<li><p><a href="https://github.com/ipup/PPRevealSideViewController">PPRevealSideViewController</a></p>

<p> This is a new controller container, showing views on the side like the Facebook or Path app. It is as easy to use as a navigation controller. Sometimes, you need to push a new controller to show some options, but a small controller would be enough … PPRevealSideViewController is THE controller you need.</p></li>
</ol>


<h3>Layout&amp;IB</h3>

<ol>
<li><p><a href="https://github.com/smileyborg/PureLayout">PureLayout</a></p>

<p> The ultimate API for iOS &amp; OS X Auto Layout — impressively simple, immensely powerful. PureLayout extends UIView/NSView, NSArray, and NSLayoutConstraint with a comprehensive Auto Layout API that is modeled after Apple&rsquo;s own frameworks. PureLayout is an Objective-C library that also works (and looks!) great with Swift using a bridging header.</p>

<p> Writing Auto Layout code from scratch isn&rsquo;t easy. PureLayout provides a fully capable and developer-friendly interface for Auto Layout. It is designed for clarity and simplicity, and takes inspiration from the AutoLayout UI options available in Interface Builder while delivering far more flexibility. The API is also highly efficient, as it adds only a thin layer of third party code and is engineered for maximum performance.</p></li>
<li><p><a href="https://github.com/SnapKit/Masonry">Masonry</a></p>

<p> Masonry is being deprecated into a bugfix only state as more developers will be moving to Swift. Going forward we recommend using <a href="https://github.com/SnapKit/SnapKit">SnapKit</a> as it supports Swift and provides better type safety with a simpler API.</p></li>
</ol>


<p>Masonry is a light-weight layout framework which wraps AutoLayout with a nicer syntax. Masonry has its own layout DSL which provides a chainable way of describing your NSLayoutConstraints which results in layout code that is more concise and readable. Masonry supports iOS and Mac OS X.</p>

<ol>
<li><p><a href="https://github.com/SnapKit/SnapKit">SnapKit</a></p>

<p> A Swift Autolayout DSL for iOS &amp; OS X <a href="http://snapkit.io">http://snapkit.io</a></p></li>
<li><p><a href="https://github.com/CanvasPod/Canvas">Canvas</a></p>

<p> Animate in Xcode without code <a href="http://canvaspod.io">http://canvaspod.io</a></p>

<p> Canvas is a project to simplify iOS development for both designers and developers. It had been difficult for designers to get hands on building the product with the lack of objective-c and Xcode experience, and a hard time for developer to use reasonable amount of time and lines of code just to achieve really simple effects.</p>

<p> With Canvas, creating stunning animations requires zero lines of code, trendy effects like the Parallax headers, Sticky sections, Blurred Backgrounds, will be as simple as few lines of code changes.</p></li>
</ol>


<h3>HUD</h3>

<ol>
<li><p><a href="https://github.com/TransitApp/SVProgressHUD">SVProgressHUD</a></p>

<p> SVProgressHUD is a clean and easy-to-use HUD meant to display the progress of an ongoing task.</p></li>
<li><p><a href="https://github.com/jdg/MBProgressHUD">MBProgressHUD</a></p>

<p> MBProgressHUD is an iOS drop-in class that displays a translucent HUD with an indicator and/or labels while work is being done in a background thread. The HUD is meant as a replacement for the undocumented, private UIKit UIProgressHUD with some additional features.</p></li>
<li><p><a href="https://github.com/martinezdelariva/MRCircularProgressView">MRCircularProgressView</a></p>

<p> Custom circular <code>UIView</code> that allow set progress similar to AppStore control.</p>

<ul>
<li>Custom animation duration.</li>
<li>Custom color.</li>
<li>Custom progress width.</li>
</ul>
</li>
<li><p><a href="https://github.com/GabrielAlva/Swift-Prompts">Swift-Prompts</a></p>

<p> A Swift library to design custom prompts with a great scope of options to choose from.</p></li>
<li><p><a href="https://github.com/danielamitay/DACircularProgress">DACircularProgress</a></p>

<p> DACircularProgress is a UIView subclass with circular UIProgressView properties.</p>

<p> It was originally built to be an imitation of Facebook&rsquo;s photo progress indicator.</p></li>
</ol>


<h3>SegmentControl</h3>

<ol>
<li><p><a href="https://github.com/HeshamMegid/HMSegmentedControl">HMSegmentedControl</a></p>

<p> A drop-in replacement for UISegmentedControl mimicking the style of the segmented control used in Google Currents and various other Google products.</p>

<p> Features</p>

<ul>
<li>Supports both text and images</li>
<li>Support horizontal scrolling</li>
<li>Supports advanced title styling with text attributes for font, color, kerning, shadow, etc.</li>
<li>Supports selection indicator both on top and bottom</li>
<li>Supports blocks</li>
<li>Works with ARC and iOS >= 7</li>
</ul>
</li>
</ol>


<h3>Settings</h3>

<ol>
<li><p><a href="https://github.com/futuretap/InAppSettingsKit">InAppSettingsKit</a></p>

<p> InAppSettingsKit is an open source solution to to easily add in-app settings to your iPhone apps. It uses a hybrid approach by maintaining the Settings.app pane. So the user has the choice where to change the settings.</p></li>
<li><p><a href="https://github.com/nicklockwood/FXForms">FXForms</a></p>

<p> FXForms is an Objective-C library for easily creating table-based forms on iOS. It is ideal for settings pages or data-entry tasks.</p>

<p> Unlike other solutions, FXForms works directly with strongly-typed data models that you supply (instead of dictionaries or complicated dataSource protocols), and infers as much information as possible from your models using introspection, to avoid the need for tedious duplication of type information.</p></li>
</ol>


<h3>Remind</h3>

<ol>
<li><p><a href="https://github.com/arashpayan/appirater">appirater</a></p>

<p> Appirater is a class that you can drop into any iPhone app (iOS 4.0 or later) that will help remind your users to review your app on the App Store.</p></li>
<li><p><a href="https://github.com/nicklockwood/iRate">iRate</a></p>

<p> A handy class that prompts users of your iPhone or Mac App Store app to rate your application after using it for a while. Similar to Appirater, but with a simpler, cleaner interface and automatic support for iOS fast application switching.</p>

<p> iRate is a library to help you promote your iPhone and Mac App Store apps by prompting users to rate the app after using it for a few days. This approach is one of the best ways to get positive app reviews by targeting only regular users (who presumably like the app or they wouldn&rsquo;t keep using it!).</p></li>
<li><p><a href="https://github.com/ArtSabintsev/Harpy">Harpy</a></p>

<p> Harpy checks a user&rsquo;s currently installed version of your iOS app against the version that is currently available in the App Store. If a new version is available, an alert can be presented to the user informing them of the newer version, and giving them the option to update the application.</p>

<p> This library is built to work with the <a href="http://semver.org/">Semantic Versioning</a> system.</p></li>
<li><p><a href="https://github.com/ArtSabintsev/Siren">Siren</a></p>

<p> Siren checks a user&rsquo;s currently installed version of your iOS app against the version that is currently available in the App Store.</p>

<p> If a new version is available, an alert can be presented to the user informing them of the newer version, and giving them the option to update the application. Alternatively, Siren can notify your app programmatically, enabling you to inform the user through alternative means, such as a custom interface.</p>

<ul>
<li>Siren is built to work with the <a href="http://semver.org/">Semantic Versioning</a> system.</li>
<li>Siren is a Swift language port of <a href="http://github.com/ArtSabintsev/Harpy">Harpy</a>, an Objective-C library that achieves the same functionality.</li>
<li>Siren is actively maintained by <a href="http://github.com/ArtSabintsev">Arthur Sabintsev</a> and <a href="http://twitter.com/getaaron">Aaron Brager</a>.</li>
</ul>
</li>
<li><p><a href="https://github.com/venmo/DryDock-iOS">DryDock-iOS</a></p>

<p> An internal installer app for iOS.</p>

<p> DryDock is an iOS application that we built at Venmo to manage and install all of our internal builds, allow employees to download new experimental apps at any time and to easily share builds designed for a broader audience with their friends.</p>

<p> DryDock also allows our customer support team to install any version of the App that we&rsquo;ve ever released to the store.</p></li>
<li><p><a href="https://github.com/thoughtbot/MultiProductViewer">MultiProductViewer</a></p>

<p> MultiProductViewer implements a GUI for displaying multiple App Store products in a scrolling list. By tapping on a product, the user is taken to a page where they can see more info about the app and purchase it, using SKStoreProductViewController.</p></li>
</ol>


<h3>PullToRefresh</h3>

<ol>
<li><p><a href="https://github.com/samvermette/SVPullToRefresh">SVPullToRefresh</a></p>

<p> Give pull-to-refresh &amp; infinite scrolling to any UIScrollView with 1 line of code. <a href="http://samvermette.com/314">http://samvermette.com/314</a></p>

<p> These UIScrollView categories makes it super easy to add pull-to-refresh and infinite scrolling fonctionalities to any UIScrollView (or any of its subclass). Instead of relying on delegates and/or subclassing UIViewController, SVPullToRefresh uses the Objective-C runtime to add the following 3 methods to UIScrollView:</p>

<pre><code> - (void)addPullToRefreshWithActionHandler:(void (^)(void))actionHandler;
 - (void)addPullToRefreshWithActionHandler:(void (^)(void))actionHandler position:(SVPullToRefreshPosition)position;
 - (void)addInfiniteScrollingWithActionHandler:(void (^)(void))actionHandler;
</code></pre></li>
<li><p><a href="https://github.com/CoderMJLee/MJRefresh">MJRefresh</a></p>

<ul>
<li>The easiest way to use pull-to-refresh</li>
<li>用法最简单的下拉刷新框架：一行代码搞定</li>
<li>支持 UIScrollView、UITableView、UICollectionView、UIWebView</li>
</ul>
</li>
<li><p><a href="https://github.com/dasdom/BreakOutToRefresh">BreakOutToRefresh</a></p>

<p> Play BreakOut while loading &ndash; A playable pull to refresh view using SpriteKit</p></li>
</ol>


<h3>Lock</h3>

<ol>
<li><p><a href="https://github.com/freesuraj/PatternLock">PatternLock</a></p>

<p> A simple but fully functional pattern lock sdk for iOS (similar to the android pattern lock)</p></li>
<li><p><a href="https://github.com/kejinlu/KKGestureLockView">KKGestureLockView</a></p>

<p> KKGestureLockView是一个非常方便使用的Gesture Lock控件，只需要简单的几步便可以在你的app中实现如安卓那样的手势解锁的效果。
 控件的源码在KKGestureLockView/Source目录下,且自带了一个仿支付宝解锁界面的例子（例子的图片资源取自支付宝app解压缩后的资源图片）</p></li>
<li><p><a href="https://github.com/kosyloa/PinPad">PinPad</a></p>

<p> View like iOS7 Lock screen</p>

<p> Dynamic count of input numbers and custom configuration.</p></li>
<li><p><a href="https://github.com/croath/SecretSwitch">SecretSwitch</a></p>

<p> cover apps with a blur screenshot to keep secret after double clicking iPhone&rsquo;s home</p></li>
</ol>


<h3>UITableViewCellCustom</h3>

<ol>
<li><p><a href="https://github.com/scheinem/MSCMoreOptionTableViewCell">MSCMoreOptionTableViewCell</a></p>

<p> Drop-in solution to achieve the &ldquo;More&rdquo; button in an UITableView&rsquo;s &ldquo;swipe to delete&rdquo;-menu (as seen in the Mail.app) by extending Apple&rsquo;s own &ldquo;swipe to delete&rdquo;-implementation and not rewriting it, so UITableView&rsquo;s standard behaviour isn&rsquo;t changed.</p></li>
<li><p><a href="https://gist.github.com/steipete/10541433">UITableViewMore</a></p>

<p> Using the &ldquo;More&rdquo; button. Of course the simple way that Apple uses in Mail/iOS is not public. rdar://16600859</p></li>
<li><p><a href="https://gist.github.com/scheinem/e36835db07486e9f7e64">tableViewEditActions</a></p>

<p> iOS 8 beta 2: &lsquo;&#8217;tableView:editActionsForRowAtIndexPath:&#8221;</p></li>
<li><p><a href="https://github.com/TeehanLax/UITableViewCell-Swipe-for-Options">UITableViewCell-Swipe-for-Options</a></p>

<p> A reproduction of the iOS 7 Mail app&rsquo;s swipe-to-reveal options.
 Most compact solution by Ash Furrow, uses a scroll view. Needs a few tweaks in scrollViewWillEndDragging: to better determine if the buttons should be displayed or hidden. Otherwise very simple and effective.</p></li>
<li><p><a href="https://github.com/runmad/RMSwipeTableViewCell">RMSwipeTableViewCell</a></p>

<p> RMSwipeTableViewCell is a drop-in UITableViewCell subclass that supports pan gestures as seen in apps such as Clear, Mailbox, Sparrow and many more.</p>

<p> RMSwipeTableViewCell allows for easy subclassing to customize the cell to match your needs. The class exposes useful class methods and uses delegate callbacks to handle actions in your UITableViewController. RMSwipeTableViewCell is compatible with iOS 5 and higher!</p></li>
</ol>


<h3>Blur</h3>

<ol>
<li><p><a href="https://github.com/nicklockwood/FXBlurView">FXBlurView</a></p>

<p> FXBlurView is a UIView subclass that replicates the iOS 7 realtime background blur effect, but works on iOS 5 and above. It is designed to be as fast and as simple to use as possible. FXBlurView offers two modes of operation: static, where the view is rendered only once when it is added to a superview (though it can be updated by calling setNeedsDisplay or updateAsynchronously:completion:) or dynamic, where it will automatically redraw itself on a background thread as often as possible.</p></li>
<li><p><a href="https://github.com/ivoleko/ILTranslucentView">ILTranslucentView</a></p>

<p> ILTranslucentView is a little subclass of UIView that provide native iOS 7+ blur (translucent) effect. It can be used on all iOS devices in real time without any performance problems. It also supports smooth UIView animation of color, frame, alpha etc.</p></li>
<li><p><a href="https://github.com/cyndibaby905/TwitterCover">TwitterCover</a></p>

<p> TwitterCover is a parallax top view with real time blur effect to any UIScrollView, inspired by Twitter for iOS.</p>

<p> Completely created using UIKit framework.</p>

<p> Easy to drop into your project.</p>

<p> You can add this feature to your own project, TwitterCover is easy-to-use.</p></li>
</ol>


<h3>Calendar</h3>

<ol>
<li><p><a href="https://github.com/square/objc-TimesSquare">objc-TimesSquare</a></p>

<p> TimesSquare is a library to display a calendar in a view in your iPhone or iPad app. We wrote it after searching high and low for a better way and finding none.</p></li>
<li><p><a href="https://github.com/Mozharovsky/CVCalendar">CVCalendar</a></p>

<p> A custom visual calendar for iOS 8 written in Swift.</p></li>
<li><p><a href="https://github.com/nairteashop/NTMonthYearPicker">NTMonthYearPicker</a></p>

<p> NTMonthYearPicker is a simple month / year picker component for use in iOS applications.</p>

<p> I created this component because the standard iOS UIDatePicker component only allows you to specify full dates i.e. day, month and year, but I had a use case in which the user needed to specify only the month and the year, or only the year.</p>

<p> I found a few other 3rd party iOS month/year picker implementations, but they either did not support many core properties of UIDatePicker such as <code>minimumDate</code> and <code>maximumDate</code>, or extended UIPickerView instead of UIControl, which meant that they would not emit UIControlEventValueChanged events like a UIDatePicker.</p>

<p> NTMonthYearPicker extends UIControl, exactly like UIDatePicker does, and re-implements all relevant functionality. I would have liked to simply extend the UIDatePicker class, but I don&rsquo;t know if this is possible. If it is, please let me know so I can rework this component.</p></li>
</ol>


<h3>Welcome</h3>

<ol>
<li><p><a href="https://github.com/Dromaguirre/DRDynamicSlideShow">DRDynamicSlideShow</a></p>

<p> Create beautiful, animated, paging UIScrollViews. Easily animate views as the UIScrollView gets paged. This is perfect for welcome screens and introduction views in iOS apps.</p></li>
<li><p><a href="https://github.com/mamaral/Onboard">Onboard</a></p>

<p> Onboard provides developers with a quick and easy means to create a beautiful, engaging, and useful onboarding experience with only a few lines of code.</p>

<p> I currently have implementations written in both Objective-C and Swift, although currently due to time constraints the Swift implementation does not have all of the customization features available in the Objective-C version, namely the skipping feature, customizing different fonts for different components on the same page, etc. I will do my best to get the Swift version to match the Objective-C version as soon as possible, and any pull requests are welcomed in the meantime!</p></li>
<li><p><a href="https://github.com/IFTTT/JazzHands">JazzHands</a></p>

<p> Jazz Hands is a simple keyframe-based animation framework for UIKit. Animations can be controlled via gestures, scroll views, KVO, or ReactiveCocoa.</p>

<p> Jazz Hands is used extensively in <a href="https://ifttt.com/mobile">IFTTT for iPhone and iPad</a>, most famously in the app intro</p></li>
<li><p><a href="https://github.com/GnosisHub/GHWalkThrough">GHWalkThrough</a></p>

<p> This is simple and customizable drop-in solution for showing app walkthroughs or intros.</p>

<ul>
<li>Configurable to walk through in horizontal and vertical directions</li>
<li>Support for having custom floating header on all pages</li>
<li>Supports fixed background image</li>
</ul>
</li>
<li><p><a href="https://github.com/ealeksandrov/EAIntroView">EAIntroView</a></p>

<p> This is highly customizable drop-in solution for introduction views. Some features (remember, most features are optional and can be turned off):</p>

<ul>
<li>beautiful demo project to look on some examples

<ul>
<li>customizability is unlimited, one can make complex introView with animations and interactive pages, so do not limit yourself with existing examples</li>
</ul>
</li>
<li>for each basic page:

<ul>
<li>background (with cross-dissolve transition between pages)</li>
<li>custom iOS7 motion effects (parallax) on background</li>
<li>title view (+ Y position)</li>
<li>title text (+ font, color and Y position)</li>
<li>description text (+ font, color, width and Y position)</li>
<li>subviews array (added to page after building default layout)</li>
</ul>
</li>
<li>possibility to set your own custom view for page:

<ul>
<li>pageWithCustomView:</li>
<li>pageWithCustomViewFromNibNamed:</li>
</ul>
</li>
<li>possibility to set block action on page events:

<ul>
<li>pageDidLoad</li>
<li>pageDidAppear</li>
<li>pageDidDisappear</li>
</ul>
</li>
<li>many options to customize parent view:

<ul>
<li>swipe from last page to close</li>
<li>switching pages with one simple tap</li>
<li>custom background image or color</li>
<li>custom page control</li>
<li>custom skip button</li>
<li>pinned titleView (+ Y position, can be hidden on some pages)</li>
</ul>
</li>
<li>delegate protocol to listen:

<ul>
<li>introDidFinish:</li>
<li>intro:pageAppeared:withIndex:</li>
</ul>
</li>
<li>actions on IntroView:

<ul>
<li>setPages:</li>
<li>showInView:animateDuration:</li>
<li>hideWithFadeOutDuration:</li>
<li>setCurrentPageIndex:animated:</li>
</ul>
</li>
<li>storyboard/IB support</li>
</ul>
</li>
<li><p><a href="https://github.com/icepat/ICETutorial">ICETutorial</a></p>

<p> This small project is an implementation of the newly tutorial introduced by the Path 3.X app. Very simple and efficient tutorial, composed with N full-screen pictures that you can swipe for switching to the next/previous page.</p>

<p> Here are the features :</p>

<ul>
<li>Compose your own tutorial with N pictures</li>
<li>Fixed incrusted title (can be easily replaced by an UIImageView, or just removed)</li>
<li>Scrolling sub-titles for page, with associated descriptions (change the texts, font, color&hellip;)</li>
<li>Auto-scrolling (enable/disable, loop, setup duration)</li>
<li>Cross fade between next/previous background</li>
<li>Easy to use block access to button&rsquo;s events.</li>
</ul>
</li>
</ol>


<h3>QRCode</h3>

<ol>
<li><p><a href="https://github.com/fukuchi/libqrencode">libqrencode</a></p>

<p> QR Code encoding library <a href="http://fukuchi.org/works/qrencode/">http://fukuchi.org/works/qrencode/</a></p>

<p> Libqrencode is a library for encoding data in a QR Code symbol, a 2D symbology that can be scanned by handy terminals such as a mobile phone with CCD. The capacity of QR Code is up to 7000 digits or 4000 characters and has high robustness.</p>

<p> Libqrencode accepts a string or a list of data chunks then encodes in a QR Code symbol as a bitmap array. While other QR Code applications generate an image file, using libqrencode allows applications to render QR Code symbols from raw bitmap data directly. This library also contains a command-line utility outputs a QR Code symbol as a PNG image.</p>

<p> Libqrencode supports QR Code model 2, described in JIS (Japanese Industrial Standards) X0510:2004 or ISO/IEC 18004. Most of features in the specification are implemented such as:</p>

<ul>
<li>Numeric, alphabet, Japanese kanji (Shift-JIS) or any 8 bit code can be embedded</li>
<li>Optimized encoding of a string</li>
<li>Structured-append of symbols</li>
<li>Micro QR Code (experimental)</li>
</ul>


<p> Currently the following features are not supported:</p>

<ul>
<li>ECI and FNC1 mode</li>
<li>QR Code model 1 (deprecated)</li>
</ul>
</li>
</ol>


<h3>Chart</h3>

<ol>
<li><p><a href="https://github.com/eternityz/RWBarChartView">RWBarChartView</a></p>

<p> A scrollable, highly customizable and easy to use charting view for bar graphs. Introduced in <a href="http://air.fresh-ideas.cc/">China Air Quality Index</a>.</p>

<p> Features</p>

<ul>
<li>Bars can be organized into sections. Section titles can be displayed stationarily while scrolling (like plain UITableView).</li>
<li>Each bar can have one or more segments with different colors assigned.</li>
<li>Each bar can have its description text. Label for description text can be used as scrolling indicator.</li>
<li>Appearance tweeks. See RWBarChartView.h for more details.</li>
<li>Optional vertical axis beneath the bars.</li>
<li>UITableView like data source protocol.</li>
</ul>
</li>
<li><p><a href="https://github.com/kevinzhow/PNChart">PNChart</a></p>

<p> You can also find swift version at here <a href="https://github.com/kevinzhow/PNChart-Swift">https://github.com/kevinzhow/PNChart-Swift</a></p>

<p> A simple and beautiful chart lib with animation used in <a href="https://itunes.apple.com/us/app/piner/id637706410">Piner</a> and <a href="https://itunes.apple.com/us/app/coinsman/id772163893">CoinsMan</a> for iOS</p></li>
<li><p><a href="https://github.com/kevinzhow/PNChart-Swift">PNChart-Swift</a></p>

<p> A simple and beautiful chart lib used in Piner and CoinsMan for iOS(<a href="https://github.com/kevinzhow/PNChart">https://github.com/kevinzhow/PNChart</a>) Swift Implementation</p></li>
<li><p><a href="https://github.com/Boris-Em/BEMSimpleLineGraph">BEMSimpleLineGraph</a></p>

<p> BEMSimpleLineGraph is a charting library that makes it easy to create beautiful line graphs for iOS. It is easy to set-up and to use in any iOS Project. It&rsquo;s focused on highly customizable and interactive line graphs. Plus, it is lightweight and can be integrated in minutes (maybe even seconds).</p>

<p> BEMSimpleLineGraph&rsquo;s implementation, data source, and delegate are all modeled off of UITableView and UICollectionView. If you&rsquo;re familiar with using a UITableView, UITableViewController, or UICollectionView, using BEMSimpleLineGraph should be a breeze!</p></li>
<li><p><a href="https://github.com/xyfeng/XYPieChart">XYPieChart</a></p>

<p> XYPieChart is an simple and easy-to-use pie chart for iOS app. It started from a <a href="http://www.potiondesign.com/">Potion</a> Project which needs an animated pie graph without interaction. All animation was implemented in the drawRect: method. After played with <a href="https://github.com/briancoyner/Core-Animation-Pie-Chart">BTSPieChart</a>, really like its code structure, it’s clean, has well named functions, structure like a UITableView. XYPieChart rewrote the code, based on CALayers for the animation. Compared to BTSPieChart, XYPieChart is a prettier version, it has a simpler insert/delete slices algorithm, different design of slice selection, more flexible to customize.</p>

<p> Features</p>

<ul>
<li>Customized color for slices (default color supported)</li>
<li>animated insert/delete slice(s)</li>
<li>slice selection animation</li>
<li>text label option of showing percentage or actual value</li>
<li>text label auto-hide when slice is too small</li>
<li>customizable text label font and relative postion</li>
<li>pie opening/closing animation</li>
<li>pie starting angle support</li>
<li>ARC support</li>
<li>interface builder support</li>
</ul>
</li>
<li><p><a href="https://github.com/AlexandrGraschenkov/MagicPie">MagicPie</a></p>

<p> Powerful pie layer for creating your own pie view. PieLayer provide great animation with simple usage.</p>

<p> The main advantage of that control that there is no worry about displaying of animation. Animation will display correctly even if you will add new elements during execution of another slice deleting animation. That&rsquo;s amazing! And here is no delegates. I like delegates, but in this case I think they are excess.</p></li>
<li><p><a href="https://github.com/danielgindi/ios-charts">ios-charts</a></p>

<p> An iOS port of the beautiful MPAndroidChart. &ndash; Beautiful charts for iOS apps!</p>

<p> Okay so there&rsquo;s this beautiful library called <a href="https://github.com/PhilJay/MPAndroidChart">MPAndroidChart</a> by <a href="https://www.linkedin.com/in/philippjahoda">Philipp Jahoda</a> which has become very popular amongst Android developers, and in the meanwhile there&rsquo;s no decent charting solution for iOS.</p>

<p> I&rsquo;ve chosen to write it in Swift as it can be highly optimized by the compiler, and can be used in both Swift and ObjC project. The demo project is written in ObjC to demonstrate how it works.</p>

<p> An amazing feature of this library now, both Android and iOS, is the time it saves you when developing for both platforms, as the learning curve is singleton- it happens only once, and the code stays very similar so developers don&rsquo;t have to go around and re-invent the app to produce the same output with a different library. (And that&rsquo;s not even considering the fact that there&rsquo;s not really another good choice out there currently&hellip;)</p>

<p> Core features:</p>

<ul>
<li>8 different chart types</li>
<li>Scaling on both axes (with touch-gesture, axes separately or pinch-zoom)</li>
<li>Dragging / Panning (with touch-gesture)</li>
<li>Combined-Charts (line-, bar-, scatter-, candle-stick-, bubble-)</li>
<li>Dual (separate) Y-Axis</li>
<li>Finger drawing (draw values into the chart with touch-gesture)</li>
<li>Highlighting values (with customizeable popup-views)</li>
<li>Multiple / Separate Axes</li>
<li>Save chart to camera-roll / export to PNG/JPEG</li>
<li>Predefined color templates</li>
<li>Legends (generated automatically, customizeable)</li>
<li>Customizeable Axes (both x- and y-axis)</li>
<li>Animations (build up animations, on both x- and y-axis)</li>
<li>Limit lines (providing additional information, maximums, &hellip;)</li>
<li>Fully customizeable (paints, typefaces, legends, colors, background, gestures, dashed lines, &hellip;)</li>
</ul>
</li>
</ol>


<h3>Keyboard</h3>

<ol>
<li><p><a href="https://github.com/venmo/VENCalculatorInputView">VENCalculatorInputView</a></p>

<p> VENCalculatorInputView is the calculator keyboard that is used in the <a href="https://venmo.com/">Venmo</a> iOS app. Available for iOS 6 and beyond. Enjoy.</p>

<p> You can choose to use just <code>VENCalculatorInputView</code> (only the keyboard) and define your own behavior or use <code>VENCalculatorInputTextField</code> (keyboard + text field with money calculation built in).</p></li>
<li><p><a href="https://github.com/Brimizer/Slidden">Slidden</a></p>

<p> Slidden is an open source, customizable, iOS 8 keyboard, written in Swift. iOS 8 brought us the ability to create fully customizable keyboards, but does not provide a strong foundation to start from. Slidden aims to remedy that by providing an easy way to get started making your own iOS keyboards.</p>

<p> Slidden is in its early stages of life. Code will change dramatically between updates. Please consider contributing your ideas if you think something is missing!</p></li>
<li><p><a href="https://github.com/ayushgoel/AGEmojiKeyboard">AGEmojiKeyboard</a></p>

<p> An alternate keyboard for iOS that displays all the emojis supported by iOS.</p>

<p> Additions that need to be done</p>

<ul>
<li>stickers</li>
<li>custom emojis (different font)</li>
</ul>
</li>
</ol>


<h3>InputView</h3>

<ol>
<li><p><a href="https://github.com/slackhq/SlackTextViewController">SlackTextViewController</a></p>

<p> A drop-in UIViewController subclass with a growing text input view and other useful messaging features. Meant to be a replacement for UITableViewController &amp; UICollectionViewController.</p>

<p> This library is used in Slack&rsquo;s iOS app. It was built to fit our needs, but is flexible enough to be reused by others wanting to build great messaging apps for iOS.</p>

<p> Features</p>

<ul>
<li><p>Core</p>

<ul>
<li>Works out of the box with <a href="https://github.com/slackhq/SlackTextViewController/tree/swift-example#subclassing">UITableView or UICollectionView or UIScrollView</a></li>
<li><a href="https://github.com/slackhq/SlackTextViewController#growing-text-view">Growing Text View</a>, with line count limit support</li>
<li>Flexible UI built with Auto Layout</li>
<li>Customizable: provides left and right button, and toolbar outlets</li>
<li>Tap Gesture for dismissing the keyboard</li>
<li><a href="https://github.com/slackhq/SlackTextViewController#panning-gesture">Panning Gesture</a> for sliding down the keyboard</li>
<li><a href="https://github.com/slackhq/SlackTextViewController#external-keyboard">External keyboard</a> commands support</li>
<li>Undo/Redo (with keyboard commands and UIMenuController)</li>
<li>Text Appending APIs</li>
</ul>
</li>
<li><p>Optional</p>

<ul>
<li><a href="https://github.com/slackhq/SlackTextViewController#autocompletion">Autocomplete Mode</a> by registering any prefix key (@, #, /)</li>
<li><a href="https://github.com/slackhq/SlackTextViewController#edit-mode">Edit Mode</a></li>
<li><a href="https://github.com/slackhq/SlackTextViewController#typing-indicator">Typing Indicator</a> display</li>
<li><a href="https://github.com/slackhq/SlackTextViewController#shake-gesture">Shake Gesture</a> for clearing text view</li>
<li>Multimedia Pasting (png, gif, mov, etc.)</li>
<li><a href="https://github.com/slackhq/SlackTextViewController#inverted-mode">Inverted Mode</a> for displaying cells upside-down (using CATransform) &mdash; a necessary hack for some messaging apps. YES by default, so beware, your entire cells might be flipped!</li>
<li>Bouncy Animations</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://github.com/bkook/BKMoneyKit">BKMoneyKit</a></p>

<p> iOS UI controls and formatters for entering money, credit card number and expiry date.</p>

<ul>
<li><code>BKCardNumberField</code>    Subclass of UITextField that supports formatting card number. You can show card logo image by setting <code>showsCardLogo</code> to <code>YES</code>.</li>
<li><code>BKCardNumberLabel</code>    Subclass of UILabel that displays formatted card number and card brand logo. You can mask card number by configuring <code>cardNumberFormatter</code>.</li>
<li><code>BKCardNumberFormatter</code>   Subclass of NSFormatter. This class has card number pattern information inside and formats according to patterns. You can customize masking behavior, masking character and group separater character.</li>
<li><code>BKCardExpiryField</code>   Subclass of UITextField that supports formatting card number expiry date.</li>
<li><code>BKCurrencyTextField</code> Subclass of UITextField that supports formatting money amount. You can change currency by changing the <code>currencyCode</code> property of <code>numberFormatter</code>.</li>
</ul>
</li>
<li><p><a href="https://github.com/zhanleewo/ZLMailComposerViewController">ZLMailComposerViewController</a></p>

<p> A Customized Email Composer for iOS.</p></li>
<li><p><a href="https://github.com/EddyBorja/MLPAutoCompleteTextField">MLPAutoCompleteTextField</a></p>

<p> MLPAutoCompleteTextField is a subclass of UITextField that behaves like a typical UITextField with one notable exception: it manages a drop down table of autocomplete suggestions that update as the user types. Its behavior may remind you of Google&rsquo;s autocomplete search feature. As of version 1.3 there is also support for showing the autocomplete table as an accessory view of the keyboard.</p></li>
<li><p><a href="https://github.com/TomSwift/TSCurrencyTextField">TSCurrencyTextField</a></p>

<p> TSCurrencyTextField is a UITextField subclass that behaves like an ATM currency-amount entry field: the user can enter decimal digits only and the field formats that input into a currency amount, complete with currency symbol ($), decimal point (.), and group separators (,).</p></li>
<li><p><a href="https://github.com/venmo/VENTokenField">VENTokenField</a></p>

<p> <code>VENTokenField</code> is the recipients token field that is used in the Venmo compose screen.</p></li>
</ol>


<h3>WebView</h3>

<ol>
<li><p><a href="https://github.com/ninjinkun/NJKWebViewProgress">NJKWebViewProgress</a></p>

<p> NJKWebViewProgress is a progress interface library for UIWebView. Currently, UIWebView doesn&rsquo;t have official progress interface. You can implement progress bar for your in-app browser using this module.
 NJKWebViewProgress doesn&rsquo;t use CocoaTouch&rsquo;s private methods. It&rsquo;s AppStore safe.</p></li>
<li><p><a href="https://github.com/TimOliver/TOWebViewController">TOWebViewController</a></p>

<p> TOWebViewController is an open-source   <code>UIViewController</code> subclass designed to fulfill one goal: to be able to quickly present a web page to the user, without needing to leave the current app.</p>

<p> TOWebViewController has been designed from the ground up to be easily integrated into existing projects, and to optionally be backwards compatible with earlier versions of iOS.</p>

<p> Features</p>

<ul>
<li>Backwards compatible down to iOS 5.</li>
<li>Full navigation buttons set, including back, forward, refresh and an optional &lsquo;action&rsquo; button.</li>
<li>Detects whether being pushed modally via [UIViewController presentViewController] or being pushed onto a UINavigationController stack and adjusts the UI accordingly.</li>
<li>A page load progress bar (using <a href="https://github.com/ninjinkun/NJKWebViewProgress">ninjinkun&rsquo;s amazing algorithm</a> )</li>
<li>Plays a smooth, elegant rotation animation if/when the user rotates the device</li>
<li>Icons are procedurally generated by CoreGraphics (ie, no un-necessary iOS 6 icons if you&rsquo;re only targeting iOS 7)</li>
<li>(TODO) Implement a confirmation dialog when the web view tries to switch to another app.</li>
<li>(TODO) Re-implement the popup that appears when users tap and hold a link for added flexibility.</li>
<li>(TODO) An optional text field for which users may manually enter in a URL</li>
<li>(TODO) A proper delegate system to allow external classes to interact with this controller.</li>
<li>(TODO) A rudimentary bookmark system.</li>
</ul>
</li>
</ol>


<h3>TableView</h3>

<ol>
<li><p><a href="https://github.com/2359media/STXDynamicTableView">STXDynamicTableView</a></p>

<p> Rebuilding of Instagram&rsquo;s dynamic table view. <a href="http://engineering.2359media.net/blog/2014/04/16/rebuilding-instagram-feed-table-view/">http://engineering.2359media.net/blog/2014/04/16/rebuilding-instagram-feed-table-view/</a></p>

<p> STXDynamicTableView is designed to solve the common use case to display a feed of photos with their corresponding likes, caption, and comments. It&rsquo;s inspired by Instagram feed table view.</p></li>
</ol>


<h3>ImageView</h3>

<ol>
<li><p><a href="https://github.com/johnil/VVeboImageView">VVeboImageView</a></p>

<p> A UIImageView to play gif with low memory.</p></li>
<li></li>
</ol>


<h3>Clock</h3>

<ol>
<li><p><a href="https://github.com/Boris-Em/BEMAnalogClock">BEMAnalogClock</a></p>

<p> BEMAnalogClock makes it easy to create and customize clocks for iOS.</p></li>
<li></li>
</ol>


<h1>Tools</h1>

<ol>
<li><p><a href="https://github.com/blommegard/APNS-Pusher">APNS-Pusher</a></p>

<p> A simple debug application for Apple Push Notification Service (APNS).</p>

<p> Features</p>

<ul>
<li>Send push notifications to APNS (Apple Push Notification Service) very easily (no configuration needed at all)</li>
<li>Grabs the certificate right from your keychain</li>
<li>Get the device token automatically via Bonjour; forget about manually retrieving the device token through logging or similar techniques. Useful when not in sandbox mode</li>
<li>Support for error response codes</li>
<li>Detects Development/Production environment automatically</li>
<li>Custom JSON payloads</li>
<li>Identity export to PEM format (⌘ + E)</li>
</ul>
</li>
<li><p><a href="https://github.com/swisspol/GCDWebServer">GCDWebServer</a></p>

<p> GCDWebServer is a modern and lightweight GCD based HTTP 1.1 server designed to be embedded in OS X &amp; iOS apps. It was written from scratch with the following goals in mind:</p>

<ul>
<li>Elegant and easy to use architecture with only 4 core classes: server, connection, request and response (see &ldquo;Understanding GCDWebServer&rsquo;s Architecture&rdquo; below)</li>
<li>Well designed API with fully documented headers for easy integration and customization</li>
<li>Entirely built with an event-driven design using Grand Central Dispatch for best performance and concurrency</li>
<li>No dependencies on third-party source code</li>
<li>Available under a friendly New BSD License</li>
</ul>


<p> Extra built-in features:</p>

<ul>
<li>Allow implementation of fully asynchronous handlers of incoming HTTP requests</li>
<li>Minimize memory usage with disk streaming of large HTTP request or response bodies</li>
<li>Parser for web forms submitted using &ldquo;application/x-www-form-urlencoded&rdquo; or &ldquo;multipart/form-data&rdquo; encodings (including file uploads)</li>
<li>JSON parsing and serialization for request and response HTTP bodies</li>
<li>Chunked transfer encoding for request and response HTTP bodies</li>
<li>HTTP compression with gzip for request and response HTTP bodies</li>
<li>HTTP range support for requests of local files</li>
<li>Basic and Digest Access authentications for password protection</li>
<li>Automatically handle transitions between foreground, background and suspended modes in iOS apps</li>
<li>Full support for both IPv4 and IPv6</li>
</ul>


<p> Included extensions:</p>

<ul>
<li>GCDWebUploader: subclass of GCDWebServer that implements an interface for uploading and downloading files using a web browser</li>
<li>GCDWebDAVServer: subclass of GCDWebServer that implements a class 1 WebDAV server (with partial class 2 support for OS X Finder)</li>
</ul>


<p> What&rsquo;s not supported (but not really required from an embedded HTTP server):</p>

<ul>
<li>Keep-alive connections</li>
<li>HTTPS</li>
</ul>
</li>
<li><p><a href="https://github.com/krzysztofzablocki/crafter">crafter</a></p>

<p> How do you setup your Cocoa projects? Do you always set same warnings, clone configurations and do bunch of other stuff? Or maybe you work in a big company and you are missing some standardised setup?</p>

<p> Programmers tend to automatise boring and repetitive tasks, yet I often see people spending time and time again configuring their Xcode Projects, even thought they always set it up same way.</p>

<p> We all know that Xcode templating system is far from perfect, beside we often use different templates, but same level of warnings, scripts etc.</p>

<p> What if you could define your project setup once (even with optional stuff) then just apply that to all your projects?</p>

<p> That&rsquo;s why I&rsquo;ve created crafter, a ruby gem that you can install, setup your configuration once and enjoy hours of time saved.</p></li>
<li><p><a href="https://fastlane.tools">fastlane</a></p>

<p> fastlane lets you define and run your deployment pipelines for different environments. It helps you unify your app’s release process and automate the whole process. fastlane connects all fastlane tools and third party tools, like CocoaPods and xctool.</p>

<p> Fastlane can do a lot for you to automate tedious and time-consuming parts of your job.</p>

<ul>
<li>Connect all tools, part of the <code>fastlane</code> toolchain to work seamlessly together.</li>
<li>Define different deployment lanes for App Store deployment, beta builds or testing.</li>
<li>Deploy from any computer.</li>
<li><a href="https://github.com/KrauseFx/fastlane/blob/master/docs/Jenkins.md">Jenkins Integration</a>: Show the output directly in the Jenkins test results.</li>
<li>Write your <a href="https://github.com/KrauseFx/fastlane/blob/master/docs#extensions">own actions</a> (extensions) to extend the functionality of fastlane.</li>
<li>Store data like the <code>Bundle Identifier</code> or your <code>Apple ID</code> once and use it across all tools.</li>
<li>Never remember any difficult commands, just <code>fastlane</code>.</li>
<li>Easy setup, which helps you getting up and running very fast.</li>
<li><a href="https://github.com/KrauseFx/fastlane/blob/master/docs/Advanced.md#lane-context">Shared context</a>, which is used to let the different deployment steps communicate with each other.</li>
<li>Store everything in git. Never lookup the used build commands in the Jenkins configs.</li>
<li>Saves you hours of preparing app submission, uploading screenshots and deploying the app for each update.</li>
<li>Very flexible configuration using a fully customizable <code>Fastfile</code>.</li>
<li>Once up and running, you have a fully working Continuous Deployment process. Just trigger <code>fastlane</code> and you&rsquo;re good to go.</li>
<li>Over 30 built-in integrations available.</li>
</ul>
</li>
<li><p><a href="http://www.quickpicturetools.com/en/rounded_corners/">Rounded Corners</a></p>

<p>  在线生成圆角图片</p></li>
<li><p><a href="https://github.com/JamieMason/ImageOptim-CLI">ImageOptim-CLI</a></p>

<p> Automates <a href="http://imageoptim.com/">ImageOptim</a>, <a href="http://pngmini.com/">ImageAlpha</a>, and <a href="http://jpegmini.com/mac">JPEGmini for Mac</a> to make batch optimisation of images part of your automated build process.</p>

<p> While other image optimization tools are available from the command line, ImageOptim-CLI exists because the current benchmarks suggest that <a href="http://imageoptim.com/">ImageOptim</a>, <a href="http://pngmini.com/">ImageAlpha</a> and <a href="http://jpegmini.com/mac">JPEGmini</a> currently outperform those alternatives over lossless and lossy optimizations.</p></li>
<li><p><a href="http://submit.icoicon.com">icoicon</a></p>

<p> 通过 iOS App 的 iTunes url 获得全尺寸的 App icon</p></li>
<li><p><a href="https://rollout.io">rollout.io</a></p>

<p> React to your production issues in real time. Access your app&rsquo;s functions and patch them using pre-defined solutions with Rollout.io&rsquo;s SDK.</p>

<p> Users can receive in-app alert messages on features that are currently inactive. Keeping them in the loop helps avoid bad reviews.</p>

<p> Stop basing your reports on what you knew 2 weeks ago. Add or disable events on the fly (flux capacitor included). No more waiting for a release cycle just send a new event.</p>

<p> A ground-breaking approach for root cause analysis. Add logs to your app in production, scan your stack trace for its&#8217; arguments when the crash happens and add breakpoints to a running session.</p></li>
<li><p><a href="http://cocoapods.org/">CocoaPods</a></p></li>
<li><p><a href="https://github.com/Carthage/Carthage">Carthage</a></p>

<p>Carthage is intended to be the simplest way to add frameworks to your Cocoa application.</p>

<p>The basic workflow looks something like this:</p>

<ul>
<li>Create a Cartfile that lists the frameworks you’d like to use in your project.</li>
<li>Run Carthage, which fetches and builds each framework you’ve listed.</li>
<li>Drag the built .framework binaries into your application’s Xcode project.</li>
</ul>


<p>Carthage builds your dependencies and provides you with binary frameworks, but you retain full control over your project structure and setup. Carthage does not automatically modify your project files or your build settings.</p></li>
<li><p><a href="http://simpholders.com/">SimPholders</a></p>

<p> Features</p>

<ul>
<li>Access all application folders from status item menu</li>
<li>Quickly reset app storage by deleting files in Library and Documents (⌃ + Click)</li>
<li>Detailed information of file size and number of items in app bundle (⇧)</li>
<li>Launch app directly in iPhone Simulator</li>
</ul>
</li>
<li><p><a href="http://nomad-cli.com/">nomad-cli</a></p>

<p>World-Class Command Line Utilities For iOS Development.</p>

<ul>
<li><p><a href="https://github.com/nomad/Cupertino">CUPERTINO</a></p>

<p>  Automate administrative tasks that you would normally have to do through the Apple Dev Center website. Life&rsquo;s too short to manage device identifiers by hand!
  $ ios devices:list</p></li>
<li><p><a href="https://github.com/nomad/Houston">HOUSTON</a></p>

<p>  Send push notifications from the command line. Simply provide your credentials, construct your message, and 3&hellip;2&hellip;1&hellip; blastoff.</p>

<p>  $ apn push &ldquo;<token>&rdquo; -c /path/to/cert.pem -m &ldquo;Hello!&rdquo;</p></li>
<li><p><a href="https://github.com/nomad/Dubai">DUBAI</a></p>

<p>  Generate Passbook .pkpass files with ease. Rapidly iterate on the design and content of your passes, or generate one-offs on the fly.</p>

<p>  $ pk generate Example.pass -T boarding-pass</p></li>
<li><p><a href="https://github.com/nomad/Venice">VENICE</a></p>

<p>  Secure your In-App-Purchases by verifying App Store purchase receipts, and retrieving the information associated with receipt data.</p>

<p>  $ iap verify /path/to/receipt</p></li>
<li><p><a href="https://github.com/nomad/Shenzhen">SHENZHEN</a></p>

<p>  Create development builds and then distribute their .ipa files over TestFlight, HockeyApp, Amazon S3, or FTP. Get new builds out to testers and enterprises in seconds.</p>

<p>  $ ipa build &amp;&amp; ipa distribute</p></li>
</ul>
</li>
<li><p><a href="http://sketchtoappstore.com/">sketchtoappstore</a></p>

<p>Generate App Store images for all iPhone sizes from Sketch</p></li>
</ol>


<h1>Marketing</h1>

<ol>
<li><a href="https://sensortower.com">SensorTower</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vocabulary]]></title>
    <link href="http://xuguoxing.github.io/blog/2015/04/18/vocabulary/"/>
    <updated>2015-04-18T14:48:43+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2015/04/18/vocabulary</id>
    <content type="html"><![CDATA[<h1>人</h1>

<h2>称呼</h2>

<ul>
<li>pedestrian: 行人；平庸乏味的(不满)；徒步的，步行的

<ul>
<li>pedestrian crossing:人行横道；</li>
<li>pedestrian street 步行街</li>
</ul>
</li>
<li>colleague: 同事</li>
<li>elite:精英、杰出人物、佼佼者(复式)；精兵、精锐部队（总称）；掌权人物、上层人士（总称）；精英的</li>
<li>roamer: 漫游者；流浪者；漂泊者</li>
<li>civil: 民众的；民用的；民政的；民事的；社会的，国内的；公民的，市民的；民间的、文职的(与军人、圣职相区别)

<ul>
<li>civil servant: 公务员</li>
<li>civil law 民法</li>
<li>civil aviation 民用航空</li>
</ul>
</li>
<li>citizen:公民、国民；市民、城镇居民；

<ul>
<li>second-class citizen 次等公民</li>
<li>senior citizen 老年人</li>
<li>fellow citizen 各位公民，同胞</li>
</ul>
</li>
<li>tripper: 旅行者</li>
<li>excursionist 远足者</li>
<li>sightseer 观光客，游客</li>
<li>rubberneck:  伸长脖子观看、观光者、游览者、好事者</li>
<li>backpacker: 背包客</li>
<li>aviator: 飞行员</li>
<li>pilot: 飞行员；领航员；舵手；驾驶(飞机)，为(船只)领航;带领、引导

<ul>
<li>pilot project 试点项目；样板工程</li>
</ul>
</li>
<li>co-pilot :副驾驶</li>
<li>vandal: 故意破坏者(公共财产、文化艺术), (汪达尔人,日耳曼人的一支，曾攻占罗马肆意坡口)</li>
<li>mob: 暴民，乱民，犯罪团伙；围攻</li>
<li>mobster:暴徒</li>
<li>thug: 暴徒，恶棍，凶手，刺客;</li>
<li>punk: 朋克；小流氓</li>
<li>rogue: 流氓，无赖；捣蛋鬼（情感，喜欢）；行为异常的；劣种（农业）</li>
<li>gangster:(结成团伙的)匪徒；</li>
<li>clown: 小丑；滑稽的人、好说笑话的人、言行轻率的人、不足取信的人；粗鲁的人、乡巴佬、农民、庄稼汉</li>
<li>buffoon: (马戏、喜剧等)小丑，丑角；滑稽的人、爱讲粗俗笑话的人；粗俗而愚笨的人、缺乏教养的人；讲粗俗笑话、开下流玩笑；插科打诨</li>
<li>prostitute: 妓女；使沦为娼妓；出卖名誉、为钱而堕落(贪钱粗制滥造作品)；</li>
<li>hottie: 性感的人，惹火女孩，可人儿，可爱的少女</li>
<li>pessimist: 悲观主义者</li>
<li>cynic:愤世嫉俗者；犬儒学派的人</li>
<li>scavenger:捡垃圾者、拾破烂者；清洁工、清道夫；食腐动物、食菌植物；

<ul>
<li>scavenger hunts:拾荒式搜索：比如寻宝游戏（参加者在规定时间内寻找指定的物品，以先找到者为胜）</li>
</ul>
</li>
<li>spartan: 斯巴达人；勇士；斯巴达的、（生活方式）简朴的、清苦的</li>
<li>dean:(大学的)学院院长、系主任；教长（教堂）

<ul>
<li>academic dean:教务长</li>
<li>assistant dean:副院长</li>
<li>associate dean:副院长</li>
</ul>
</li>
<li>barista:咖啡师；</li>
<li>whippersnapper:傲慢的家伙；妄自尊大的人</li>
<li>infancy:婴儿期；初期；婴儿(总称)</li>
<li>mole:痣；鼹鼠；（政府或机构中的）间谍、长期潜伏的间谍、在暗处工作的人；</li>
<li>pirate:海盗；盗版(CD、DVD、书籍、计算机程序等)；非法复制

<ul>
<li>pirate game:海盗游戏</li>
<li>pirate bay:海盗湾</li>
<li>pirate software:盗版软件</li>
</ul>
</li>
<li>lackey:(穿制服的)男仆、仆人、跟班；走狗、马屁精、谄媚者、卑躬屈膝者；伺候、服侍、巴结</li>
<li>clerk:文书、（法庭）书记员；(酒店、办公室、医院等的)接待员；售货员

<ul>
<li>sales clerk: 售货员</li>
<li>office clerk: 办公室职员</li>
<li>accouting clerk:记账员</li>
<li>bank clerk:银行办事人员</li>
<li>desk clert:接待员</li>
</ul>
</li>
<li>overlord:霸王、大君主、最高统治者、封建领主</li>
<li>janitor:看门人、守卫；门警；清洁工</li>
<li>cripple:残疾人、跛子、瘸子；残缺的东西、有缺陷的事物；使受伤致残、受损、丧失活动能力；消弱</li>
<li>acolyte:助手、帮手；随从、侍从；追随者；教士助手、低级神职人员；卫星</li>
<li>cavalier:骑士、武士、豪侠；对女人献殷勤、有礼貌的绅士、（尤指）贵妇人的护送着；傲慢的、目空一切的、漫不经心的；自由自在的、快活的、磊落豪爽的</li>
<li>duchess:女公爵或公爵夫人；仪表威压(或雍容华贵、打扮美丽)的妇女；（以最高礼仪）盛情款待(贵宾、政要)，给予&hellip;最高礼遇</li>
<li>duke:（欧洲大陆）公、（小公国的）君主、亲王；英国公爵（次于亲王，高于侯爵）；（某些其他欧洲国家的）公爵；用拳狠击、搏斗、打架;与&hellip;握手

<ul>
<li>duke it out:打出高低（输赢、胜负），决一雌雄、打个明白</li>
<li>duke university:杜克大学</li>
</ul>
</li>
<li>earl:英国伯爵

<ul>
<li>earl grey:伯爵茶(一种红茶)</li>
</ul>
</li>
<li>monk:僧侣、和尚、修道士

<ul>
<li>Tamo Monk:达摩祖师</li>
</ul>
</li>
<li>craftsman:手艺人、手工艺人、工匠、（精于一门工艺的）巧匠、名匠</li>
<li>journeyman:熟练工、满师学徒工、熟手、（旧指学徒期满能胜任工作的）工匠；计时工、短工、雇佣工；时间旅者</li>
<li>apprentice:立师徒契约的学徒；使&hellip;做学徒；初学者、新手、生手；见习生

<ul>
<li>be bound apprentice to someone:签约从某人习手艺、当学徒</li>
<li>go apprentice (to) （跟&hellip;）当学徒</li>
</ul>
</li>
<li>trainee:</li>
<li>mentor:</li>
<li>prosecutor:检举人、公诉人、检察官、原告、起诉人

<ul>
<li>public prosecutor:检察官；公诉人</li>
<li>chief prosecutor: 首席检察官、检察长</li>
</ul>
</li>
<li>whistle blower:揭发者、检举人、告密者</li>
<li>sheriff:(美国的)县治安官、警长；（英国英语，英王或女王指定的）郡长</li>
<li>constable:(美国乡镇的)治安官；（英国等国家中级别最低的）警官、警员；

<ul>
<li>police constable:警员、警察</li>
</ul>
</li>
<li>marshal:(美国)联邦司法区执法官；（城市的）市司法官</li>
<li>puppet:木偶；受他人操作的人、傀儡；

<ul>
<li>puppet show:木偶戏</li>
<li>hand puppet:布袋木偶</li>
</ul>
</li>
<li>tinker:补锅匠、修补匠；做补锅匠、焊补；笨手笨脚做事；修补、粗修、小修改。</li>
<li>pervert:使败坏、堕落、反常，滥用；堕落者、行为反常者、（尤指在性行为方面）变态的人</li>
<li>alumni:校友

<ul>
<li>alumni association:校友会</li>
</ul>
</li>
<li>high and mighty. 大人物，权威人物；趾高气扬，非常傲慢</li>
<li>minion:</li>
</ul>


<h2>人群</h2>

<ul>
<li>roster:执勤表；花名册、名单;

<ul>
<li>duty roster:执勤表、轮值表</li>
</ul>
</li>
<li>caste:(印度社会的)种姓、种姓制度；（具有严格等级差别的）社会地位、（社会性昆虫中的）级、阶级；

<ul>
<li>caste system:种姓制度；等级制度</li>
<li>caste differentiation:阶级分化、等级分化</li>
</ul>
</li>
</ul>


<h2>情感</h2>

<h3>焦虑、不安</h3>

<ul>
<li>disquiet: 使内心不平静、不安静、不安；使忧虑、焦虑、发愁、烦恼、担心；扰乱、打扰(某人)</li>
<li>discompose: 使混乱、打乱、弄乱、扰乱、打乱&hellip;的秩序；使失去平衡；使心乱、心慌意乱、心神不宁；使不安

<ul>
<li>composure:镇定、定力、沉着、泰然自若</li>
<li>composure regain:恢复镇静</li>
</ul>
</li>
<li>disconcert: 破坏（计划等）、扰乱、打乱（计划、措施）；挫败；使陷入混乱;使困窘、窘迫、为难、不安、仓皇失措

<ul>
<li>disconcert our original plan:扰乱了我们的原计划</li>
<li>to make disconcert:使窘迫、不安、惊慌</li>
</ul>
</li>
<li>concern: 关系到、对&hellip;有关系、影响；使关心;从事、参与、使卷入、陷入、牵涉到；使担心、忧虑、挂念；(与某人)有关的事；厉害关系、重大关系、重要性；关心、担心、顾虑、挂念。

<ul>
<li>as concerns: 关于、涉及</li>
<li>as(so) far as .. be concerned: 就&hellip;而言</li>
<li>be concerned about(for):关心、忧虑、思念</li>
<li>concern oneself (with、about、in、over):从事、忙于</li>
<li>shared concern:共同关心的问题</li>
<li>humanistic concern:人文关怀</li>
</ul>
</li>
<li>anxiety:  忧虑、焦虑、挂虑、担忧、担心、焦急；渴望、热望、急切；焦虑原因、使人焦虑之事

<ul>
<li>anxiety disorder:焦虑症、焦虑性障碍</li>
<li>anxiety for something 渴望</li>
<li>test anxiety:考试焦虑</li>
</ul>
</li>
<li>worry: 担心、烦恼(长时间想)

<ul>
<li>I should worry:我一点都不在乎，我才不放在心上呢.</li>
<li>worry and worse:每况愈下、越来越坏</li>
<li>worry oneself:担心、发愁</li>
<li>worry about:焦虑&hellip;，担心</li>
<li>save worry: 省心、不费心、少操心</li>
<li>don‘t worry:不要紧、不用担心</li>
</ul>
</li>
<li>worrisome: 令人担心的；使人烦恼的、使人焦虑的；容易烦恼的</li>
<li>fear:害怕、担忧</li>
<li>jumpy:坐立不安的、提心吊胆的；神经质的；跳动的</li>
<li>agitate:(尤指剧烈地)摇动、拨动；搅动、搅拌(液体等);使激动、焦虑、狂躁不安；鼓动、煽动、扰乱(人心);抗争

<ul>
<li>agitate for:鼓动</li>
</ul>
</li>
<li>flurry:一段短暂的紧张期；（雨雪等）一阵；动乱、骚动、慌张、不安、激动；使混乱、慌张、惊惶、激动

<ul>
<li>piercing flurry:疾风刺骨</li>
<li>in a flurry:慌慌张张、仓皇</li>
</ul>
</li>
</ul>


<h3>恐慌、失望</h3>

<ul>
<li>dismay: (因突然的危险等)使完全丧失勇气、灰心丧气、胆怯、气馁、沮丧、失望；使幻灭；威吓；使惊愕、惊恐、吃惊到不安(或丧失勇气)的程度、使丧胆；使不安</li>
<li>alarm: 惊恐</li>
<li>dispirit: 使沮丧、消沉、气馁、无精打采、情绪低落、垂头丧气、灰心</li>
<li>depress:沮丧、情绪低落、下跌</li>
<li>disappointment: 失望</li>
<li>horrify: 恐惧、惊骇、极度厌恶(horror)</li>
<li>terrify: 使..害怕 (terror)</li>
<li>terrific:极好的、了不起的；极大的、非常的、极度的；可怕的、可怖的、骇人的、令人生畏的</li>
<li>dispondent:</li>
<li>anguish:</li>
</ul>


<h3>愤怒</h3>

<ul>
<li>ire: 愤怒、使..发怒</li>
<li>irritate: 激怒、刺激</li>
<li>indignation:愤慨、愤怒不平</li>
<li>fierce:野性的、凶猛的、狂怒的；猛烈的、狂暴的、激烈(行动)；热切的、热烈的、狂热的、下定决心的(感觉)

<ul>
<li>fierce stare:生气时瞪着眼睛</li>
<li>fierce competititon:激烈的竞争</li>
</ul>
</li>
<li>take pepper in the nose/grow pepper:发怒、发脾气、勃然大怒</li>
<li>fury:狂怒、暴怒；狂暴、猛烈、激烈；迅猛、奋力

<ul>
<li>The Sound and the Fury: 喧嚣与骚动（声音与疯狂），美国小说家福克纳长篇代表作</li>
</ul>
</li>
</ul>


<h3>爱好、痴迷</h3>

<ul>
<li>enthusiast: 热情、热心者；热衷于..的人;爱好者；入迷、狂热者；忠于(原则、事业、信仰等)的人</li>
<li>intoxicate: 使醉酒、麻醉；使陶醉、沉醉、狂喜；使中毒</li>
<li>intoxicant: 醉人的，可致醉的；令人陶醉的；可使中毒的，麻醉的</li>
<li>obsession: 迷恋、痴迷；困扰；被迷住(困扰、烦扰)的状态；烦扰人的情绪(或思想、充电)；强迫观念(心理学)</li>
<li>indulge:沉溺、使沉溺；纵容；

<ul>
<li>indulge oneself:恣纵己意</li>
<li>indulge games:沉溺有限</li>
</ul>
</li>
</ul>


<h3>冷淡</h3>

<ul>
<li>lukewarm:(尤指液体)微温的、温热的；冷淡的、冷漠的、不热情的、不关心的</li>
<li>tepid:温热的、微温的；冷淡的、不热烈的

<ul>
<li>tepid interest:不太浓厚的兴趣</li>
<li>sunshine tepid:阳光微热</li>
<li>tepid economic recovery:缓慢的经济复苏</li>
</ul>
</li>
<li>insipid:(事物、饮料等)没有味道的、淡而无味的；无趣味的、枯燥乏味的、无特色的、无吸引力的

<ul>
<li>insipid feeling:平淡感情</li>
<li>insipid weakness:轻度虚弱</li>
</ul>
</li>
</ul>


<h2>爱情、婚姻、性</h2>

<ul>
<li>prostitute: 妓女；使沦为娼妓；出卖名誉、为钱而堕落(贪钱粗制滥造作品)；</li>
<li>engagement: 约会；订婚约定；订婚时期；约束、约定（诺言、许诺、承诺、契约、婚约、受聘）；交战、遭遇战(军事)；需偿付的债务（商业） （break an * engagement 违约 meet one’s engagements 偿还债务；履行(契约等)义务）</li>
<li>proposal: 提案、提议(正式书面的)；求婚；推荐、申请

<ul>
<li>agreen to a proposal 同意某项建议(提案)</li>
<li>make a proposal (of marriage) 求婚</li>
<li>make(offer) proposal of(for) 向…求婚</li>
<li>design proposal 设计方案）</li>
</ul>
</li>
</ul>


<h2>思想、性格</h2>

<h3>性格</h3>

<ul>
<li>vigorous: 体力的(劳动)；用力的；精力充沛的(人);强有力的(运动、活动)</li>
<li>sour: 酸的；馊的；脾气坏的、不友好的；

<ul>
<li>be sour on :讨厌，厌恶</li>
<li>go（turn） sour: 发酸、变酸；（建议等）不受欢迎；（计划等）出了毛病；对&hellip;失去信心(或不报希望)</li>
<li>sour as vinegar:极酸，说话尖刻、脾气暴躁</li>
</ul>
</li>
<li>hasty:匆忙的、草率的</li>
<li>pasty:苍白的；馅饼</li>
<li>nasty:下流的、肮脏的；可恶的（事物、人或行为）；

<ul>
<li>nasty smell:恶心的气味</li>
</ul>
</li>
<li>benevolent:仁慈的、善心的、善意的；</li>
<li>brazen:黄铜的、黄铜制的；（颜色、强度等）似黄铜的、黄铜色的；厚脸皮的、厚颜无耻的、肆无忌惮的、无所顾忌的；厚着脸皮干、肆无忌惮地干、使变得无耻、无耻的对待

<ul>
<li>brazen it out:(虽已做错仍)厚着脸皮硬挺、干下去，装作没有做错似的，不觉羞愧的对待</li>
</ul>
</li>
<li>brutal:残暴的、凶猛的、残忍的、粗鲁的、冷酷无情的；不留情面的(诚实、直白);非常严厉的；（气候）严酷的、冷人难受的、难以忍受的；苛刻的

<ul>
<li>brutal violence:暴力</li>
</ul>
</li>
<li>relentless:毫不留情的、残酷的、不宽容的、残忍的；坚持不懈的、百折不挠的

<ul>
<li>relentless flow:流水无情</li>
<li>relentless insane:很疯狂</li>
</ul>
</li>
<li>steadfast:朝着一个方向的、方向固定的;固定不动的、固定不变的；坚定的、不动摇的

<ul>
<li>carefull steadfast:细心踏实</li>
<li>steadfast ally:巩固的同盟者</li>
</ul>
</li>
<li>pervert:使败坏、堕落、反常，滥用；堕落者、行为反常者、（尤指在性行为方面）变态的人</li>
<li>sane:心智健全的、神智正常的；健康的、无疾患的；理智的、合乎情理的；聪明的、聪慧的</li>
<li>insane:精神病的、精神失常的、精神错乱的；疯狂的、愚蠢的、荒唐的、不切实际的

<ul>
<li>insane asylum:精神病院</li>
</ul>
</li>
<li>insatiable:无法满足的、贪得无厌的</li>
<li>arrogant:自大的、傲慢的、妄自尊大的</li>
</ul>


<h3>想象</h3>

<ul>
<li>fancy :别致，阔气(不喜欢)；认为(自己)，(自)认为是(实际并不是)，以为，猜想；想象，错觉，幻觉；想要，喜欢；</li>
<li>fantasy: 幻想(的美好事物),虚幻的故事，幻想(活动)</li>
<li>illusion: 幻想(错误的)、假象、幻觉</li>
<li>hallucination:幻觉（生病或者毒品引发）</li>
<li>delusion:错觉，妄想 (self-delusion:自我欺骗，自欺，自欺欺人，自我错觉)</li>
<li>trippy:被致幻剂引起幻觉的；头昏眼花的、恍惚的、迷茫的、迷离的；稀奇古怪的、超现实的</li>
<li></li>
</ul>


<h3>渴望、立志、野心、大胆、无畏</h3>

<ul>
<li>aspire:  有志(于); 渴望、追求(aspire to/for/after)

<ul>
<li>aspiring: 有志向的；有雄心的，努力向上的；</li>
</ul>
</li>
<li>ambition: 理想；雄心、抱负、志向（对名利）；具体的(追求目标)；野心</li>
<li>audacious: 大胆的、勇敢的、无畏的、用于冒险的；冒失的、放肆的、荣莽的；厚颜无耻的，胆大妄为的；大胆创新的、标新立异的</li>
<li>outrageous: 不可接受的、令人震惊的(强调)；蛮横的，残暴的；无耻的、无道德的、极端无礼的；肆无忌惮的、毫无节制的。

<ul>
<li>outrageous fortune: 不义之财； 非凡运气；（词根 outrage）</li>
</ul>
</li>
<li>hairy:  多毛的；令人胆战心惊的；勇敢的人

<ul>
<li>BHAG(Big Hairy Audacious Goal)</li>
</ul>
</li>
<li>appetite: 胃口、食欲;欲望;兴趣、趣味、嗜好、爱好

<ul>
<li>after(to) someone&rsquo;s appetite(tast): 合某人的胃口(或心意)</li>
<li>Appetite comes with eating:(尝到甜头)胃口越吃越大.</li>
<li>appetite for further knowledge:求知欲望</li>
<li>appetite for 对&hellip;的欲望</li>
</ul>
</li>
</ul>


<h3>感觉</h3>

<ul>
<li>instinctive : 本能的；直觉的；天性的、天生的</li>
<li>intuitive: 直觉的；凭直觉的</li>
<li>tactile: 说话时爱碰别人的；（织物）手感好的；（经验或感觉）触觉的；可触知的、可感触到的；具有实体感觉的(绘画)

<ul>
<li>tactitle sensation:触觉、质感</li>
<li>tactitle hair:触毛、触觉毛</li>
<li>tactitle impression: 触觉印象；触感；感触；质感</li>
<li>tactile sensor:触觉感受器；触觉传感器</li>
</ul>
</li>
<li>obscure:鲜为人知的、不显著的、不引人注目的；（意思）不清楚的、不分明的；（语言、文体等）含糊的、晦涩的；复杂难懂的、难处理的；使含混、转弯抹角、难以理解；遮掩、遮盖、隐藏；

<ul>
<li>obscure bleeding:不明原因出血</li>
<li>obscure mathematics:模糊数学</li>
<li>obscure glass: 毛玻璃</li>
</ul>
</li>
<li>vague:含糊的、模糊的、不明确的；暧昧的、意向不明的；无表情的、茫然的、发呆的</li>
<li>lucid:透明的、清澈的；明晰的、易懂的、可理解的；（生病或头脑不清之后）神志清醒的、理智的；

<ul>
<li>lucid mind:神志清醒</li>
<li>lucid dream:清晰梦境</li>
</ul>
</li>
<li>grasp:抓住，抓紧，抓牢、抱住、握住、夹牢；急切(或贪婪)地抓住、抓取、夺取；控制、支配、掌控；理解、领会、领悟、明白；

<ul>
<li>beyond someone‘s grasp:某人无法得手的、为某人无法理解的、为某人力所不及的</li>
<li>Grasp all,lose all. 贪多必失</li>
<li>slip from (out of)one‘s grasp</li>
<li>grasp at:想抓住、攫取</li>
<li>grasp the overall situation:把握大局</li>
</ul>
</li>
<li>savvy:洞察力，见解，悟性；知道，领悟，理解；懂行(的人)</li>
</ul>


<h3>故意的</h3>

<ul>
<li>intentional: 故意的、有目的的</li>
<li>deliberate: 故意的、深思熟虑的、谨慎的</li>
<li>blatant:吵嚷的、喧闹的、吼叫的、大喊大叫的；炫耀的、显眼的、引人注目的、刺眼的、俗丽的；非常明显的、露骨的、公然的、厚颜无耻的</li>
</ul>


<h3>异议</h3>

<ul>
<li>dissent:异议；持有异议；对(国教、正教)表示不顺从;

<ul>
<li>dissent from: 不赞同；与&hellip;意见不同</li>
</ul>
</li>
</ul>


<h3>平凡的、单调的、世俗的</h3>

<ul>
<li>mundane:平凡的、单调的；平凡的事物、单调的事物；

<ul>
<li>mundane world:红尘、世俗社会；</li>
</ul>
</li>
<li>pedestrian: 行人；平庸乏味的(不满)；徒步的，步行的

<ul>
<li>pedestrian crossing:人行横道；</li>
<li>pedestrian street 步行街</li>
</ul>
</li>
<li>mortal: 终有一死的；凡人的、普通人的、人类的；人世的、现世的</li>
<li>tedium: 枯燥无聊；冗长乏味；单调、沉闷</li>
</ul>


<h3>世界观</h3>

<ul>
<li>pessimistic:悲观的、厌世的；悲观主义的

<ul>
<li>pessimist: 悲观主义者</li>
</ul>
</li>
<li>cynical:持人皆自私论的；（对事情的成功或人的诚信）怀疑的；愤世嫉俗的；讽刺的、冷嘲的；犬儒学派的、犬儒哲学的；

<ul>
<li>cynical realism: 玩世现实主义</li>
<li>cynical reason: 犬儒理性</li>
<li>cynic:愤世嫉俗者；犬儒学派的人</li>
</ul>
</li>
<li>idolatry:偶像崇拜、盲目崇拜、邪神崇拜</li>
</ul>


<h3>刺激、激励</h3>

<ul>
<li>incentive: 鼓励、激励；刺激；动机、诱因

<ul>
<li>incentive tour 奖励旅游</li>
<li>learning incentive: 学习诱因、动机</li>
<li>incentive mechanism 激励机制</li>
<li>incentive theory 激励理论；诱因论</li>
</ul>
</li>
<li>motivation: 动力、诱因、刺激；引起的动机、激发起了的积极性（或学习兴趣）；积极性、干劲、兴趣</li>
<li>stimulus:</li>
<li>invigorate:鼓舞、增加活力、使精力充沛；刺激、鼓励；

<ul>
<li>vigorous: 体力的(劳动)；用力的；精力充沛的(人);强有力的(运动、活动)</li>
</ul>
</li>
<li>inspire:鼓舞、鼓励；唤起、激起;赋..以灵感，给&hellip;以启示；</li>
<li>initiative:(重要的)法案、倡议;主动权；主动性、积极性

<ul>
<li>take the initiative 采取主动；带头</li>
<li>on one&rsquo;s own initiative 主动地</li>
<li>subjective initiative 主观能动性</li>
</ul>
</li>
</ul>


<h3>权利</h3>

<ul>
<li>empower:授权、委托；使能够、允许、许可</li>
<li>privilege:(某人、某团体拥有的)特权；（一小部分人因财富或与有权人的关系而拥有的）特权；荣幸；

<ul>
<li>exorbitant privilege:过度特权</li>
<li>privilege level:特权级别</li>
<li>privilege escalation:权限提升</li>
<li>special privilege:特权；特别优惠、特殊许可</li>
</ul>
</li>
</ul>


<h3>赞美、奇迹</h3>

<ul>
<li>marvel: 惊奇、惊讶、奇迹（含赞叹的意思,侧重于事情）</li>
<li>wonder: 惊奇、惊讶、奇迹（含好奇、疑惑、有求知欲的意思,或者人创造的奇迹）</li>
<li>wonderland:仙境

<ul>
<li>alice in wonderland:爱丽丝奇境记</li>
</ul>
</li>
<li>miracle: 奇迹 (含认为不可能的意思)</li>
<li>breathtaking: 令人惊叹的(强调);使人兴奋的；令人激动的

<ul>
<li>breathtaking moment:激动人心的时刻</li>
</ul>
</li>
<li>extol:高度赞扬、赞美、颂扬、赞颂、称赞、吹捧(同extoll)</li>
<li>brilliant:  极有才智的，绝妙的(person,idea,performance); 杰出的、非常成功的(career);  (色彩、光线)鲜艳、鲜明、强烈的；光辉的，辉煌的，耀眼的，闪亮的，灿烂的..

<ul>
<li>brilliant achievement:辉煌成就；</li>
<li>brilliant blue:亮蓝，孔雀蓝；</li>
<li>round brilliant:圆形明亮型(钻石)</li>
</ul>
</li>
<li>gorgeous:  十分宜人的，吸引人的；性感的(人); （外观、色彩等）灿烂的、绚丽的，华丽的，豪华的</li>
<li>fascinate: 使着迷、陶醉、神魂颠倒；使呆住、慑住，蛊惑

<ul>
<li>fascinating: 迷人的，吸引人的；</li>
</ul>
</li>
<li>monumental:巨大的；意义深远的、不朽的；宏伟的；纪念碑的

<ul>
<li>monumental writing 碑文</li>
</ul>
</li>
<li>immensely:</li>
<li>terrific:极好的、了不起的；极大的、非常的、极度的；可怕的、可怖的、骇人的、令人生畏的</li>
</ul>


<h3>安慰</h3>

<ul>
<li>consolation:安慰、慰问、慰藉；起安慰作用的人或物；受到安慰

<ul>
<li>consolation prize:安慰奖</li>
</ul>
</li>
<li>nostalgic:引起怀旧的；怀旧的、留恋过去的；想家的、思乡的、乡愁的；</li>
<li>nostalgic song:思乡曲，怀旧曲</li>
</ul>


<h3>灾难、破坏</h3>

<ul>
<li>cataclysm:大变化，大灾难；大洪水;地震;(社会政治的)大变动</li>
<li>catastrophe: 大灾难，大祸(骤然而来)；

<ul>
<li>catastrophe insurance 重大事故保险</li>
</ul>
</li>
<li>catastrophic:灾难性的、悲惨的、毁灭性的；极糟的、失败的

<ul>
<li>catastrophic collapse:毁灭性破坏</li>
<li>catastrophic failure:突变失效；灾难性故障</li>
</ul>
</li>
<li>tragedy: 灾难;悲剧(戏剧的一种);</li>
<li>devastate:</li>
<li>casualty:意外事故、（尤指）重大伤亡事故、灾害；（事故中的）伤亡人员、受害者；（事故中）损失、毁坏的物品；急救室

<ul>
<li>accident casualty:事故伤亡</li>
<li>mass casualty:集体事故</li>
<li>maritime casualty:海上事故</li>
<li>casualty insurance:灾难保险、不幸事故保险</li>
</ul>
</li>
</ul>


<h3>逃避</h3>

<ul>
<li>evade:逃避，回避，避开

<ul>
<li>evade taxation 逃税</li>
<li>evade school 逃学</li>
</ul>
</li>
<li>evasive: 避而不谈的，采取退避行动

<ul>
<li>evasive course:回避航向</li>
</ul>
</li>
<li>elude: 不为&hellip;所获;躲避,逃脱；避开(耳目，责任，查问..)；把..难住;不为&hellip;所记住

<ul>
<li>elude observation:避人耳目;</li>
<li>elude understanding:令人费解;</li>
<li>elude pursuit:逃避追捕</li>
</ul>
</li>
<li>elusive:难(懂、形容、记、取得)的;神出鬼没的

<ul>
<li>elusive game:难以捉摸的游戏</li>
</ul>
</li>
<li>seclusion:隔离、隔绝、孤立；隐退、隐居；僻静的地方、隐蔽之处

<ul>
<li>seclusion policy:锁国政策</li>
</ul>
</li>
<li>dodge:闪身避开、闪开、避开、躲避、闪避；规避、躲避、巧妙避开、设法或施计回避(问题、责任、义务、指责等)、推托、搪塞、对&hellip;做遁词、耍花招、玩弄诡计；避而不见

<ul>
<li>on the dodge: 东躲西藏以逃避警察追捕、在逃的；（为逃避追捕）无固定住处（的）；干鸡鸣狗盗（或不正经）的事情、勾当</li>
<li>be up to all kinds of dodges:施展各种诡计</li>
</ul>
</li>
<li>retreat:退出、离开；（军队）撤退；休息寓所

<ul>
<li>retreat into oneself: 退隐、离群索居</li>
<li>retreat from: 退出、放弃</li>
<li>in full retreat:全线溃退</li>
</ul>
</li>
<li>refuge:避难、庇护；避难所、收容所；隐蔽处、安全地带、（马路中间的）安全岛；

<ul>
<li>give refuge to: 庇护&hellip;;对&hellip;予以庇护</li>
<li>seek refuge:寻求庇护；避难</li>
<li>take refuge(in)：在&hellip;中避难；求助于&hellip;;用&hellip;回避，用&hellip;支吾过去</li>
</ul>
</li>
<li>harbour:港口、藏匿</li>
<li>haven: 港口、停泊处；使入港、使停泊；避难所、安全住所、避风港；为&hellip;提供庇护所；

<ul>
<li>safe haven: 安全港；容许幅度标准</li>
<li>tax haven: 避税场所(税率很低的国家或地区)</li>
</ul>
</li>
<li>asylum:避难所、庇护处、躲避处、保护设施；政治避难权、庇护权、（给予通常因政治原因不能回国的人的）避难许可；精神病院

<ul>
<li>soul asylum:灵魂庇护所</li>
<li>diplomatic asylum:外交庇护</li>
<li>political asylum:政治庇护</li>
<li>insane asylum:精神病院</li>
</ul>
</li>
</ul>


<h3>轻视、蔑视</h3>

<ul>
<li>contempt:</li>
<li>scorn:</li>
<li>condescension:</li>
<li>disdain:</li>
<li>despise</li>
</ul>


<h3>其他</h3>

<ul>
<li>spartan: 斯巴达人；勇士；斯巴达的、（生活方式）简朴的、清苦的</li>
<li>domestic: 国内的；家庭的；驯养的；一心只管家务的；国货，佣人

<ul>
<li>domestic flight: 国内航班</li>
<li>domestic sewage: 生活污水</li>
<li>domestic market: 国内市场</li>
<li>domestic demand: 国内需求</li>
<li>domestic product: 国内产品，本地生产</li>
</ul>
</li>
<li>consequential:随之而起的、作为结果的、后果的、继起的；逻辑上必然的；重要的、有重大意义的、引起重要后果的

<ul>
<li>consequential loss:间接损失、从属的损失、后果性损失</li>
</ul>
</li>
</ul>


<h2>冲突、对抗</h2>

<h3>冲突</h3>

<ul>
<li>clash: 发生响声的碰撞，引申为冲突</li>
<li>conflict: 冲突、矛盾、斗争  ；意见不合引起争执或战争。</li>
<li>collide:碰撞、引申为冲突</li>
<li>contradict: 反驳、矛盾、观点看法不一致</li>
<li>cripple:残疾人、跛子、瘸子；残缺的东西、有缺陷的事物；使受伤致残、受损、丧失活动能力；消弱</li>
<li>negate:取消，使无效；否定、否认</li>
</ul>


<h3>麻烦、障碍</h3>

<ul>
<li>hassle :麻烦；烦扰；激烈而持久的争论、争吵；激励的冲突、搏斗、斗争；纠缠、打扰；欺凌、骚扰、凌辱、折磨</li>
<li>harass:骚扰、侵扰</li>
<li>obstacle:</li>
<li>friction: （人与人之间的）摩擦、（因意见分歧、急躁产生的）不和、争执、摩擦力；

<ul>
<li>frictionless: 无摩擦的；光滑的</li>
</ul>
</li>
<li>procrastination:拖延；耽搁</li>
<li>stumble:踉跄、绊脚、绊倒、跌倒；蹒跚、东倒西歪的走；失足、失误、犯错误、铸成大错；使为难、使困惑、使犹豫不决

<ul>
<li>stumble upon:偶然发现</li>
<li>stumble on:无意中发现、偶然遇到、碰巧找到</li>
<li>stumble over:给&hellip;绊倒；结结巴巴额说</li>
</ul>
</li>
<li>impasse:僵局、僵持；死路；绝境</li>
<li>tether:(栓动物的)绳、链；拴住、约束、束缚;(活动)范围；（能力、智能的）限度；

<ul>
<li>at the end of one&rsquo;s tether:束手无策、山穷水尽、智穷计尽、走投无路、忍无可忍</li>
</ul>
</li>
<li>reluctant:不愿意的；勉强的；顽抗的、反抗的、反对的

<ul>
<li>reluctant to help:不情愿帮忙</li>
</ul>
</li>
<li>foil: 阻挠、挫败、使成泡影；（狩猎）扰乱（嗅迹或足迹）；金属箔；用箔包裹、在&hellip;上贴箔、用箔为&hellip;衬底；花剑、轻剑

<ul>
<li>break one‘s foil:（猎物）从原路返回逃脱</li>
<li>run（uopon）the foil:（猎物）奔回原路(以搅乱踪迹迷惑猎犬)；使迷惑、使产生错觉</li>
</ul>
</li>
<li>mess up:把&hellip;搞糟、弄乱、弄脏；陷入困境；</li>
<li>inconvenience:不方便、麻烦、打扰、困难；给&hellip;带来不便，使麻烦，打扰；</li>
<li>dilemma:(进退两难的)困境，进退维谷

<ul>
<li>in a dilemma:进退两难，左右为难</li>
<li>put someone in(into) a dilemma:使某人处于进退两难境地</li>
<li>prisoner‘s dilemma:囚徒困境</li>
<li>moral dilemma:道德上的两难处境</li>
</ul>
</li>
<li>condemn:</li>
</ul>


<h3>诱骗，诱饵</h3>

<ul>
<li>decoy: 诱饵；引诱(鸟、兽)；诱骗；被诱（骗）

<ul>
<li>optical decoy:光学假目标</li>
</ul>
</li>
<li>bait: 饵（食物）;放诱饵; 诱饵;折磨

<ul>
<li>cut bait or fish: 要么全力以赴，要么放弃</li>
</ul>
</li>
<li>lure: 吸引，引诱，诱惑；诱饵;诱惑力，魅力；

<ul>
<li>alight on the lure: 上当，上钩</li>
<li>come(stoop) one one‘s(the)lure: 上当、上钩</li>
<li>bring someone to his/the lure:引某人上钩</li>
</ul>
</li>
<li>entice: 怂恿,唆使；利诱，引诱；</li>
<li>tempt:</li>
</ul>


<h3>犯罪、暴力行为</h3>

<ul>
<li>blackmail: 敲诈(通过暴露秘密); 要挟(通过情感，道德等); 敲诈勒索得来的钱财

<ul>
<li>blackmail someone into doing something 胁迫某人做某事</li>
</ul>
</li>
<li>extortion:  勒索(通过强迫，威胁); (官吏使用职权、暴力、威胁等手段)敲诈勒索钱财(罪)；被勒索的钱财</li>
<li>chantage:敲诈；勒索(法语)</li>
<li>misdemeanor:轻罪；品行不端</li>
<li>felony: 重罪、(法律)严重犯罪(如谋杀、放火、强奸等)</li>
<li>reprieve:(被判)缓刑；撤销(刑罚);暂缓、暂缓令；</li>
<li>intimidate: 恐吓，威胁；胁迫

<ul>
<li>to intimidate somebody into doing something :威逼某人做某事</li>
<li>intimidation:恐吓、威胁</li>
</ul>
</li>
<li>coercion: 强制，强迫；威压；高压政治;

<ul>
<li>state coercion:国家强制</li>
<li>coercion policy:高压政策</li>
<li>coerce:强制，胁迫，迫使；</li>
<li>coerce payment:强制还债</li>
</ul>
</li>
<li>vandalize: 肆意破坏；摧残

<ul>
<li>vandal: 故意破坏者(公共财产、文化艺术), (汪达尔人,日耳曼人的一支，曾攻占罗马肆意坡口)</li>
</ul>
</li>
<li>mob: 暴民，乱民，犯罪团伙；围攻

<ul>
<li>mobster:暴徒</li>
<li>mobocracy:暴民统治</li>
</ul>
</li>
<li>rob: 抢劫、盗窃，抢走，剥夺

<ul>
<li>robbery:抢劫</li>
</ul>
</li>
<li>thug: 暴徒，恶棍，凶手，刺客;

<ul>
<li>company thugs: 私营企业雇佣的保镖</li>
</ul>
</li>
<li>punk: 朋克；小流氓</li>
<li>rogue: 流氓，无赖；捣蛋鬼（情感，喜欢）；行为异常的；劣种（农业）

<ul>
<li>Rogue Trooper:侠盗骑兵</li>
</ul>
</li>
<li>gangster:(结成团伙的)匪徒；</li>
<li>larceny: 盗窃；盗窃罪</li>
<li>fraud:  诈骗罪；骗人的东西，计谋，骗局；骗子，伪善者；

<ul>
<li>in fraud of.. 为了诈骗&hellip;</li>
</ul>
</li>
<li>bribery: 行贿；受贿</li>
<li>embezzle:贪污、盗窃、盗用、挪用(公款)；侵吞（公物等）；监守自盗

<ul>
<li>embezzle money:挪用资金</li>
</ul>
</li>
<li>trespass:擅自进入、非法侵入、未经许可进入私人土地；侵犯、侵占；违反、冒犯；骚扰、打扰、妨碍；违反、违背</li>
<li>intrude:侵犯；打扰、扰乱；侵入、闯入(into)；占用（某人的时间等）；把&hellip;硬挤入(into)；把&hellip;强加于(on,upon)</li>
<li>confiscate:没收、充公、征用；被没收的、被充公的、被征用的；财产被没收的

<ul>
<li>confiscate land:征地、土地征用</li>
<li>administration confiscate:行政没收</li>
</ul>
</li>
<li>mayhem:极混乱状态；伤残；（法律）重伤害罪、故意伤害致残罪；蓄意破坏（或暴力）行为</li>
<li>detonate:引爆、爆炸；引起、激发（连串事件）

<ul>
<li>detonation:爆炸、引爆；</li>
<li>detonation velocity:起爆速度、爆震速度、爆炸速度</li>
<li>detonation wave: 爆炸波</li>
<li>sympathatic detonation:殉爆(由一个炸药包激发附件另一个爆轰)</li>
</ul>
</li>
<li>detonator:导火线、导火索、导爆器、雷管；爆炸物、炸药

<ul>
<li>electric detonator:电雷管</li>
<li>detonator device:爆炸装置</li>
<li>detonator lead: 雷管导线</li>
</ul>
</li>
<li>venue:举办场所;(法)犯罪地点、审批场所；（事情的）发生地点、现场；（争论中所采取的）立场

<ul>
<li>outdoor venue:户外场地</li>
<li>virtual venue:虚拟灰常</li>
<li>religious venue:宗教场所</li>
</ul>
</li>
<li>traitorous:背叛的、叛变的、不忠的；叛徒的、卖国贼的、犯叛国罪的

<ul>
<li>traitorous glory:卖国求荣</li>
<li>traitorous action:叛变行为</li>
</ul>
</li>
<li>pirate:海盗；盗版(CD、DVD、书籍、计算机程序等)；非法复制

<ul>
<li>pirate game:海盗游戏</li>
<li>pirate bay:海盗湾</li>
<li>pirate software:盗版软件</li>
</ul>
</li>
<li>tamper:篡改（文件等）、干预、损害；瞎弄、乱弄、摆弄；（用不正当手段）影响、左右、贿赂；</li>
<li>brutal:残暴的、凶猛的、残忍的、粗鲁的、冷酷无情的；不留情面的(诚实、直白);非常严厉的；（气候）严酷的、冷人难受的、难以忍受的；苛刻的

<ul>
<li>brutal violence:暴力</li>
</ul>
</li>
<li>scandal:丑闻、丑事、丑行；诋毁、诽谤、说(某人)的坏话；公然侮辱、使丢脸；流言蜚语

<ul>
<li>be the scandal of : 引起&hellip;的反感、激起&hellip;的愤慨</li>
<li>weather a scandal:挺住因不当行为而引起的舆论压力</li>
<li>sex scandal:性丑闻</li>
<li>watergate scandal:水门事件、水门丑闻</li>
</ul>
</li>
</ul>


<h3>军事、战斗、打斗</h3>

<ul>
<li>conquer: 征服、攻占、夺取、控制；克服、战胜、击败；获胜、成功；

<ul>
<li>conquer europe: 征服欧洲</li>
<li>dive and conquer:分而治之；各个击破</li>
</ul>
</li>
<li>vanquish:征服、彻底击败；克服；抑制(感情)</li>
<li>chamber:（身体或器官内的）室、膛；会议厅、（官邸的）接待室、（作特殊用途的）房间、房间（尤指卧室、寝室）；议院；室内的、小型的(音乐)；把&hellip;关进房间、禁闭；<code>把（弹药）装入枪膛</code>

<ul>
<li>chamber of commerce:商会</li>
<li>conbustion chamber:[机]燃烧室</li>
<li>red chamber: (加拿大议会)参议院</li>
</ul>
</li>
<li>enlist:（尤指自愿的）入伍、参军、应募；热心参加、赞助、支持某事业(企业、运动)；使&hellip;入伍、服兵役；赢得&hellip;的支持、谋取&hellip;的帮助（赞助）;为某事业、企业征集（人才、服务等）</li>
<li>tactic:战术、策略</li>
<li>campaign:(有计划的)活动、运动；竞选运动；一系列军事活动、战役;搞运动、参加运动、参加竞选；参战、参加战役、作战

<ul>
<li>campaign for: 为&hellip;助选；为&hellip;而进行活动</li>
<li>campaign against: 开展反对&hellip;的活动</li>
<li>advertising campaign:广告活动</li>
<li>Liaoshen Campaign:辽沈战役</li>
<li>Maryland Campaign:马里兰会战</li>
</ul>
</li>
</ul>


<h3>赌博</h3>

<ul>
<li>wager: 下赌注；赌注，打赌；赌金

<ul>
<li>A wager is a fool’s argument:只有傻瓜才以打赌解决争论</li>
</ul>
</li>
</ul>


<h3>欺骗、说谎、恶作剧、小丑等</h3>

<ul>
<li>hoax:谎报(电话、信息等)；欺骗、戏弄；骗局、圈套</li>
<li>prank: 恶作剧、开玩笑；打扮；装饰、点缀；打扮的漂亮、盛装卖弄</li>
<li>clown: 小丑；滑稽的人、好说笑话的人、言行轻率的人、不足取信的人；粗鲁的人、乡巴佬、农民、庄稼汉</li>
<li>buffoon: (马戏、喜剧等)小丑，丑角；滑稽的人、爱讲粗俗笑话的人；粗俗而愚笨的人、缺乏教养的人；讲粗俗笑话、开下流玩笑；插科打诨</li>
<li>plausible: (解释或叙述)看似合理的、表面上讲得通的；（人）看似可信的；巧嘴的、花言巧语的

<ul>
<li>plausible reasoning:合情推理</li>
<li>plausible move:虚着</li>
<li>plausible explanation:似有道理的解释；可信的解释</li>
</ul>
</li>
</ul>


<h2>行为、动作</h2>

<h3>体育、运动、健身</h3>

<ul>
<li>workout: 健身，（体育）锻炼，练习</li>
<li>gym: 健身房,体育馆；（学校的）体育活动</li>
<li>gymnastic: 体操的，体育的</li>
<li>stadium: 露天大型体育场</li>
<li>surf: 冲浪；浏览（互联网）</li>
<li>home run: 全垒打(棒球)</li>
<li>hockey:曲棍球、冰球

<ul>
<li>ice hockey:冰球、冰上曲棍球</li>
<li>field hockey:陆上曲棍球</li>
<li>hockey stick:曲棍、曲棍球球棍</li>
</ul>
</li>
</ul>


<h3>模仿</h3>

<ul>
<li>imitate:模仿，仿造</li>
<li>ape:猿类，引申为模仿</li>
<li>mimic: 模仿；善于模仿的人；滑稽剧演员、小丑、丑角；假的、假装的；拟态的(生物)</li>
</ul>


<h3>散步</h3>

<ul>
<li>roam:闲逛、漫游、漫步；徘徊、流浪；（有目的的）走来走去</li>
<li>roamer: 漫游者；流浪者；漂泊者</li>
<li>stroll:散步、漫步、溜达、闲逛；游荡、漫游、流浪；在&hellip;散步（闲逛）、在&hellip;漫步</li>
<li>pedestrian: 行人；平庸乏味的(不满)；徒步的，步行的 （pedestrian crossing:人行横道；pedestrian street 步行街）</li>
</ul>


<h3>刺、捅</h3>

<ul>
<li>stab: 刺、捅 （刀，利器）</li>
<li>poke: 捅、戳(手指，棍棒)</li>
<li>prong: (叉子等的)尖头、尖齿；叉子、干草耙；（小河的）分岔、支流；（树木的）分叉、树枝；（政策或计划等）部分；（用叉等）刺、戳；耙开；挖掘（泥土等）

<ul>
<li>prong fork:尖头叉</li>
</ul>
</li>
</ul>


<h3>其他</h3>

<ul>
<li>engagement: 约会；订婚约定；订婚时期；约束、约定（诺言、许诺、承诺、契约、婚约、受聘）；交战、遭遇战(军事)；需偿付的债务（商业） （break an * engagement 违约 meet one’s engagements 偿还债务；履行(契约等)义务）</li>
<li>proposal: 提案、提议(正式书面的)；求婚；推荐、申请

<ul>
<li>agreen to a proposal 同意某项建议(提案)</li>
<li>make a proposal (of marriage) 求婚</li>
<li>make(offer) proposal of(for) 向…求婚</li>
<li>design proposal 设计方案）</li>
</ul>
</li>
<li>congeal:凝结、凝固；使冻结、凝结、冻僵；使固定、一成不变；使瘫痪；变冷

<ul>
<li>congeal well:冻结井</li>
<li>freeze congeal:由于冷却而结冰</li>
</ul>
</li>
<li>dismantle:拆除&hellip;的家园(装备、装置、设备、防御工事等)；拆开、拆散、拆卸；解散；逐步废除；脱掉&hellip;的衣服、除去&hellip;的覆盖物(of);(机器等)可拆卸的、可拆开的</li>
<li>squirt:挤、喷出；（用某液体）喷(某物)；喷射器、注射器

<ul>
<li>squirt gun:水枪、喷枪、油枪、喷射器</li>
</ul>
</li>
<li>tackle:</li>
<li>tinker:补锅匠、修补匠；做补锅匠、焊补；笨手笨脚做事；修补、粗修、小修改。</li>
<li>discrimination:差别对待、差别待遇，（尤指对少数集团的）歧视、偏袒、偏爱，不公平待遇；鉴赏力；辨别力、识别力、判断力

<ul>
<li>racial discrimination:种族歧视</li>
<li>sex discrimination:性别歧视</li>
<li>price discrimination:价格歧视、差别取价</li>
</ul>
</li>
<li>grasp:抓住，抓紧，抓牢、抱住、握住、夹牢；急切(或贪婪)地抓住、抓取、夺取；控制、支配、掌控；理解、领会、领悟、明白；

<ul>
<li>beyond someone‘s grasp:某人无法得手的、为某人无法理解的、为某人力所不及的</li>
<li>Grasp all,lose all. 贪多必失</li>
<li>slip from (out of)one‘s grasp</li>
<li>grasp at:想抓住、攫取</li>
<li>grasp the overall situation:把握大局</li>
</ul>
</li>
<li>fall flat:平卧在地、（面朝下）跌倒;不被人欣赏的、引不起兴趣的；没有产生预期效果，完全失败；

<ul>
<li>Jokes fall falt:不好笑的笑话</li>
<li>fall flat on sb. 对某人不起作用</li>
</ul>
</li>
<li>prospect:可能性，前景、展望；将要发生的事、期望的事；成功的机会、前途；勘探、勘察、找矿；对&hellip;进行仔细调查；（矿等）有希望、有前途；

<ul>
<li>in prospect:可以预料到的，有希望的，展望中的</li>
<li>future prospect:未来展望，未来愿景</li>
<li>career prospect:职业前途</li>
<li>market prospect:市场前景</li>
<li>bright prospect:光明的前景、辉煌的前程</li>
</ul>
</li>
<li>anticipant:期望的、期待的、预期的；在前的、先行的、防止的、预防的；预言者、预期者、占先者、抢先者</li>
<li></li>
</ul>


<h2>语言、文学</h2>

<h3>术语、行话</h3>

<ul>
<li>lingo: （不会说、听不懂的）外语；行话</li>
<li>parlance: 术语;说法、写法、用语；

<ul>
<li>in common parlance: 照一般说法，俗话说；</li>
<li>in legal parlance: 用法律上的话来说</li>
<li>diplomatic parlance: 外交辞令</li>
<li>engineering parlance: 工程术语</li>
</ul>
</li>
<li>paraphrase:释义、改述；意译</li>
<li>delineate:描述、叙述；刻画、描写；划定(边界)；画出（或勾画出）&hellip;的轮廓,描述出&hellip;的轮廓，描出&hellip;的外形</li>
</ul>


<h3>理论、学术</h3>

<ul>
<li>attribution:归属、归因、消息出处；属性；归属物

<ul>
<li>attribution model:归因模型</li>
<li>false attribution:假资讯来源，冒名侵权</li>
<li>attribution theory:归因理论</li>
<li>causal attribution:因果性归因</li>
</ul>
</li>
</ul>


<h3>故事、传说</h3>

<ul>
<li>novel: 长篇小说；新法、附律；新奇的</li>
<li>tale: 故事(包含神奇的、令人激动的事件)；（对真实事件有趣的、令人激动的）描述；</li>
<li>graffiti:墙上乱写乱画的东西、涂鸦；在&hellip;上涂鸦、乱写乱画；[考古学]（古罗马石头、墙壁上的）粗糙刻画</li>
<li>fable:寓言；神话、传说；虚构的故事、谎言、无稽之谈；编(讲)（寓言、神话、传说等），煞有其事地讲述；杜撰、虚构、说谎；</li>
</ul>


<h3>戏剧</h3>

<ul>
<li>comedy : 喜剧片</li>
<li>tragedy: 悲剧片</li>
<li>horror: 恐怖片</li>
<li>humor: 幽默片</li>
<li>documentaries 记录片</li>
<li>action film 动作片</li>
<li>detective film 侦探片</li>
<li>overture:(歌剧、戏剧等的)序曲、前奏曲；序诗、序言、事件的开端；（为开始谈判、建立友好关系等做出的）主动表示、提议、姿态；</li>
</ul>


<h3>法律</h3>

<ul>
<li>precedent:先例;(法律)判例、惯例；在前的、在先的、前面的；

<ul>
<li>have no precedent to go by 无先例可循</li>
<li>set(create) a precedent for 为&hellip;开先例</li>
<li>condition precedent:先决条件；前提条件</li>
<li>binding precedent:有约束力的判例</li>
<li>judicial precedent:司法判例</li>
</ul>
</li>
<li>waiver:弃权、自动放弃；责任免除、豁免；弃权者；弃权声明书</li>
<li>jury:陪审团；（展览或竞赛等的）评奖团、评判委员会；起决定作用的人(物)

<ul>
<li>hang the jury:（律师等通过不正当手段施加影响）使陪审团由于意见分歧而无法做出决定</li>
<li>the jury is (still) out:陪审团尚未做出裁决；众说纷纭、莫衷一是</li>
<li>grand jury:大陪审团</li>
</ul>
</li>
<li>juror:陪审员、陪审团成员；（展览会、竞赛等的）评委、评奖人</li>
<li>verdict:（陪审团、法官对案件的）裁决；定论、结论</li>
<li>extradition:（根据条约或法令对逃犯、逃亡者、囚犯、战俘等从一国到另一国的）引渡</li>
<li>prosecute:贯彻、执行；经营、从事；对&hellip;提起公诉、（原告律师）起诉；检举；依法进行</li>
<li>prosecutor:检举人、公诉人、检察官、原告、起诉人

<ul>
<li>public prosecutor:检察官；公诉人</li>
<li>chief prosecutor: 首席检察官、检察长</li>
</ul>
</li>
<li>whistle blower:揭发者、检举人、告密者</li>
<li>amnesty:(尤指对政治犯的)大赦、赦免、特赦；赦免时段；对&hellip;实行大赦（特赦），准予大赦</li>
<li>subpoena:(传唤出庭作证的)传票；传唤(证人)出庭；要求（证据）到庭；

<ul>
<li>security subpoena:治安传唤</li>
<li>recieve a subpoena:接到传票</li>
</ul>
</li>
<li>legit:合法的、奉公守法的、守规矩的、法律认可的、真实的、正直的；正统戏剧、正统剧院、（正统剧演出的）舞台</li>
</ul>


<h2>疾病、医疗</h2>

<h3>医学、医院</h3>

<ul>
<li>paramedic:(医疗)护理人员;(伞兵)军医;医疗助手

<ul>
<li>paramedic skill:辅助医疗技术</li>
</ul>
</li>
<li>pharmacy: 药房；制药业；药剂学；</li>
<li>scalpel:手术刀、柳叶刀</li>
<li>radiology: 放射医学</li>
<li>prognosis:(对病人能否康复的)预后</li>
<li>tumor:肿瘤、肿块</li>
<li>autopsia:尸体解剖</li>
<li>coroner:验尸官</li>
<li>vitals:生命体征：脉搏，血压，体温等;(人体)的重要器官；要害</li>
<li>anatomy: 解剖，解剖学;(动、植物)结构、构造；身体

<ul>
<li>human anatomy:人体解剖学</li>
</ul>
</li>
<li>surgical:外科的；手术上的；外科手术、外科病房

<ul>
<li>surgical department:外科</li>
<li>surgical nursing:外科护理</li>
<li>surgical operation: 外科手术；外科手术式的作战</li>
<li>surgical intervention:手术治疗；外科手术</li>
</ul>
</li>
<li>chamber:<code>（身体或器官内的）室、膛；</code>会议厅、（官邸的）接待室、（作特殊用途的）房间、房间（尤指卧室、寝室）；议院；室内的、小型的(音乐)；把&hellip;关进房间、禁闭；把（弹药）装入枪膛

<ul>
<li>chamber of commerce:商会</li>
<li>conbustion chamber:[机]燃烧室</li>
<li>red chamber: (加拿大议会)参议院</li>
</ul>
</li>
<li>narcotic:麻醉剂、毒品、致幻毒品；麻醉的、麻醉性的；吸毒成瘾者；

<ul>
<li>narcotic drugs:麻醉药品；毒品</li>
<li>narcotic dependence:麻醉品依赖</li>
<li>narcotic plant:罂粟树</li>
</ul>
</li>
<li>incubator:孵卵器、保温箱；早产保育箱、细菌培养器；</li>
<li>insulin:胰岛素

<ul>
<li>insulin pump:胰岛素泵</li>
<li>insulin receptor:胰岛素受体</li>
<li>insulin resistance:扛胰岛素性</li>
</ul>
</li>
<li>stomach:胃；腹部、肚子、心窝；忍受、吃下

<ul>
<li>empty stomach:空腹</li>
<li>stomach trouble:胃病</li>
</ul>
</li>
<li>Hippocratic oath:希波克拉底誓言（指从医者执行医务前保证遵从医生道德守则的誓言）</li>
</ul>


<h3>疾病</h3>

<ul>
<li>paralysis: 瘫痪；瘫痪状态；</li>
<li>contagion: 传染、蔓延、传导、扩散;传染病

<ul>
<li>financial contagion:金融传染、金融危机传染</li>
<li>infection contagion:传染病、流行症</li>
<li>psychic contagion:心理传染、精神感染</li>
<li>emotional contagion:情绪感染</li>
</ul>
</li>
<li>epidemic:(疾病的)流行、（坏事的）盛行；流行病、瘟疫

<ul>
<li>epidemic disease:流行病、传染病、流行性疾病</li>
<li>cholera epidemic:霍乱流行</li>
<li>epidemic situation:疫情</li>
<li>epidemic prevention:防疫、疫病防治</li>
</ul>
</li>
<li>hypertension:高血压； （情绪等的）过度紧张、张力过强</li>
<li>allergic:过敏的、对&hellip;过敏的(to); 对&hellip;极讨厌的、感到厌恶的、强烈反感的

<ul>
<li>allergic rhinitis:过敏性鼻炎</li>
<li>allergic reaction:过敏反应</li>
</ul>
</li>
<li>anaphylactic:(病理学)过敏的、导致过敏的

<ul>
<li>anaphylactic rhinitis:过敏性鼻炎</li>
<li>anaphylactic shock:(医)过敏性休克</li>
</ul>
</li>
<li>chemo(chemotherapy):化疗</li>
<li>deficiency:缺乏、不足；缺点、缺陷；不足的数额

<ul>
<li>vitamin deficiency:维生素缺乏</li>
<li>oxygen deficiency:缺氧</li>
<li>deficienty claim:损失索赔</li>
<li>iron deficiency anemia:缺铁性贫血</li>
<li>mental deficiency:心智缺陷，精神不健全</li>
</ul>
</li>
<li>douche:灌洗(喷水)（疗法）、冲洗（疗法）；对&hellip;施行灌洗、冲洗、洗淋浴,冲洗(身体某部分，尤指阴道);

<ul>
<li>a code douche:(对某人或某事泼的)一盆冷水</li>
<li>throw a code douche upon: 对&hellip;泼冷水</li>
</ul>
</li>
<li>dehydration:脱水、干燥、十分口渴

<ul>
<li>food dehydration:食品脱水、食品干藏</li>
<li>dehydration rate:脱水率</li>
</ul>
</li>
</ul>


<h2>资产</h2>

<h3>金融</h3>

<ul>
<li>portfolio: 公文包，文件夹；投资组合；（用于参赛或求职的）作品选集；（高管的）职责

<ul>
<li>investment portfolio 投资证券组合</li>
</ul>
</li>
<li>kite:风筝；空头票据；开(空头支票、抵用票据); 涂改(支票);迅速上升、（价格）飞涨贪得无厌的人

<ul>
<li>fly one’s kite 试探舆论</li>
<li>fly a kite放风筝；开空头支票；试探舆论</li>
<li>as high as a kite( 因饮酒或吸毒而)飘飘然的、如痴如狂的</li>
<li>kite flying 放风筝，开空头支票，签发通融票据以资弥补</li>
</ul>
</li>
<li>mortgage:  房屋抵押贷款；抵押；以..做担保，把&hellip;许给，献身于(to mortgage one’s future)

<ul>
<li>mortgage loan:按揭贷款；</li>
<li>housing mortgage:住房按揭</li>
<li>secured loan:担保贷款</li>
</ul>
</li>
<li>equity: 资产净值;普通股、股东权益；公平

<ul>
<li>Private Equity:私募股本、私募基金</li>
<li>Negative Equity: 负资产</li>
<li>equity investment: 产权投资、股本投资</li>
<li>equity financing: 发行股票筹资；产权筹资</li>
</ul>
</li>
<li>voucher: 代币券、购物券；证明人、担保人；收据、凭证、证件、证书；传票、凭单

<ul>
<li>gift voucher:礼券(git token)</li>
<li>cash voucher:优惠券；现金凭证</li>
<li>voucher system:付款凭单制度；</li>
</ul>
</li>
<li>coupon: 优惠券；（报纸、杂志附带的）传单；（附在证券、票证上可撕下的）赠券、优待券、入场券； （公债的）息票；

<ul>
<li>coupon (bond) 息票；附息票债券</li>
<li>coupon rate: 票息、息票利率</li>
</ul>
</li>
<li>liquidity: 流动性、流动资产、资产折现力；

<ul>
<li>liquidity margin:流动资金比例；流动性保证金</li>
</ul>
</li>
<li>tranche:(股票的)一部分、（国际货币基金组织贷款划分的）部分、一期款项；（一）片、部分、群；

<ul>
<li>Reserve Tranche:储备部分贷款，储备份额</li>
<li>Tranche 1:第一批</li>
</ul>
</li>
</ul>


<h3>商业</h3>

<ul>
<li>mart:市场、商业中心、贸易中心；集市、交易会、拍卖会；买卖、讨价还价

<ul>
<li>Wal-Mart:沃尔玛</li>
<li>Online Mart:网上商城；网上购物</li>
</ul>
</li>
<li>barter:物物交换、进行易货物贸易、讨价还价、以&hellip;作为交换

<ul>
<li>barter trade:易货贸易、实物交易</li>
<li>barter away:吃亏廉卖；以&hellip;做交易</li>
</ul>
</li>
<li>tuition:学费、指导费；教学、讲授、教诲；

<ul>
<li>tuition fee:学费</li>
<li>tuition waiver:学费减免</li>
<li>tuition standard:学费标准</li>
<li>direct tuition:直接教导</li>
</ul>
</li>
<li>inbound marketing:</li>
<li>outbound marketing:</li>
<li>remarketing:再营销</li>
<li>campaign:(有计划的)活动、运动；竞选运动；一系列军事活动、战役;搞运动、参加运动、参加竞选；参战、参加战役、作战

<ul>
<li>campaign for: 为&hellip;助选；为&hellip;而进行活动</li>
<li>campaign against: 开展反对&hellip;的活动</li>
<li>advertising campaign:广告活动</li>
<li>Liaoshen Campaign:辽沈战役</li>
<li>Maryland Campaign:马里兰会战</li>
</ul>
</li>
</ul>


<h3>工作</h3>

<ul>
<li>harness:马具、挽具、挽具状带子、甲胄、铠甲、安全带、降落伞背带；套(马),给&hellip;上挽具，拴住，系住；控制&hellip;以产生动力，利用，驾驭；抑制、约束、驾驭；

<ul>
<li>die in harness:死在工作岗位上，在任职期间死去</li>
<li>go back into harness:(度假等之后)重回工作岗位</li>
<li>in double harness:双套(马车)的；已婚的；兼任两个职务的，做两份工作的</li>
<li>in harness:一起合作；在日常工作中</li>
<li>chest harness:胸式安全带</li>
</ul>
</li>
</ul>


<h3>遗产、继承</h3>

<ul>
<li>heritage: (国家)遗产(品质、传统、文化)等

<ul>
<li>culture heritage 文化遗产</li>
<li>nature heritage 自然遗产</li>
</ul>
</li>
<li>legacy:（个人）遗产(财富)；遗留问题

<ul>
<li>legacy system:遗留系统；</li>
</ul>
</li>
<li>inheritance:继承物(财富)；沿袭物(工作、问题、态度)；遗传特征

<ul>
<li>inheritance and innovation: 传承与创新</li>
<li>inheritance tax:遗产税</li>
</ul>
</li>
<li>entail: 牵涉、导致；需要、使必要；使承担；限定继承权；预</li>
<li>demise:终止、死亡；(行动或存在的)终止、终结；失败；地位(职位)的丧失；(政府因死亡或退位)让位、传位、禅位；（法律:在有限的时间内）转让（地位等）；遗赠(产业)</li>
</ul>


<h2>政治</h2>

<ul>
<li>communism: 共产主义</li>
<li>socialism:  社会主义</li>
<li>socialist: 社会主义的；社会主义者、党员</li>
<li>chamber:（身体或器官内的）室、膛；会议厅、（官邸的）接待室、（作特殊用途的）房间、房间（尤指卧室、寝室）；<code>议院；</code>室内的、小型的(音乐)；把&hellip;关进房间、禁闭；把（弹药）装入枪膛

<ul>
<li>chamber of commerce:商会</li>
<li>conbustion chamber:[机]燃烧室</li>
<li>red chamber: (加拿大议会)参议院</li>
</ul>
</li>
<li>deniability:(官员等)推诿搪塞的本事，拒绝承认、矢口否认的本领(尤指总统或其他高级官员未正式得到情报前对不正当或非法行为表示否认知悉或卷入);否决权(否定总统等政府高级官员与违法活动的关系)

<ul>
<li>plausible deniablity:合理的推诿；怕承担责任</li>
</ul>
</li>
<li>regime:政权、政体、社会制度(表不满)；当政时间、统治时期；（机构、公司或经济体的）管理方式；养生法

<ul>
<li>regime change:政权更替，改朝换代</li>
<li>flow regime:流态、水流动态</li>
<li>water regime:水情、水文状况</li>
<li>military regime:军事政权</li>
<li>investment regime:投资管理体制、投资模式</li>
</ul>
</li>
<li>overlord:霸王、大君主、最高统治者、封建领主</li>
<li>bilateral: 两边的、有两边的、在两边的；双边的、双方的、两方面的；相互的、互惠的、对等的；双边会议、会谈；（国际贸易的）双边协定

<ul>
<li>bilateral trade:双边贸易</li>
<li>bilateral agreement:双边协定</li>
<li>bilateral talks:双边会谈</li>
</ul>
</li>
</ul>


<h1>物</h1>

<h2>名称</h2>

<ul>
<li>copper: 铜(化学元素Cu);铜币；铜制的；铜色的；用铜皮包、盖、镀铜；警察

<ul>
<li>a copper caption:冒充有地位的人；伪船长</li>
<li>hot copper:酒醉后的口干舌燥</li>
<li>cool one‘s coppers:喝解酒饮料润喉</li>
<li>copper mine:铜矿</li>
</ul>
</li>
<li>brass:黄铜；铜管乐器

<ul>
<li>top brass:高级军官；要员；</li>
<li>brass wire:黄铜丝</li>
<li>brass band:军乐队、吹奏乐队</li>
</ul>
</li>
<li>brazen:黄铜的、黄铜制的；（颜色、强度等）似黄铜的、黄铜色的；厚脸皮的、厚颜无耻的、肆无忌惮的、无所顾忌的；厚着脸皮干、肆无忌惮地干、使变得无耻、无耻的对待

<ul>
<li>brazen it out:(虽已做错仍)厚着脸皮硬挺、干下去，装作没有做错似的，不觉羞愧的对待</li>
</ul>
</li>
<li>bronze:青铜；青铜色的

<ul>
<li>bronze medal:铜牌</li>
<li>bronze age:青铜器时代</li>
<li>bronze ware:铜器、青铜器</li>
</ul>
</li>
<li>ingredient:(烹调用的)原料、（混合物的）组成成分；（构成）成分、要素、因素；

<ul>
<li>active ingredient:活性成分</li>
<li>paint ingredient:涂料成分、油漆成分</li>
<li>food ingredient:食物配料成分</li>
<li>accessory ingredient:助剂、配合剂</li>
</ul>
</li>
<li>aluminum:铝

<ul>
<li>aluminum alloy:铝合金</li>
<li>aluminum foil:铝箔</li>
</ul>
</li>
<li>alloy:(金属的)成色、纯度、品位；合金、合金状态；（和金或银等贵金属熔合的）贱金属、低级金属；使(贵金属)不纯、降低成色、变硬、变轻；合铸；（混有杂质）使低劣、低贱；（通过掺杂）减少、减损（幸福、兴趣、乐趣等）

<ul>
<li>aluminum alloy:铝合金</li>
<li>magnesium alloy:镁合金</li>
</ul>
</li>
<li>tin:锡(化学元素Sn)；锡制的、镀锡的；冒牌的、无价值的、卑贱的；结婚十周年；马口铁罐、马口铁器皿、金属罐、罐中之物；把食品装罐、罐装

<ul>
<li>live out of tins(cans):靠罐头食品过日子</li>
<li>on the tin:使用警徽的（指凭此可得到免费用餐等特殊照顾）</li>
<li>straight from the tin:新鲜的、第一手的、原来的</li>
<li>tin wedding:十周年锡婚</li>
</ul>
</li>
<li>foil: 阻挠、挫败、使成泡影；（狩猎）扰乱（嗅迹或足迹）；金属箔；用箔包裹、在&hellip;上贴箔、用箔为&hellip;衬底；花剑、轻剑

<ul>
<li>break one‘s foil:（猎物）从原路返回逃脱</li>
<li>run（uopon）the foil:（猎物）奔回原路(以搅乱踪迹迷惑猎犬)；使迷惑、使产生错觉</li>
</ul>
</li>
<li>fender:挡开物、防御物、防护板、防冲物，(尤指)(车辆的)挡泥板，（电车或机车的）缓冲装置、救护装置，火炉围栏，（壁炉的）炉围，（船的）碰垫、护舷材、缓冲材、护板

<ul>
<li>wood fender:护舷木</li>
<li>rubber fender:橡胶防护垫</li>
<li>fender bender:轻微交通事故；撞弯保险杠的车祸(等于小车祸)</li>
</ul>
</li>
<li>grease:(熔化的)动物脂肪、油脂；油脂状物、润滑剂、润滑油、脂膏；（皮肤分泌的）油脂；涂抹油脂于&hellip;,给&hellip;上油，涂润滑油；向&hellip;行贿、贿赂，（用钱）收买，给（侍者）小费；使便利、加速&hellip;的进展

<ul>
<li>chafe(fret,fry,melt,stew) in one&rsquo;s own grease:自食其果、自作自受</li>
<li>grease it in :使飞机顺利着陆</li>
<li>grease gun:注油枪</li>
<li>grease the wheels: 使顺利进行；贿赂</li>
<li>oil and grease:油脂</li>
</ul>
</li>
</ul>


<h2>计量单位</h2>

<ul>
<li>liter:公升（容量单位）</li>
<li>meter:仪表、用仪表测量；米、公尺;停车收费器

<ul>
<li>exposure meter:测光计</li>
<li>flow meter:流量计</li>
<li>cubic meter:立方米</li>
<li>square meter:平方米</li>
<li>parking meter:停车收费码表</li>
<li>meter reading:仪表读数</li>
</ul>
</li>
<li></li>
</ul>


<h2>描述</h2>

<ul>
<li>cumbersome:笨重的、累赘的、麻烦的；不方便的、缺乏效率的；</li>
<li>fragile:易碎的、脆的、易损坏的；脆弱的、虚弱的、体弱的；纤细的、不实在的、缺少力量的、无价值的、不足信的

<ul>
<li>fragile goods: 易碎商品、易碎货物</li>
</ul>
</li>
<li>feeble:虚弱的、软弱的、无力的；低能的、智力差的、性格软弱的、道德差的；不可信的；（光线、音量、响度、清晰度等）弱的、微弱的

<ul>
<li>feeble solution:弱解</li>
<li>feeble current:弱电流</li>
</ul>
</li>
<li>palatable:好吃的、可口的、美味的(食物、饮品)；可接受的、惬意的、怡人的（想法、方法）；受人欢迎的</li>
<li>decay:腐烂、腐败、腐朽；（优点、前途、健康、力量、智力等）衰弱、衰落、衰败、刷退；消瘦、憔悴；（放射性物质等）衰变、衰减；使腐烂、腐败、腐朽；使衰落、衰败；

<ul>
<li>fall into decay:衰败、衰落；腐朽；损坏，倒塌，年久失修</li>
<li>alpha decay: 阿尔法衰减</li>
<li>tooth decay:蛀牙</li>
<li>decay rate:衰减率</li>
<li>radioactive decay:放射性衰变</li>
</ul>
</li>
<li>substantially:很大程度上；大幅度</li>
</ul>


<h1>环境</h1>

<h2>水</h2>

<ul>
<li>dock : 码头、船坞</li>
<li>pier: 凸式码头、桥墩</li>
<li>harbour:港口、藏匿</li>
<li>haven: 港口、停泊处；使入港、使停泊；避难所、安全住所、避风港；为&hellip;提供庇护所；

<ul>
<li>safe haven: 安全港；容许幅度标准</li>
<li>tax haven: 避税场所(税率很低的国家或地区)</li>
</ul>
</li>
<li>coast: 海岸</li>
<li>beach: 沙滩</li>
<li>marine: 海军陆战队士兵；海洋的；海事的</li>
<li>archipelago: 群岛，列岛；</li>
<li>wetland: 湿地、沼泽地</li>
</ul>


<h2>空</h2>

<ul>
<li>aircraft: 飞机、飞行器（ 所有能在空中飞的机器,飞艇，滑翔机&hellip;）</li>
<li>chopper:  砍、砍刀、斩波器、引申为直升机，乘坐直升机</li>
<li>helicopter: 直升机，乘坐直升机 ;

<ul>
<li>copter: helicopter的缩写</li>
</ul>
</li>
<li>jetliner: 大型喷气式客机</li>
<li>aeroplane:飞机，同airplane</li>
<li>flight: 飞行，航班；一段(台阶或楼梯)</li>
<li>aviation: 航空；飞机制造业；

<ul>
<li>civil aviation 民用航空</li>
<li>aviation industry 航空工业</li>
</ul>
</li>
<li>aviator: 飞行员</li>
<li>pilot: 飞行员；领航员；舵手；驾驶(飞机)，为(船只)领航;带领、引导

<ul>
<li>pilot project 试点项目；样板工程</li>
</ul>
</li>
<li>co-pilot :副驾驶</li>
<li>airborne：在飞行中的;空降的；空气中的；空运的、机载的(军事)

<ul>
<li>airborne troops:空降部队</li>
</ul>
</li>
<li>windborne: 风传送的；风载的</li>
<li>parachute: 降落伞；使空降、跳伞；空投

<ul>
<li>golden parachute 金降落伞</li>
</ul>
</li>
<li>parafoil: 翼伞</li>
<li>kite:风筝；空头票据；开(空头支票、抵用票据); 涂改(支票);迅速上升、（价格）飞涨贪得无厌的人

<ul>
<li>fly one’s kite 试探舆论</li>
<li>fly a kite放风筝；开空头支票；试探舆论</li>
<li>as high as a kite (因饮酒或吸毒而)飘飘然的、如痴如狂的</li>
<li>kite flying 放风筝，开空头支票，签发通融票据以资弥补</li>
</ul>
</li>
<li>astronomical:天文学的；天文数字般的(数量，尤指话费)、极极大的

<ul>
<li>astronomical observatory:天文台</li>
<li>astronomical telescope:天文望远镜(Kepler telescope)</li>
<li>international astronomical union:国际天文联合会</li>
</ul>
</li>
</ul>


<h2>雾、烟雾</h2>

<ul>
<li>mist</li>
<li>haze</li>
<li>fog</li>
<li>smog</li>
<li>moist</li>
<li>moisture</li>
</ul>


<h2>污染</h2>

<ul>
<li>contaminate: 被(烟尘、化学物品、辐射等)污染、弄脏； 污染</li>
<li>pollute: 污染（水，空气，土地）；受污染的；亵渎，败坏(道德等)</li>
</ul>


<h2>地理</h2>

<ul>
<li>arctic: 北极，北极的，引申为极冷的;冷淡的、冷漠的

<ul>
<li>the Arctic:北极区</li>
<li>Arctic Circle:北极圈</li>
<li>arctic fox:北极狐</li>
<li>arctic wolf:北极狼</li>
<li>arctic ocean:北冰洋</li>
</ul>
</li>
<li>polar: 极地的（北极，南极），引申为相反的，对立的</li>
<li>nordic: 北欧的，北欧人</li>
<li>boreal:北的，北方的，北风的</li>
<li>austral:南的，南方的，南部的</li>
<li>lunar:月亮的，阴历的</li>
<li>solar:太阳的，日光的，</li>
<li>steppe:大草原；干草原(没有树木)</li>
<li>archipelago: 群岛，列岛；</li>
<li>marine: 海军陆战队士兵；海洋的；海事的

<ul>
<li>Marine ecosystem: 海洋生态系统</li>
<li>Marine engineering: 船舶工程；轮机工程；海洋工程；海事工程</li>
</ul>
</li>
<li>vicinity:附近,周边地区，临近地区

<ul>
<li>in vicinity of:在&hellip;附近，在&hellip;左右</li>
<li>in the vicicniy:在附近</li>
<li>immediate vicinity:紧邻；临近</li>
<li>Newton Vicinity:纽顿附近</li>
</ul>
</li>
</ul>


<h2>生态、气候相关</h2>

<ul>
<li>arid: 干旱的；（由于缺水）贫瘠的，不毛的(土地)；</li>
<li>lush: 茂盛的；豪华的；酒鬼</li>
<li>habitat: (动植物的)栖息地，产地；住处；

<ul>
<li>habitat destruction: 生态环境破坏</li>
<li>habitat condition:居住条件</li>
</ul>
</li>
<li>wetland: 湿地、沼泽地</li>
<li>tropical: 热带的、适于热带的、住在热带的、具有热带特点的;湿热的、闷热的、炎热的；热情的、热烈的

<ul>
<li>tropical ecosystems: 热带生态系统</li>
<li>tropical forests:热带森林</li>
<li>tropical fruit: 热带水果</li>
<li>tropical storm: 热带风暴</li>
<li>tropical cyclone:热带气旋</li>
</ul>
</li>
<li>hurricane:飓风、暴风

<ul>
<li>hurricane lamp:防风灯、飓风灯</li>
</ul>
</li>
<li>flurry:一段短暂的紧张期；（雨雪等）一阵；动乱、骚动、慌张、不安、激动；使混乱、慌张、惊惶、激动

<ul>
<li>piercing flurry:疾风刺骨</li>
<li>in a flurry:慌慌张张、仓皇</li>
</ul>
</li>
</ul>


<h2>大都市</h2>

<ul>
<li>metro</li>
<li>metropolis</li>
<li>bigalopolis</li>
</ul>


<h2>国家</h2>

<ul>
<li>Vietnam (The Socialist Republic of Vietnam) 越南

<ul>
<li>Vietnamese:越南人，越南语,越南的，越南人的</li>
<li>vietcong: 越共</li>
</ul>
</li>
<li>Norway (The Kingdom of Norway) 挪威

<ul>
<li>Norwegian:挪威的，挪威人(的)，挪威语(的)</li>
</ul>
</li>
<li>Finland  (The Public if Finland) 芬兰</li>
<li>Sweden (The Kingdom of Sweden) 瑞典

<ul>
<li>Swede:瑞典人；甘蓝，大头菜</li>
<li>swedish:瑞典的；瑞典语的；瑞典人的；瑞典语；瑞典人</li>
</ul>
</li>
<li>Denmark (The Kingdom of Denmark) 丹麦</li>
<li>Netherland (The Kingdom of the Netherlands) 荷兰

<ul>
<li>Holland 荷兰(荷兰的两个省)</li>
<li>Dutch: 荷兰的，荷兰人的，荷兰语的</li>
</ul>
</li>
<li>Turkey (The Republic of Turkey) 土耳其 (turkey也有火鸡的意思)</li>
<li>Moroco: 摩洛哥(Maroc 法语)</li>
<li>Afghan: 阿富汗人；阿富汗语；阿富汗的、阿富汗人的</li>
<li>Ecuador:厄瓜多尔(南美洲)

<ul>
<li>Ecuadorian: 厄瓜多尔的、厄瓜多尔人的</li>
</ul>
</li>
<li>soviet: 前苏联的、前苏联人；(前苏联地方、区域或国家)代表议会、苏维埃的

<ul>
<li>soviet Union:苏联</li>
<li>soviet Empire:苏维埃帝国</li>
<li>soviet Navy:苏联海军</li>
</ul>
</li>
<li>Paraguay（The Republic of Paraguay）:巴拉圭</li>
<li></li>
</ul>


<h2>城市、地区</h2>

<ul>
<li>megacity : 大城市(人口超过1000万)</li>
<li>Scotland:苏格兰</li>
<li>NewYork 别名 Gotham, Big Apple</li>
<li>Hudson: 哈德逊河（NewYork）</li>
<li>Bergen: 卑尔根（挪威西南部港市）</li>
<li>Tromso: 特罗姆瑟（挪威北部港市）</li>
<li>Spitsbergen:斯匹次卑尔根岛（挪威斯瓦尔巴群岛中最大的一个）</li>
<li>Sausalito: 索萨利托，加州</li>
<li>San Francisco: 旧金山(圣.弗朗西斯科)</li>
<li>GGB: Golden Gate Bridge 金门大桥</li>
<li>Alcatraz: 阿尔卡特兹岛（恶魔岛，旧金山景点）</li>
<li>Marin Country:马林县，加州，San Francisco北部</li>
<li>Cupertino:库比提诺(苹果公司所在地)</li>
<li>Maui :毛伊岛（夏威夷群岛第二大岛）</li>
<li>Cappadocia:卡帕多西亚（土耳其）</li>
<li>Marseille:  马赛（法国）</li>
<li>Barcelona: 巴塞罗那(西班牙)</li>
<li>Duesseldorf: 杜塞尔多夫（德国）</li>
<li>Seattle: 西雅图,又名Emerald City 绿宝石之城</li>
<li>Tangier: 丹吉尔(摩洛哥港口城市)</li>
<li>Prague: 布拉格</li>
<li>Dubai: 迪拜</li>
<li>Nha Trang:芽庄（越南海滨城市）</li>
<li>Dalat: 大叻(le) (越南旅游城市)</li>
<li>Hoi An: 会安古城 (越南)</li>
<li>Hanoi:河内(越南)</li>
<li>Christchurch: 基督城(新西兰)</li>
<li>Aoraki /Mount Cook National Park: 奥拉基/库克山国家公园 （新西兰）</li>
<li>Franz Josef Glacier: 弗朗兹约瑟冰山(新西兰)</li>
<li>Alps: 阿尔卑斯山脉</li>
<li>Berkeley:伯克利(美国加州)</li>
<li>Patagonia: 巴塔哥尼亚（南美的一个地区）</li>
<li>Galapagos:加拉帕戈斯群岛（厄瓜多尔）</li>
<li>Moscow: 莫斯科</li>
<li>University of Illinois at Urbana-Champain:美国伊利诺伊州香槟分校</li>
<li>Notts:诺丁汉郡(英国英格兰郡名)</li>
<li>Purdue:普渡、普渡大学</li>
<li>Carnegie Mellon:卡内基梅隆、卡内基梅隆大学</li>
</ul>


<h1>行</h1>

<h2>地铁</h2>

<ul>
<li>metro :metropolitan railway  城市铁路（法国）</li>
<li>subway: 地下通道</li>
<li>tube:  管道(英国)</li>
<li>underground: 地下(英国)</li>
</ul>


<h2>路</h2>

<ul>
<li>avenue: 大街，林荫大道,引申为(达到某物的)方法、途径、手段

<ul>
<li>avenue to success:成功之道</li>
<li>explore eve avenue 想尽一切办法</li>
<li>the other end of the Avenue 白宫，国会各在Avenue的一头</li>
</ul>
</li>
<li>alley: 小巷，小径，胡同</li>
<li>intersection:交叉路口;</li>
<li>HWY:  highway 公路；高速公路</li>
<li>pedestrian street/mall 步行街</li>
<li>lane: （乡间）小路；车道

<ul>
<li>fast lane:快车道</li>
<li>bus lane:公共汽车专用车道</li>
</ul>
</li>
</ul>


<h2>旅游</h2>

<ul>
<li><p>tourist: 游客，旅游的，二等舱、经济舱的</p>

<ul>
<li>tour group:旅行团</li>
<li>tour guide:导游</li>
<li>eco tour:生态旅游</li>
</ul>
</li>
<li>trip: 旅行，远足，绊倒，犯错

<ul>
<li>tripper: 旅行者</li>
<li>field trip: 实地考察，野外旅游</li>
<li>business trip: 出差，商务旅行</li>
<li>on a trip :在旅行中</li>
</ul>
</li>
<li><p>journey:旅行，行程，(心路)历程</p>

<ul>
<li>break one’s journey at 在&hellip;中途下车</li>
<li>long journey 长途旅行</li>
<li>journey to the west 西游记</li>
<li>on the journey 在旅程中</li>
<li>sweet journey 甜蜜之旅</li>
<li>soul journey 灵魂之旅</li>
</ul>
</li>
<li>travel: 旅行

<ul>
<li>travel light: 轻装旅行</li>
<li>travels in the blue 沉思，冥想</li>
</ul>
</li>
<li>excursion 短途旅行，远足

<ul>
<li>excursionist 远足者</li>
</ul>
</li>
<li>sightseer 观光客，游客

<ul>
<li>sightseer lounge car 观景车厢</li>
</ul>
</li>
<li>rubberneck:  伸长脖子观看、观光者、游览者、好事者

<ul>
<li>rubberneck bus 观光巴士</li>
</ul>
</li>
<li>hike:远足，徒步旅行

<ul>
<li>on the hike 流浪、流亡</li>
</ul>
</li>
<li>backpacker: 背包客</li>
<li>itinerary: 路线；旅行计划；旅行记录；旅程的；巡回的；</li>
<li>expedition:（以探险等为目的的）有组织的旅行、探险、考察、出征；（以探险等为目的的）旅行队、考察队、探险队；远足、短程旅行；迅速（办理），动作敏捷。

<ul>
<li>go to a fishing expedition:摸底、试探(某些国家渔船以打渔为名驶进外国领海收集情报)</li>
<li>use expedition:赶快办理，从速行动</li>
<li>with expedition: 很快的，迅速的</li>
<li>Northern Expedition:北伐，北伐战争</li>
<li>one in a lifetime expedition: 一生只有一次的探险</li>
</ul>
</li>
<li>baggage:行李、（旅行时携带的）皮箱、手提箱；（军队）的辎重、军用行李、携带的装备；（探险队的）装备；（感情或思想上的）包袱

<ul>
<li>baggage claim:行李提领处</li>
<li>baggage elevator:行李电梯</li>
<li>excesss baggage:超重行李；累赘</li>
<li>hand baggage:手提行李</li>
</ul>
</li>
<li>luggage:行李

<ul>
<li>luggage office:行李暂存处；行李寄存处；行李托运处</li>
<li>luggage tag:行李牌；行李签</li>
<li>luggage locker:行李寄存箱；行李柜；</li>
<li>hand luggage:手提行李</li>
<li>carry-on luggate:随身携带的行李</li>
<li>luggage rack:行李架</li>
</ul>
</li>
<li>carpool:拼车、拼车旅行的人；（公司或机构供员工使用的）车队；</li>
<li>HAB:航空托运单(house air bill)</li>
<li>Schengen:申根(卢森堡东南部小城)

<ul>
<li>Schengen group:申根国家</li>
</ul>
</li>
</ul>


<h1>吃</h1>

<h2>食物</h2>

<ul>
<li>dessert:餐后甜点</li>
<li>pastry: 油酥面团，油酥糕点</li>
<li>brunch:早午餐</li>
<li>salami:意大利蒜味腊肠</li>
<li>meatloaf:烘肉卷；肉饼</li>
<li>aioli:蒜味蛋黄酱(调味剂)</li>
<li>bun:小圆面包</li>
<li>steamed bun:馒头</li>
<li>steamed  stuffed bun:包子</li>
<li>syrup: 糖浆</li>
<li>papaya :木瓜</li>
<li>pumpkin:  南瓜</li>
<li>swede: 甘蓝 ；瑞典的</li>
<li>chilli:辣椒

<ul>
<li>chilli powder:辣椒粉；干辣椒粉</li>
<li>chilli red:辣椒红；椒红</li>
<li>red chilli:红辣椒；小红尖椒；</li>
<li>chilli sauce:辣椒酱；辣酱油</li>
</ul>
</li>
<li>pepper:胡椒；椒类；加胡椒粉于;雨点般的撒、密布；（以小物体）大量击中、密击、连续打击

<ul>
<li>take pepper in the nose/grow pepper:发怒、发脾气、勃然大怒</li>
<li>red pepper:红椒；红辣椒；红胡椒</li>
<li>bell pepper:菜椒；灯笼椒；柿子椒；</li>
<li>Serrano pepper:塞拉诺辣椒</li>
</ul>
</li>
<li>shrimp:小虾；矮小的人；捕虾；虾制的

<ul>
<li>shrimp paste:虾酱</li>
<li>dried shrimp:干小虾；海米</li>
</ul>
</li>
<li>prawn:虾(尤指对虾 Penaeus)

<ul>
<li>prawn cracker:虾片、虾球、龙虾片</li>
<li>fried prawn:炸大虾；白灼中虾</li>
</ul>
</li>
<li>batata:白薯、山芋</li>
<li>pasty:苍白的；馅饼</li>
<li>mayonnaise:蛋黄酱（美乃滋）</li>
<li>spicy:辛辣的、加有香料的

<ul>
<li>spicy girl: 辣妹</li>
<li>spicy food:辛辣的事物</li>
</ul>
</li>
<li>mustard:芥末、芥末酱、芥菜；褐黄色的、芥末黄

<ul>
<li>mustard plant:芥菜类蔬菜</li>
<li>mustard oil:芥子油</li>
<li>mustard seed:芥菜籽</li>
<li>mustard sauce:黄芥末酱</li>
</ul>
</li>
<li>coconut:椰子；椰子肉；（受白人文化影响或持有白人观点的）&#8221;棕皮白心&#8221;的黑人

<ul>
<li>coconut oil:椰油</li>
<li>coconut mocha:椰子摩卡咖啡</li>
</ul>
</li>
<li>donut:炸面圈、甜甜圈；环状线圈</li>
<li><p>caviar:鱼子酱</p></li>
<li><p>smorgasbord:(瑞典式)自助餐，引申为大杂烩</p></li>
<li>buffet: 自助餐、餐饮部；击打、搏斗</li>
<li>vinegar:醋；尖酸、刻薄；活力、精力；</li>
</ul>


<h2>葡萄酒</h2>

<ul>
<li>vineyard:葡萄庄园，酒庄</li>
<li>Pinot: 皮诺(葡萄品种)；皮诺酒</li>
<li>Cabernet:赤霞珠(葡萄品种)</li>
<li>Merlot:梅洛(葡萄品种)</li>
</ul>


<h1>穿</h1>

<h2>家居</h2>

<ul>
<li>blanket:毯子；覆盖物；覆盖

<ul>
<li>rubber blanket:橡胶垫；橡皮布</li>
<li>wet blanket:扫兴的人；扫兴的事；湿毯子；</li>
<li>sludge blanket:污泥层；污泥浮层</li>
</ul>
</li>
<li>cashmere:开士米羊绒

<ul>
<li>cashmere sweater:羊绒衫；开士米羊绒衫</li>
</ul>
</li>
</ul>


<h1>生物</h1>

<h2>植物</h2>

<ul>
<li>balsa: 热带美洲轻木(用于制作模型)；巴尔沙树</li>
</ul>


<h2>动物</h2>

<ul>
<li>mole:痣；鼹鼠；（政府或机构中的）间谍、长期潜伏的间谍、在暗处工作的人；

<h3>鸟</h3></li>
<li>sparrow :麻雀</li>
<li>swan: 天鹅</li>
<li>dove:鸽子</li>
<li>seagull: 海鸥</li>
<li>egret: 白鹭，同aigrette</li>
<li></li>
</ul>


<h3>昆虫</h3>

<ul>
<li>dragonfly: 蜻蜓</li>
</ul>


<h3>水生物</h3>

<ul>
<li>shellfish:甲壳类水生动物</li>
<li>oyster:牡蛎，蚝；

<ul>
<li>the world is someone’s oyster:某人可以随心所欲</li>
</ul>
</li>
<li>turtle: 龟，甲鱼；</li>
</ul>


<h3>猿</h3>

<ul>
<li>ape:猿，引申为模仿，狂热</li>
<li>gorilla:大猩猩</li>
<li>chimpanzee:黑猩猩</li>
<li>primate:灵长类；大主教</li>
</ul>


<h1>住</h1>

<h2>房子、建筑</h2>

<ul>
<li>garage: 车库、飞机库;汽车修理厂;加油站(兼营汽车修理、销售)</li>
<li>cabin: (森林或山上的)小木屋；船舱；机舱</li>
<li>inn:(乡间的)客栈，小酒馆，小餐厅</li>
<li>lodge:(乡野度假的、猎人居住的)屋舍，旅馆；（庄园宅第、工厂、大学等的）门房；正式提出(抗议、投诉、指控、要求)；暂住；租住

<ul>
<li>lodge a claim:提出索赔</li>
<li>lodge a complaint 投诉</li>
</ul>
</li>
<li>residence: 住宅，住所；居住

<ul>
<li>of no fixed residence:无固定住处的</li>
<li>in residence: (公务人员、官员)住在官邸的；（大学师生员工）住校的</li>
</ul>
</li>
<li>accommodation: 住所;(楼内或车内的)专用空间；适应，调整；(社会不同集团间的)调和、调解；（纠纷）解决、妥协；

<ul>
<li>come to an accommodation:达到和解、妥协</li>
<li>accommodation space:起居舱室</li>
<li>hostel accommodation 宿舍单位</li>
</ul>
</li>
<li>hostel: (流浪者等的)过夜住宿处、临时收容所、慈善收容所；(青年)旅社(youth hostel)；（新移民临时的）住宿处；（徒步）旅行、投宿（招待所等）;</li>
<li>motel: 汽车旅馆 （同 motorist&rsquo;s hotel ）</li>
<li>castle:城堡;安全地带、藏身之处;(国际象棋)车王易位

<ul>
<li>air castle:空中楼阁</li>
</ul>
</li>
<li>chamber:（身体或器官内的）室、膛；<code>会议厅、（官邸的）接待室、（作特殊用途的）房间、房间（尤指卧室、寝室）；议院；室内的、小型的(音乐)；把...关进房间、禁闭；</code>把（弹药）装入枪膛

<ul>
<li>chamber of commerce:商会</li>
<li>conbustion chamber:[机]燃烧室</li>
<li>red chamber: (加拿大议会)参议院</li>
</ul>
</li>
<li>venue:举办场所;(法)犯罪地点、审批场所；（事情的）发生地点、现场；（争论中所采取的）立场

<ul>
<li>outdoor venue:户外场地</li>
<li>virtual venue:虚拟灰常</li>
<li>religious venue:宗教场所</li>
</ul>
</li>
<li>lounge:休息室、休息厅、等候大厅(机场)、起居室；躺椅；闲逛、懒洋洋躺卧、闲混；虚度光阴

<ul>
<li>lounge music:沙发音乐；酒吧音乐</li>
<li>cocktail lounge:鸡尾酒会；酒廊；鸡尾酒廊；鸡尾酒餐厅</li>
<li>lobby lounge:大堂酒廊；大堂酒吧</li>
<li>departure lounge:候机厅；启程处</li>
</ul>
</li>
<li>penthouse:小棚屋、（尤指靠在大楼边上打的）披屋；屋顶房间、（豪华的）顶层公寓；电梯机器房、屋顶棚

<ul>
<li>make a penthouse of the eyebrows 皱眉头</li>
<li>penthouse suite:楼顶套房、豪华套房</li>
<li>penthouse garden:阁楼庭园</li>
</ul>
</li>
<li>closet:储藏室；壁橱、衣橱、碗橱；议事室；密室、小房间、小私室；私密的、私下的、秘密的、非公开的；空谈的、纸上谈兵的、不切实际的；把&hellip;关在密室

<ul>
<li>water closet:厕所(WC)</li>
</ul>
</li>
<li>corridor:走廊；走廊地带（与另一国家相连或穿越另一国取得出海通道的狭长地带）；（两大城市间的）走廊地带</li>
<li>balcony:阳台、露台；（剧院、影院、教堂、大厅等的）楼座、楼厅；

<ul>
<li>balcony plant:阳台花卉、阳台植物</li>
<li>balcony window:阳台窗</li>
</ul>
</li>
</ul>


<h1>未分类</h1>

<h2>颜色</h2>

<ul>
<li>crimson: 深红色，引申为血淋淋的，血腥的</li>
<li>mustard: 芥末黄</li>
</ul>


<h2>机密</h2>

<ul>
<li>confidential: 保密的(信息)；悄悄的(说话)

<ul>
<li>confidential information:机密情报</li>
</ul>
</li>
<li>classified: 机密的(信息)；分类的，分级的

<ul>
<li>classified information: 机密情报</li>
</ul>
</li>
</ul>


<h2>摄影</h2>

<ul>
<li>photon:光子，辐射量子</li>
<li>aperture: 孔隙；（相机镜头的）孔径、光圈；</li>
<li>SLR &ndash; Single-Lens reflex camera  单反</li>
</ul>


<h2>物理化学名词</h2>

<ul>
<li>atom:原子</li>
<li>electron:电子(负电荷)</li>
<li>proton:质子 （正电荷）</li>
<li>photon:光子，辐射量子</li>
<li>neutron:中子 (无电荷)</li>
<li>neutrino: 微中子/中微子</li>
<li>nucleus: 原子核</li>
<li>fission: 裂变</li>
<li>sodium:钠(11号化学元素,Na)</li>
<li>natrium:纳(11号化学元素,Na)</li>
<li>chlorine:氯(17号化学元素 CI)</li>
<li>chloride:氯化物</li>
<li>silica:二氧化硅；硅土

<ul>
<li>silica gel: 硅胶</li>
</ul>
</li>
<li>silicate:硅酸盐</li>
<li>aluminum:铝

<ul>
<li>aluminum alloy:铝合金</li>
<li>aluminum foil:铝箔</li>
</ul>
</li>
<li>calcium:钙(Ca)</li>
<li>copper: 铜(化学元素Cu);铜币；铜制的；铜色的；用铜皮包、盖、镀铜；警察

<ul>
<li>a copper caption:冒充有地位的人；伪船长</li>
<li>hot copper:酒醉后的口干舌燥</li>
<li>cool one‘s coppers:喝解酒饮料润喉</li>
<li>copper mine:铜矿</li>
</ul>
</li>
<li>tin:锡(化学元素Sn)；锡制的、镀锡的；冒牌的、无价值的、卑贱的；结婚十周年；马口铁罐、马口铁器皿、金属罐、罐中之物；把食品装罐、罐装

<ul>
<li>live out of tins(cans):靠罐头食品过日子</li>
<li>on the tin:使用警徽的（指凭此可得到免费用餐等特殊照顾）</li>
<li>straight from the tin:新鲜的、第一手的、原来的</li>
<li>tin wedding:十周年锡婚</li>
</ul>
</li>
</ul>


<h1>拼写类似词</h1>

<ul>
<li>tatoo: 纹身</li>
<li><p>taboo: 禁忌</p></li>
<li><p>stub: 桩、残端、存根(票，支票)</p></li>
<li>stab: 刺、捅</li>
<li>snob:  自命不凡的人，势利小人</li>
<li>nob: 大人物，上流人物，规则</li>
<li>mob: 暴民，乱民，犯罪团伙；围攻 （mobster:暴徒  mobocracy:暴民统治）</li>
<li><p>rob: 抢劫、盗窃，抢走，剥夺 （robbery:抢劫）</p></li>
<li><p>rage: 愤怒；肆虐、狂暴、猛烈(风、浪、火等)；猖獗、流行（灾难、病等）；发怒，怒斥(boil with rage:怒火中烧 fly into a rage:勃然大怒)</p></li>
<li>roger: 好，知道了</li>
<li>rogue: 流氓；淘气鬼；行为异常的；劣种(植物)</li>
<li><p>ranger: 护林员；公园管理员；突击队（同commando）</p></li>
<li><p>crew: 全体船员，机组人员,一组工作人员</p></li>
<li>crowd:人群，聚集</li>
<li>crown:王冠，花冠，王权，加冕</li>
<li><p>drown:溺死、淹死;淹没于(强调);(一声音)盖过(另一声音);驱散、消除、摆脱、消(愁）、解(闷)</p></li>
<li><p>college: 大学；学院</p></li>
<li><p>colleague: 同事</p></li>
<li><p>civil: 民众的；民用的；民政的；民事的；社会的，国内的；公民的，市民的；民间的、文职的(与军人、圣职相区别) （civil servant: 公务员  civil law 民法 civil aviation 民用航空）</p></li>
<li><p>citizen:公民、国民；市民、城镇居民；（second-class citizen 次等公民 senior citizen 老年人 fellow citizen 各位公民，同胞）</p></li>
<li><p>desert: 沙漠</p></li>
<li><p>dessert: 餐后甜点</p></li>
<li><p>liberty: 自由(生活)、人身自由、获得许可</p></li>
<li>bribery: 行贿；受贿</li>
<li><p>deliberate: 故意的；深思熟虑的;谨慎的</p></li>
<li><p>moral:道德；道德的；有道德的，品行端正的；道德上的教训，寓意；（moral education:道德教育； moral hazard:道德危机,投保人不可靠引发的）</p></li>
<li>morality: 道德观念；道德规范；</li>
<li>morale: 士气、斗志；道德、品行；</li>
<li>demoralize: 使泄气、沮丧、失去信心、士气低落；使道德败坏、堕落；</li>
<li>mortal: 终有一死的；凡人的、普通人的、人类的；人世的、现世的</li>
<li><p>mortality:死亡数；死亡率</p></li>
<li><p>worrisome: 令人担心的；使人烦恼的、使人焦虑的；容易烦恼的</p></li>
<li><p>awesome: 令人畏惧的、敬畏的；棒极了</p></li>
<li><p>mandate: (政府或机构经选举而获得的，个人所获得的)授权；任期；(上级法院给下级法院的)指令
              legislation mandate: 立法委任权</p></li>
<li><p>mundane:平凡的、单调的；平凡的事物、单调的事物； mundane world:红尘、世俗社会；</p></li>
<li><p>clash: 冲突、碰撞</p></li>
<li><p>crash: 坠毁</p></li>
<li><p>proclaim:正式宣布、宣告、公布、声明；显示、表明；强调；赞扬、公开表扬、颂扬</p>

<ul>
<li>solemnly proclaim:庄严宣告</li>
<li>proclaim right:公告权</li>
</ul>
</li>
<li><p>reclaim: 拿回、收回；要求归还；开垦、开拓土地、(填海)造地；改造、感化、挽救（犯错误者等）；（从废料中）回收利用</p>

<ul>
<li>beyond(past) reclaim:无可救药的、不可挽回的</li>
<li>heat reclaim:余热回收</li>
</ul>
</li>
<li><p>disclaim: 否认，否认&hellip;是自己的/与有关/对关注；拒绝承认，拒绝&hellip;的要求，不承认&hellip;的权威;(法律)放弃接受（财产、地产、权利），不认领，不索取</p>

<ul>
<li>disclaim responsibility:拒绝承担责任</li>
</ul>
</li>
<li><p>claim：声称、声称（对某事负责或应得荣誉）、主张、断言;要求（应得权利）、要求给予；要求承认(权利、所有权等)，声称有权、拥有，索取，认领</p>

<ul>
<li>have a claim on(to):有资格得到&hellip;,对&hellip;有要求权</li>
<li>have many claims on:(对时间等)有许多需求</li>
<li>have no claim on(to):无资格得到&hellip;,没有对&hellip;提出要求的权利</li>
<li>insurance claim:保险索赔</li>
<li>contractual claim:按合约索偿</li>
</ul>
</li>
<li><p>exclaim:（因兴奋、震惊、愤怒等）突然呼喊、惊叫；（表示责难、抗议等）大声叫嚷，强烈的表示意见(against,at,on,upon)</p></li>
<li><p>compliment:恭维、赞美、称赞、祝贺、向&hellip;致意</p>

<ul>
<li>angle for compliments:故意让人说赞扬话</li>
<li>compliment someone into:用恭维话使某人&hellip;</li>
<li>compliment someone on:称赞某人的</li>
<li>left-handed compliment:言不由衷（或挖苦人的）恭维话</li>
</ul>
</li>
<li><p>compliance:依从、顺从、遵从、听从、（按条例）执行；屈从、屈服、退让；</p>

<ul>
<li>in compliance with:依从、顺从；依照、按照</li>
<li>compliance audit:合规性审计</li>
<li>compliance Officer:合规主管</li>
<li>regulatory compliance:法规遵从</li>
</ul>
</li>
<li><p>complain:抱怨、诉苦、发牢骚；申诉、控诉、抗议；</p></li>
<li><p>institution:(教育、慈善、宗教性质的)社会公共机构、事业机构；社会机构的建筑物、校址、院址；禁止外出的机构(监狱、收容所、教养院);</p>

<ul>
<li>institution functioning abroad:驻外机构</li>
<li>institution of modern decision:现代决策体制</li>
<li>financial institution:金融机构</li>
<li>institution of higher learning:高等学校</li>
<li>medical institution:医疗机构</li>
</ul>
</li>
<li><p>constituent:</p></li>
<li>constitution:</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Symbolicatecrash]]></title>
    <link href="http://xuguoxing.github.io/blog/2015/01/22/symbolicatecrash/"/>
    <updated>2015-01-22T10:47:18+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2015/01/22/symbolicatecrash</id>
    <content type="html"><![CDATA[<p><code>symbolicatecrash</code>是Xcode自带的分析工具，使用crash log文件和.dSYM文件可将crash log中的地址替换为代码位置。</p>

<h2>查找<code>symbolicatecrash</code></h2>

<p>查找Xcode安装路径</p>

<pre><code>$ xcode-select -p
/Applications/Xcode.app/Contents/Developer
</code></pre>

<p>搜索<code>symbolicatecrash</code></p>

<pre><code>$ find /Applications/Xcode.app -name "symbolicatecrash"
/Applications/Xcode.app/Contents/SharedFrameworks/DTDeviceKitBase.framework/Versions/A/Resources/symbolicatecrash
</code></pre>

<h2>解析crash log</h2>

<p>将symbolicatecrash、crash log、.dSYM文件拷贝到同一目录，命令行执行</p>

<pre><code>./Symbolicatecrash aa.crash bb.dSYM &gt; cc.log
</code></pre>

<p>将解析后的crash log输出到cc.log文件中</p>

<p>注:若有提示&#8221;Error: &ldquo;DEVELOPER_DIR&rdquo; is not defined&#8221;,则设置</p>

<pre><code>$ export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer
</code></pre>

<h2>检查.app文件、.dSYM文件和crash log是否对应的方法</h2>

<pre><code>$ dwarfdump --uuid MyApp.app/MyApp
UUID: CC67C4BF-16E7-3512-8E03-10FCFEB5AE5A (armv7) MyApp.app/MyApp
$ dwarfdump --uuid MyApp.app.dSYM/
UUID: CC67C4BF-16E7-3512-8E03-10FCFEB5AE5A (armv7) MyApp.app.dSYM/Contents/Resources/DWARF/MyApp
</code></pre>

<p>检查上述两个UUID与crash log中的&#8221;slice_uuid&#8221;字段是否一致。</p>

<h2>参考</h2>

<ul>
<li><a href="http://www.cnblogs.com/ydhliphonedev/archive/2012/12/07/2806866.html">iphone崩溃日志分析工具symbolicatecrash用法</a></li>
<li><a href="http://ios-iphone.diandian.com/post/2012-05-18/19440182">iOS系统Crash文件分析方法</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoaPods]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/10/23/cocoapods/"/>
    <updated>2014-10-23T10:58:20+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/10/23/cocoapods</id>
    <content type="html"><![CDATA[<p>CocoaPods是个针对iOS和OS X应用的类库依赖管理工具。在CocoaPods架构中有三种角色: 类库(Pods), 类库描述仓库(Pod Repo),项目。</p>

<h2>下载cocoapods命令行工具</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install cocoapods //下载最新版
</span><span class='line'>gem install cocoapods —version 0.33.1  //下载指定版本</span></code></pre></td></tr></table></div></figure>


<p>如果ruby官方库下载不下来，可以切换成淘宝的源</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem sources --remove https://rubygems.org/
</span><span class='line'>gem sources -a http://ruby.taobao.org/
</span><span class='line'>gem sources -l</span></code></pre></td></tr></table></div></figure>


<h2>Pod Repo库</h2>

<h2>参考</h2>

<ul>
<li><a href="http://www.objc.io/issue-6/cocoapods-under-the-hood.html">CocoaPods Under The Hood</a></li>
<li><a href="http://nshipster.com/cocoapods/">Cocoa​Pods</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hosts]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/08/18/hosts/"/>
    <updated>2014-08-18T16:08:24+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/08/18/hosts</id>
    <content type="html"><![CDATA[<p>在开发过程中，经常需要修改Hosts访问测试环境，而对于非越狱iOS设备，无法修改设备Host文件<code>/etc/hosts</code>;如果在代码中直接将域名修改为ip地址，存在两个问题：</p>

<ol>
<li>破坏了网络代码的结构。</li>
<li>HTTP Header中的&#8221;Host&#8221;字段也被修改为了ip地址，而后台对&#8221;Host&#8221;字段有校验,会导致请求出错。</li>
</ol>


<p>可以通过对<code>NSURLRequest</code>的<code>initWithURL:cachePolicy:timeoutInterval:</code>方法和<code>NSMutableURLRequest</code>的<code>setURL:</code>方法进行
method swizzle来动态的将URL中的host修改为ip,并保持HTTP Header中的&#8221;Host&#8221;字段不变来解决。</p>

<h2>使用NLHosts类来保存host到ip的转换</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>interface NLHosts : NSObject
</span><span class='line'>
</span><span class='line'>+(NSString*)ipByHost:(NSString*)host;
</span><span class='line'>
</span><span class='line'>@end
</span></code></pre></td></tr></table></div></figure>


<p><code>+ipByHost:</code>方法接收host参数，如果对应host有匹配的ip地址,则返回ip地址，否则返回nil。</p>

<h2><code>NSURLRequest</code>、<code>NSMutableURLRequest</code>的method swizzle处理</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@interface NSURLRequest (Swizzle)
</span><span class='line'>
</span><span class='line'>@end
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>@interface NSMutableURLRequest (Swizzle)
</span><span class='line'>
</span><span class='line'>@end</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import "NSURLRequest+Swizzle.h"
</span><span class='line'>
</span><span class='line'>#import &lt;objc/runtime.h&gt;
</span><span class='line'>#import "NLHosts.h"
</span><span class='line'>
</span><span class='line'>@implementation NSURLRequest (Swizzle)
</span><span class='line'>
</span><span class='line'>+(void)load
</span><span class='line'>{
</span><span class='line'>    static dispatch_once_t onceToken;
</span><span class='line'>    dispatch_once(&onceToken, ^{
</span><span class='line'>        Class clazz = NSClassFromString(@"NSURLRequest");
</span><span class='line'>        Method origMethod = class_getInstanceMethod(clazz, @selector(initWithURL:cachePolicy:timeoutInterval:));
</span><span class='line'>        Method newMethod = class_getInstanceMethod(clazz, @selector(initWithNewURL:cachePolicy:timeoutInterval:));
</span><span class='line'>
</span><span class='line'>        if (origMethod && newMethod) {
</span><span class='line'>            method_exchangeImplementations(origMethod, newMethod);
</span><span class='line'>        }else{
</span><span class='line'>            //NSLog(@"origMethod:%@ newMethod:%@",origMethod,newMethod);
</span><span class='line'>        }
</span><span class='line'>    });
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>-(id)initWithNewURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval
</span><span class='line'>{
</span><span class='line'>    NSString *scheme = URL.scheme;
</span><span class='line'>
</span><span class='line'>    if ([scheme compare:@"http" options:NSCaseInsensitiveSearch] == NSOrderedSame || [scheme compare:@"https" options:NSCaseInsensitiveSearch] == NSOrderedSame) {
</span><span class='line'>        NSString *host = URL.host;
</span><span class='line'>        NSString *ip = [NLHosts ipByHost:host];
</span><span class='line'>        if (ip) {
</span><span class='line'>            //NSLog(@"NSURLRequest: host:%@-&gt;ip:%@",host,ip);
</span><span class='line'>            NSString *absoluteString = [URL absoluteString];
</span><span class='line'>            NSRange hostRange = [absoluteString rangeOfString:host];
</span><span class='line'>            if (hostRange.location != NSNotFound) {
</span><span class='line'>                absoluteString = [absoluteString stringByReplacingCharactersInRange:hostRange withString:ip];
</span><span class='line'>                NSURL *newURL = [NSURL URLWithString:absoluteString];
</span><span class='line'>                NSMutableURLRequest *newRequest = [[NSMutableURLRequest alloc]initWithURL:newURL cachePolicy:cachePolicy timeoutInterval:timeoutInterval];
</span><span class='line'>                [newRequest setValue:host forHTTPHeaderField:@"Host"];
</span><span class='line'>                self = newRequest;
</span><span class='line'>                return self;
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>    return [self initWithNewURL:URL cachePolicy:cachePolicy timeoutInterval:timeoutInterval];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@end
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>@implementation NSMutableURLRequest (Swizzle)
</span><span class='line'>
</span><span class='line'>+(void)load
</span><span class='line'>{
</span><span class='line'>    static dispatch_once_t onceToken;
</span><span class='line'>    dispatch_once(&onceToken, ^{
</span><span class='line'>        Class clazz = NSClassFromString(@"NSMutableURLRequest");
</span><span class='line'>        Method origMethod = class_getInstanceMethod(clazz, @selector(setURL:));
</span><span class='line'>        Method newMethod = class_getInstanceMethod(clazz, @selector(setNewURL:));
</span><span class='line'>
</span><span class='line'>        if (origMethod && newMethod) {
</span><span class='line'>            method_exchangeImplementations(origMethod, newMethod);
</span><span class='line'>        }else{
</span><span class='line'>            NSLog(@"origMethod:%@ newMethod:%@",origMethod,newMethod);
</span><span class='line'>        }
</span><span class='line'>    });
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>-(void)setNewURL:(NSURL *)URL
</span><span class='line'>{
</span><span class='line'>    NSString *scheme = URL.scheme;
</span><span class='line'>
</span><span class='line'>    if ([scheme compare:@"http" options:NSCaseInsensitiveSearch] == NSOrderedSame || [scheme compare:@"https" options:NSCaseInsensitiveSearch] == NSOrderedSame) {
</span><span class='line'>        NSString *host = URL.host;
</span><span class='line'>        NSString *ip = [NLHosts ipByHost:host];
</span><span class='line'>        if (ip) {
</span><span class='line'>            //NSLog(@"NSMutableURLRequest setURL: host:%@-&gt;ip:%@",host,ip);
</span><span class='line'>            NSString *absoluteString = [URL absoluteString];
</span><span class='line'>            NSRange hostRange = [absoluteString rangeOfString:host];
</span><span class='line'>            if (hostRange.location != NSNotFound) {
</span><span class='line'>                absoluteString = [absoluteString stringByReplacingCharactersInRange:hostRange withString:ip];
</span><span class='line'>                NSURL *newURL = [NSURL URLWithString:absoluteString];
</span><span class='line'>                [self setNewURL:newURL];
</span><span class='line'>                [self setValue:host forHTTPHeaderField:@"Host"];
</span><span class='line'>                return;
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    return [self setNewURL:URL];
</span><span class='line'>
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>@end
</span></code></pre></td></tr></table></div></figure>


<p>在<code>NSURLRequest</code>类的<code>+load</code>方法中将<code>-initWithURL:cachePolicy:timeoutInterval:</code>替换为<code>initWithNewURL:cachePolicy:timeoutInterval:</code>;</p>

<p>在<code>initWithNewURL:cachePolicy:timeoutInterval:</code>方法中，如果初始化URL中的host需要转换为ip地址，则使用ip地址替换host生成新的URL,使用新URL生成新的
<code>NSMutableURLRequest</code>,并设置其HTTP Header的&#8221;Host&#8221;字段为原始值，将此<code>NSMutableURLRequest</code>返回进行后续网络请求。</p>

<p><code>NSMutableURLRequest</code>是<code>NSURLRequest</code>的子类，所以初始化方法在<code>NSURLRequest</code>中进行method swizzle替换后，同样可适用在<code>NSMutableURLRequest</code>。
这样在<code>initWithNewURL:cachePolicy:timeoutInterval:</code>中生成新的<code>NSMutableURLRequest</code>时同样也会调用swizzle过的初始化方法，但此时的
host已经是ip地址了，不需要再次进行转换，会直接调用原方法返回。</p>

<p>对<code>NSMutableURLRequest</code>类的<code>-setURL:</code>方法也需要进行类似的处理,具体见代码。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EXCLUDED_SOURCE_FILE_NAMES]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/08/16/excluded-source-file-names/"/>
    <updated>2014-08-16T14:03:01+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/08/16/excluded-source-file-names</id>
    <content type="html"><![CDATA[<p>在Xcode中可以通过名为<code>EXCLUDED_SOURCE_FILE_NAMES</code>的用户自定义(User-Defined) build setting来配置在某些Configurations下进行构建
不包含的文件。</p>

<p>比如，在Debug环境下会包含用于测试的桩文件，而在发布版本Release环境中不应该包含。</p>

<h2>设置方法</h2>

<p>在Target的<code>Build Settings</code>中滑到最下面，可看到<code>User-Defined</code>区域。</p>

<p><img src="http://xuguoxing.github.io/images/2014/08/User_Defined.png"></p>

<p>在<code>Build Settings</code>顶部点击<code>+</code>号，选择&#8221;Add User-Defined Setting&#8221;
<img src="http://xuguoxing.github.io/images/2014/08/Add_User_Defined.png"></p>

<p>在&#8221;User-Defined&#8221;区域添加名为<code>EXCLUDED_SOURCE_FILE_NAMES</code>设置项，并在Release配置下，添加需要Exlclude的文件名，支持通配符，以空格分隔。</p>

<p><img src="http://xuguoxing.github.io/images/2014/08/Add_User_Defined_OK.png"></p>

<h2>参考</h2>

<ul>
<li><a href="http://lists.apple.com/archives/xcode-users/2009/Jun/msg00153.html">Re: Conditional include based on configuration</a></li>
<li><a href="http://twobitlabs.com/2012/01/excluding-files-from-production-xcode-builds/">Slim down your iOS app by excluding files from production builds</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/06/09/jenkins/"/>
    <updated>2014-06-09T16:20:42+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/06/09/jenkins</id>
    <content type="html"><![CDATA[<h1>持续集成(CI)介绍</h1>

<p>持续集成自动从代码服务器拉取代码，完成自动编译、测试、分发和部署等工作；出现错误时及时通知开发人员，使问题可以立即得到解决，降低项目风险。</p>

<p><a href="http://jenkins-ci.org/">Jenkins</a>是一款很流行的持续集成工具，配置简单，结合一些插件和命令行工具可以完成很多工作。</p>

<p>Mac系统同样有一款持续集成工具<code>OS X Server</code>，配置简单，但功能无法扩展，其只能自动完成编译构建、静态代码分享、运行单元测试和打包归档四个工作。</p>

<h1>Jenkins安装与配置</h1>

<h2>安装</h2>

<ol>
<li>从<a href="http://jenkins-ci.org/">官网</a>下载Mac OS X的安装包</li>
<li>执行安装程序后会创建<code>jenkins</code>用户，主目录位于<code>/Users/Shared/Jenkins</code>；Jenkins以系统守护进程方式运行,可查看
<code>/Library/LaunchDaemons/org.jenkins-ci.plist</code>配置文件了解详细信息。</li>
<li><code>Jenkins</code>默认无密码，可使用“sudo passwd jenkins”命令设置密码</li>
<li>打开Jenkins管理页面 <code>http://localhost:8080/</code>，端口默认为8080，可在管理页面修改。</li>
</ol>


<h2>安全设置</h2>

<p><code>系统管理</code>&ndash;><code>Configure Global Security</code>，默认<code>启用安全</code>没有勾选。</p>

<ol>
<li>勾选<code>启用安全</code></li>
<li><code>安全域</code>中选择<code>Jenkins专有项目数据库</code>，并勾选<code>允许用户注册</code>。</li>
<li><code>授权策略</code>中选择<code>项目矩阵授权策略</code>; 设置<code>匿名用户</code>为<code>Read</code>权限;添加一个用户名，给予全部权限(该用户稍后创建)。</li>
<li>重启Jenkins, <a href="http://localhost:8080/restart">http://localhost:8080/restart</a></li>
<li>重启后使用<code>Login-&gt;create an account</code>使用之前输入的用户名创建账号。</li>
</ol>


<p><img src="images/2014/06/jenkins_security.png"></p>

<p>在错误的设置安全域、授权策略时，会无法登录到Jenkins管理页面修改配置，可通过下面的方法修复。</p>

<ol>
<li>停止Jenkins(杀进程)</li>
<li>在<code>$JENKINS_HOME</code>目录(通常为<code>/Users/Shared/Jenkins/Home</code>)中找到config.xml文件</li>
<li>打开此文件，将<code>&lt;useSecurity&gt;true&lt;/useSecurity&gt;</code>的true修改为false</li>
<li>删除<code>authorizationStrategy</code>、<code>securityRealm</code>节点</li>
<li>重启Jenkins，这时会恢复到没有<code>启用安全</code>的情况。</li>
</ol>


<h2>安装插件</h2>

<p>在<code>系统管理-&gt;管理插件</code>中可安装必要的插件。</p>

<p>我们需要安装git插件<code>Git Client Plugin</code>、<code>Git Server Plugin</code>，
Xcode插件<code>Xcode integration</code>。</p>

<h2>启动、关闭与重启</h2>

<p>对于登录用户，可以直接使用Jenkins的管理url。</p>

<pre><code>http://localhost:8080/exit
http://localhost:8080/restart
http://localhost:8080/reload
</code></pre>

<p>杀掉jenkins进程</p>

<pre><code>ps -e | grep jenkins
  53 ?? 0:02.51 /usr/bin/java -jar /Applications/Jenkins/jenkins.war
  392 ttys000 0:00.00 grep jenkins
sudo kill 53
</code></pre>

<p>使用<code>launchctl</code></p>

<pre><code>sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist
sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist
</code></pre>

<h1>自动化构建</h1>

<p>在Jenkins中，任务是以<code>Job</code>为单位的，在管理页面点击<code>新建</code>，输入Item名称，
并选择项目类型为<code>构建一个自由风格的软件项目</code>，点击OK后就进入了Job设置页面。</p>

<h2>源码管理</h2>

<p>可以根据需要设置从<code>svn</code>或者<code>git</code>获取源码。</p>

<p>对于git需要设置</p>

<ul>
<li>Repository URL: 仓库URL</li>
<li>Credentials: 用户名、密码</li>
<li>Branches to build:需要构建的分支</li>
<li>Additional Behaviours:其它需要执行的git操作,在必要的时候可以设置。</li>
</ul>


<p>对于svn需要设置</p>

<ul>
<li>Repository URL: 仓库URL</li>
<li>Credentials: 用户名、密码</li>
<li>Check-out Strategy: check-out的策略，可以直接<code>svn update</code>、在update之前执行<code>svn revert</code>或者获取一份全新的拷贝。</li>
</ul>


<h2>构建触发器</h2>

<p>设置构建触发条件,其中<code>Build periodically</code>可以在指定的时间触发构建，在进行每日构建时可以设置，构建时间使用类cron的语法。</p>

<p>也可以不设置触发器，手工触发构建任务。</p>

<h2>构建</h2>

<p>在构建步骤中可以使用<code>Exeute shell</code>执行任意构建任务，对于iOS项目，我们可以使用<code>Xcode</code>插件简化构建流程。</p>

<h3>Xcode</h3>

<h4>General build settings</h4>

<p>指定需要构建的target，不指定会构建所有的targets；在<code>Setting</code>中还有一系列构建的设置。</p>

<ul>
<li><code>Clean before build?</code> 在build前是否先clean</li>
<li><code>Generate Archive?</code> 是否生成<code>xcarchive</code>文件</li>
<li><code>Configuration</code> 构建使用的配置</li>
<li><p><code>Pack application and build .ipa?</code> 是否打包ipa文件.</p>

<p>若选择打包ipa文件，则还需要设置ipa文件名pattern，在名称中可使用:</p>

<ul>
<li>版本号 <code>${SHORT_VERSION}</code>,</li>
<li>build号 <code>${VERSION}</code></li>
<li>构建日期 <code>${BUILD_DATE}</code>,日期格式为<code>yyyy.MM.dd</code></li>
</ul>


<p>  比如可设置为<code>MyApp_${SHORT_VERSION}_build${VERSION}_${BUILD_DATE}</code>，那么生成的文件名格式为<code>MyApp_v1.0_build10_2014.05.17.ipa</code>。</p></li>
<li><p><code>Output directory</code> 相对于<code>build</code>目录的ipa文件生成目录。</p></li>
</ul>


<h4>Code signing &amp; OS X keychain options</h4>

<p>代码签名及KeyChain设置</p>

<ul>
<li><p><code>Code Signing Identity</code> 用于签名的开发者标识，可以在keychain中查看,名称格式为&#8221;iPhone Developer: your_name (XXXXXXX)&#8221;</p></li>
<li><p><code>Unlock Keychain?</code> 解锁keychain，设置<code>Keychain path</code>与<code>Keychain password</code>，<code>Keychain path</code>设置为
<code>${HOME}/Library/Keychains/login.keychain</code>。</p></li>
</ul>


<p>注:Jenkins以<code>jenkins</code>用户运行，其用户目录在<code>/Users/Shared/Jenkins</code>，若Jenkins在开发电脑上安装，实际上Xcode编译所需要的
keychain、Provisioning Profiles等信息都在原登录用户下，自动构建时就会报代码签名错误。可通过以下步骤解决:</p>

<ol>
<li><p>在&#8221;Keychain Access&#8221;应用中将开发者证书从&#8221;login&#8221;拷贝到&#8221;sysmtem&#8221;。</p>

<p>在&#8221;Keychain Access&#8221;中的login tab中，右键点击证书“iPhone Developer: your_name (XXXXXXX)”,选择“拷贝xxxx”；然后在system tab中右键点击，选择&#8221;粘贴2项&#8221;。</p></li>
<li><p>将主用户目录下的<code>KeyChains</code>目录拷贝到jenkins用户目录下</p></li>
</ol>


<p>  <code>/Users/YourName/Library/Keychains</code>&ndash;><code>/Users/Shared/Jenkins/Library/Keychains</code></p>

<ol>
<li>将主用户目录下的<code>MobileDevice</code>目录拷贝到jenkins用户目录下，<code>MobileDevice</code>中有<code>Devices</code>和<code>Provisioning Profiles</code>两个子目录。</li>
</ol>


<p>  <code>/Users/YourName/Library/MobileDevice</code>&ndash;><code>/Users/Shared/Jenkins/Library/MobileDevice</code></p>

<h3>Execute shell</h3>

<p>可以在构建步骤中的任意位置执行脚本，比如在Xcode插件之前执行脚本设置必要的编译环境，执行单元测试，在Xcode插件打包ipa文件后，
将文件上传到后台服务部署分发等。</p>

<p>比如，可增加&#8221;Execute shell&#8221;将打包文件上传后台服务器。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>
</span><span class='line'>buildDate=`date +%Y.%m.%d`
</span><span class='line'>version=`/usr/libexec/PlistBuddy -c "Print CFBundleVersion" ./MyApp-Info.plist`
</span><span class='line'>shortVersion=`/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" "./MyApp-Info.plist"`
</span><span class='line'>ipaFileName="MyApp_v"${shortVersion}"_build"${version}"_"${buildDate}".ipa"
</span><span class='line'>
</span><span class='line'>curl --form "reporter=@./build/Release-iphoneos/"${ipaFileName} http://host/cgi-bin/up.cgi</span></code></pre></td></tr></table></div></figure>


<h2>构建后操作</h2>

<p>增加设置构建完成后进行的步骤，可发布测试报告、邮件通知等。</p>

<h1>参考</h1>

<ul>
<li><a href="http://jenkins-ci.org/">Jenkins homepage</a></li>
<li><a href="https://wiki.jenkins-ci.org/display/JENKINS/Standard+Security+Setup">Jenkins Standard Security Setup</a></li>
<li><a href="https://wiki.jenkins-ci.org/display/JENKINS/Disable+security">Jenkins Disable security</a></li>
<li><a href="http://damien.co/general/how-to-start-stop-restart-or-reload-jenkins-mac-osx-8022">HOW TO: Start, Stop, Restart or Reload Jenkins – Mac OSx</a></li>
<li><a href="http://webfrogs.me/2013/12/31/jenkins-ios-ci/">使用Jenkins搭建iOS开发的CI服务器</a></li>
<li><a href="http://code-dojo.blogspot.co.uk/2012/09/fix-ios-code-signing-issue-when-using.html">Fix the iOS code signing issue when using Jenkins</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OCMock]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/06/09/ocmock/"/>
    <updated>2014-06-09T09:47:57+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/06/09/ocmock</id>
    <content type="html"><![CDATA[<p>在面向对象的系统中，所有的对象之间都有一定的联系。在单元测试中，当需要对某一个对象进行测试时，其可能依赖其他对象的返回值或者调用
其他对象的某些方法。其依赖的对象有可能行为不确定或者很难触发(各种错误场景)或者该对象还不存在。这种情况下需要使用<code>Mock Object</code>来模拟
依赖对象的行为，返回特定的值、实现特定的方法，来保证对测试对象的单元测试能有个可预期的结果来判断单元测试是否通过。</p>

<h1>OCMock</h1>

<p><code>OCMock</code>是个mock object的Objective-C实现，其使用Objective-C的动态特性可以快速创建mock object,并且使用Objective-C方法调用的语法来定义<code>expectations</code>和<code>stubs</code>。</p>

<p><code>OCMock</code>提供了三种mock功能</p>

<ul>
<li><code>stub</code>(桩) :对特定的方法返回预定义的值。</li>
<li><code>dynamic mock</code>(动态Mock):验证某个方法是否被调用。</li>
<li><code>partial mock</code>(部分Mock):重写已存在对象的方法。</li>
</ul>


<h2>添加OCMock框架</h2>

<ol>
<li><p>在<a href="http://ocmock.org/download/">下载页面</a>下载预编译的dmg文件,在其中的iOS目录下包含静态库<code>libOCMock.a</code>和<code>OCMock</code>头文件目录。
也可从GitHub <a href="https://github.com/erikdoe/ocmock">https://github.com/erikdoe/ocmock</a>下载源码自行编译。</p></li>
<li><p>在单元测试目录下，建立如下目录结构，并添加到项目中。</p></li>
</ol>


<p>  <img src="http://xuguoxing.github.io/images/2014/06/ocmockfile.png" width="668" height="404"></p>

<ul>
<li><p>在测试Target的<code>Build Phases-&gt;Link Binary With Libraries</code>中应该会自动包含<code>libOCMock.a</code>库，若没有，需手动添加一下。</p></li>
<li><p>头文件搜索路径设置,在测试Target的<code>Build Settings-&gt;Search Paths-&gt;Header Search Paths</code>中添加路径<code>$(PROJECT_DIR)/NeteaseLotteryTests/usr/include</code></p></li>
<li><p>link设置,测试Target的<code>Build Settings-&gt;Linking-&gt;Other Linker Flags</code>设置<code>-Objc</code>,<code>-force_load $(PROJECT_DIR)/NeteaseLotteryTests/usr/lib/libOCMock.a</code></p></li>
</ul>


<h2>创建Mock对象</h2>

<p><code>OCMockObject</code>类有几个工厂方法创建mock对象</p>

<ul>
<li><code>+mockForClass:</code>  基于给定类创建mock对象</li>
<li><code>+mockForProtocol:</code> 基于给定协议创建mock对象</li>
<li><code>+niceMockForClass:</code> 基于给定类创建&#8221;nice&#8221;mock对象</li>
<li><code>+niceMockForProtocol:</code> 基于给定协议创建&#8221;nice&#8221;mock对象</li>
<li><code>+partialMockForObject:</code> 基于给定对象创建&#8221;partical&#8221;mock对象</li>
<li><code>+observerMock:</code> 创建通知观察者(notification observer)mock对象</li>
</ul>


<p>三种mock对象类型</p>

<ol>
<li><p>普通mock对象</p>

<p>使用<code>+mockForClass:</code>、<code>+mockForProtocol:</code>创建的mock对象在接收到未定义的方法调用时产生<code>NSException</code>异常。</p></li>
<li><p>nick mock对象</p>

<p>使用<code>+niceMockForClass:</code>、<code>+niceMockForProtocol:</code>创建的mock对象在接收到未定义的方法调用时简单忽略。</p></li>
<li><p>partical mock对象</p>

<p>partical mock对象基于一个真实对象，而不是一个类或协议,其将一个已存在对象转换成mock,可重写其中的方法。</p></li>
</ol>


<h2>Mock使用方法</h2>

<p><a href="http://ocmock.org/tutorials/">OCMock Tutorials</a></p>

<h3>stub</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>id jalopy = [OCMock mockForClass[Car class]];
</span><span class='line'>[[[jalopy stub] andReturn:@"75kph"] goFaster:[OCMArg any] units:@"kph"];
</span><span class='line'>[[[[jalopy stub] classMethod] andReturn:@"expired"] checkWarrany];</span></code></pre></td></tr></table></div></figure>


<h3>expect</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>id niceMockThing = [OCMock niceMockForClass[Thing class]];
</span><span class='line'>[[niceMockThing expect] greeting:@"hello"];
</span><span class='line'>
</span><span class='line'>// verify the method was called as expected
</span><span class='line'>[niceMocking verify];</span></code></pre></td></tr></table></div></figure>


<h3>参数(<code>OCMArg</code>)</h3>

<ul>
<li><code>+any</code> 任意参数</li>
<li><code>+anyPointer</code> 任意指针参数</li>
<li><code>+isNil</code>  nil参数</li>
<li><code>+isNotNil</code> 非nil参数</li>
<li><code>+isNotEqual:</code> 不与某个对象相等的参数</li>
<li><code>+checkWithSelector:onObject:</code>  使用指定的target/action对检查通过的参数</li>
<li><code>+checkWithBlock:</code> 使用block检查通过的参数</li>
</ul>


<h3>返回值</h3>

<p>使用<code>-expect</code>或<code>-stub</code>返回的对象可使用下列方法设置返回值或者执行某种行为</p>

<ul>
<li><code>-andReturn:</code> 返回指定对象</li>
<li><code>-andReturnValue:</code> 返回指定值(NSValue)</li>
<li><code>-andThrow:</code> 抛出指定异常</li>
<li><code>-andPost:</code>  post指定通知</li>
<li><code>-andCall:onObject:</code> 在指定object上调用指定selector</li>
<li><code>-andDo:</code> 调用指定block</li>
</ul>


<p>可以指定<code>-andDo:</code>对block回调进行模拟,假设有这样的一个方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)downloadWeatherDataForZip:(NSString *)zip
</span><span class='line'>              callback:(void (^)(NSDictionary *response))callback;</span></code></pre></td></tr></table></div></figure>


<p>则使用以下方法进行模拟</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 1. stub using OCMock andDo: operator.
</span><span class='line'>
</span><span class='line'>[[[groupModelMock stub] andDo:^(NSInvocation *invoke) {
</span><span class='line'>        //2. declare a block with same signature
</span><span class='line'>        void (^weatherStubResponse)(NSDictionary *dict);
</span><span class='line'>
</span><span class='line'>        //3. link argument 3 with with our block callback
</span><span class='line'>        [invoke getArgument:&weatherStubResponse atIndex:3];
</span><span class='line'>
</span><span class='line'>        //4. invoke block with pre-defined input
</span><span class='line'>        NSDictionary *testResponse = @{@"high": 43 , @"low": 12};
</span><span class='line'>        weatherStubResponse(groupMemberMock);
</span><span class='line'>
</span><span class='line'>    }]downloadWeatherDataForZip@"80304" callback:[OCMArg any] ];</span></code></pre></td></tr></table></div></figure>


<p>andDo中的<code>invoke</code>参数即模拟的方法调用本身，使用<code>getArgument:atIndex:</code>可读取方法调用的参数，
对于本例，第四个参数((索引3))即为callback参数(前两个参数分别为<code>self</code>和<code>_cmd</code>),执行callback实参，传递预定义的参数即可。</p>

<h1>依赖注入（Dependency Injection）</h1>

<p>依赖注入是一种软件设计模式，使某一模块所依赖的其他模块或服务，在该模块创建时以注入的方式引入。</p>

<p>在单元测试中需要使用此模式设计类，以方便使用Mock对象来替换待测试对象所依赖的其他对象。</p>

<p>举例:</p>

<p>某类内部需要使用<code>NSNotificationCenter</code>，原始做法是直接使用<code>NSNotificationCenter defaultCenter</code>。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@implementation ExampleObject : NSObject
</span><span class='line'>-(void)postNotification
</span><span class='line'>{
</span><span class='line'>    [[NSNotificationCenter defaultCenter] postNotificationName:@"SomethingCompletedNotification" object:self userInfo:userInfo];
</span><span class='line'>}
</span><span class='line'>@end</span></code></pre></td></tr></table></div></figure>


<p>在做单元测试时，我们只需要知道<code>ExampleObject</code>对象的<code>-postNotification</code>方法确实调用了<code>NSNotificationCenter</code>的<code>postNotificationName:</code>方法，
并不需要实际去发送通知，实际发送通知会引起其他模块的反应，不是此单元测试的目的。</p>

<p>所以我们需要使用<code>NSNotificationCenter</code>的mock对象来代替真实的<code>NSNotificationCenter</code>对象；而上面的方法无法进行mock，需要进行重构。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>@interface ExampleObject : NSObject
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>@property (nonatomic, readonly) NSNotificationCenter *notificationCenter;
</span><span class='line'>
</span><span class='line'>- (instancetype)initWithNotificationCenter:(NSNotificationCenter *)center;
</span><span class='line'>    //...
</span><span class='line'>@end
</span><span class='line'>
</span><span class='line'>@interface BNRCodeHostFetcher ()
</span><span class='line'>
</span><span class='line'>@property (nonatomic, strong, readwrite) NSNotificationCenter *notificationCenter;
</span><span class='line'>
</span><span class='line'>@end
</span><span class='line'>
</span><span class='line'>@implementation ExampleObject : NSObject
</span><span class='line'>
</span><span class='line'>- (instancetype)initWithNotificationCenter:(NSNotificationCenter *)center
</span><span class='line'>{
</span><span class='line'>  self = [super init];
</span><span class='line'>  if (self)
</span><span class='line'>  {
</span><span class='line'>      self.notificationCenter = center;
</span><span class='line'>  }
</span><span class='line'>  return self;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (instancetype)init
</span><span class='line'>{
</span><span class='line'>    return [self initWithNotificationCenter:[NSNotificationCenter defaultCenter]];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>-(void)postNotification
</span><span class='line'>{
</span><span class='line'>    [[self notificationCenter] postNotificationName:@"SomethingCompletedNotification" object:self userInfo:userInfo];
</span><span class='line'>}
</span><span class='line'>@end</span></code></pre></td></tr></table></div></figure>


<p>这样，在正常使用时我们可以直接使用<code>-init</code>方法，会传递系统的<code>NSNotificationCenter</code>对象；在做单元测试时，可以使用<code>-initWithNotificationCenter:</code>
方法传递mock的<code>NSNotificationCenter</code>对象作为参数。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>id notificationCenter = [OCMock mockForClass[NSNotificationCenter class]];
</span><span class='line'>[[notificationCenter expect] postNotificationName:[OCMArg any] object:[OCMArg any] userInfo:[OCMArg any]];
</span><span class='line'>
</span><span class='line'>ExampleObject *exampleObject = [[ExampleObject alloc]initWithNotificationCenter:notificationCenter];
</span><span class='line'>[exampleObject postNotification];
</span><span class='line'>[notificationCenter verify];
</span></code></pre></td></tr></table></div></figure>


<h1>参考</h1>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Mock_object">Mock object</a></li>
<li><a href="http://ocmock.org/">OCMock</a></li>
<li><a href="http://ocmock.org/tutorials/">OCMock Tutorials</a></li>
<li><a href="http://www.bignerdranch.com/blog/making-mockery-mock-objects/">Making a Mockery with Mock Objects</a></li>
<li><a href="http://hackazach.net/code/2014/03/03/effective-testing-with-ocmock/">OCMock Test Origami</a></li>
<li><a href="http://alexvollmer.com/posts/2010/06/28/making-fun-of-things-with-ocmock/">Making Fun of Things with OCMock</a></li>
<li><a href="http://en.wikipedia.org/wiki/Dependency_injection">Dependency injection</a></li>
<li><a href="http://www.bignerdranch.com/blog/dependency-injection-ios/">Dependency Injection, iOS and You</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCTest]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/05/23/xctest/"/>
    <updated>2014-05-23T10:19:20+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/05/23/xctest</id>
    <content type="html"><![CDATA[<p><code>XCTest</code>是Xcode5引入的单元测试框架，替换了之前的<code>OCUnit</code>。<code>XCTest</code>中的测试用例类都继承自<code>XCTestCase</code>类，断言前缀为<code>XCT</code>。</p>

<h1>项目中引入<code>XCTest</code>框架</h1>

<h2>创建新项目</h2>

<p>使用Xcode5新建项目，会自动创建名为<code>[ProjectName]Tests</code>的<code>Target</code>,
自动生成<code>[ProjectName]Tests</code>目录，且包含一个测试失败的单元测试文件<code>[ProjectName]Tests.m</code>。</p>

<h2>老项目中引入</h2>

<p>在Xcode中选择菜单<code>File-&gt;New-&gt;Target...</code>,在弹出框中选择<code>iOS-&gt;Other-&gt;Cocoa Touch Unit Testing Bundle</code>,在弹出的设置页面中
可根据需要修改，其中<code>Product Name</code>中的默认值为<code>[ProjectName] Tests</code>,中间包含一空格，推荐将空格去掉；其他项保持原状即可。</p>

<p><img src="http://xuguoxing.github.io/images/2014/05/XCTest_newTarget.png"></p>

<p>注:
* XCTest框架在运行时自动注入(Inject) app的target，访问其中的符号信息(symbols),
所以在XCTest Target的<code>Compile Sources</code>中只需要包含测试用例文件，不需要包含待测试的源文件。
* 若运行单元测试时有找不到符号的提示，检查下app Target <code>Build Settings</code>中的<code>Symbols hidden by default</code>,应该设为<code>NO</code>。</p>

<h1>运行单元测试</h1>

<ol>
<li>菜单<code>Product-&gt;Test</code>或者<code>Command+U</code>可运行全部测试用例。</li>
<li>在Xcode5的导航区有<code>Test Navigator</code>,在其中可选择运行整个bundle的测试方法、运行某个测试类或运行某一个测试方法。</li>
<li>使用<code>xcodebuild test</code>命令运行。</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xcodebuild test -scheme XCTestDemo -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone Retina (4-inch),OS=7.1'</span></code></pre></td></tr></table></div></figure>


<p>注: <code>XCTest</code>只能在iOS7以上的模拟器或设备中运行,所以在使用方法1、2时，Xcode中的指定的运行设备需为7.0以上的；而使用<code>xcodebuild test</code>
命令运行时需指定<code>destination</code>参数，选择7.0以上的模拟器或真实设备运行。否则会有错误提示:
&ldquo;Library not loaded: /Developer/Library/Frameworks/XCTest.framework/XCTest&rdquo;</p>

<p>执行完测试用例后，执行通过的测试用例左侧会有<code>绿色对勾</code>图标，执行失败的测试用例左侧会有<code>红色x图标</code>，且执行失败的行会红色高亮显示。</p>

<p><img src="http://xuguoxing.github.io/images/2014/05/XCTest_Navigator.png"></p>

<h1><code>XCTestCase</code>类结构</h1>

<p>一个测试用例文件如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import &lt;XCTest/XCTest.h&gt;
</span><span class='line'>
</span><span class='line'>@interface XCTestDemoTests : XCTestCase
</span><span class='line'>
</span><span class='line'>@end
</span><span class='line'>
</span><span class='line'>@implementation XCTestDemoTests
</span><span class='line'>
</span><span class='line'>+ (void)setUp
</span><span class='line'>{
</span><span class='line'>    NSLog(@"TestCase Class setUp");
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>+ (void)tearDown
</span><span class='line'>{
</span><span class='line'>    NSLog(@"TestCase Class tearDown");
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)setUp
</span><span class='line'>{
</span><span class='line'>    [super setUp];
</span><span class='line'>
</span><span class='line'>    NSLog(@"TestCase SetUp");
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)tearDown
</span><span class='line'>{
</span><span class='line'>    [super tearDown];
</span><span class='line'>    NSLog(@"TestCase tearDown");
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)testExample1
</span><span class='line'>{
</span><span class='line'>    NSLog(@"testExample1");
</span><span class='line'>    XCTAssertTrue(1, @"testExample1");
</span><span class='line'>    //XCTFail(@"No implementation for \"%s\"", __PRETTY_FUNCTION__);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)testExample2
</span><span class='line'>{
</span><span class='line'>    NSLog(@"testExample2");
</span><span class='line'>    XCTAssertTrue(1, @"testExample1");
</span><span class='line'>    //XCTFail(@"No implementation for \"%s\"", __PRETTY_FUNCTION__);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@end</span></code></pre></td></tr></table></div></figure>


<p>在<code>XCTestCase</code>类中包含类方法<code>+ (void)setUp</code>、<code>+ (void)tearDown</code>,实例方法<code>- (void)setUp</code>、<code>- (void)tearDown</code>以及多个测试方法。
这些方法的执行顺序为</p>

<ol>
<li><code>+ (void)setUp</code></li>
<li><code>- (void)setUp</code></li>
<li><code>- (void)testExample1</code></li>
<li><code>- (void)tearDown</code></li>
<li><code>- (void)setUp</code></li>
<li><code>- (void)testExample2</code></li>
<li><code>- (void)tearDown</code></li>
<li><code>+ (void)tearDown</code></li>
</ol>


<p>即<code>setup</code>类方法会在类创建的调用一次，类销毁的时候调用<code>tearDown</code>类方法，在每个测试方法执行之前调用<code>setUp</code>实例方法,测试方法执行之后调用
<code>tearDown</code>实例方法。</p>

<h1>断言</h1>

<p><code>XCTest</code>支持的断言有：</p>

<ul>
<li>XCTFail (format…)</li>
<li>XCTAssertNil (a1, format…)</li>
<li>XCTAssertNotNil (a1, format…)</li>
<li>XCTAssert (a1, format…)</li>
<li>XCTAssertTrue (a1, format…)</li>
<li>XCTAssertFalse (a1, format…)</li>
<li>XCTAssertEqualObjects (a1, a2, format…)</li>
<li>XCTAssertEquals (a1, a2, format…)</li>
<li>XCTAssertEqualsWithAccuracy (a1, a2, accuracy, format…)</li>
<li>XCTAssertThrows (expression, format…)</li>
<li>XCTAssertThrowsSpecific (expression, specificException, format…)</li>
<li>XCTAssertThrowsSpecificNamed (expression, specificException, exceptionName, format…)</li>
<li>XCTAssertNoThrow (expression, format…)</li>
<li>XCTAssertNoThrowSpecific (expression, specificException, format…)</li>
<li>XCTAssertNoThrowSpecificNamed (expression, specificExcepton, exceptionName, format…)</li>
</ul>


<p>具体可见<code>XCTestAssertions.h</code>文件</p>

<h1>异步单元测试</h1>

<p>正常情况下，单元测试方法执行完毕后立即返回，若测试的是异步任务，此时没有拿到异步任务的返回结果，测试就终止了。</p>

<p>测试异步任务时，需要注意两个方法:</p>

<ol>
<li>单元测试方法在异步任务完成前不能返回。</li>
<li>在Cocoa中需要使用<code>run loop</code>来处理网络和定时器，这样异步任务才能完成。</li>
</ol>


<p>解决方案:</p>

<ol>
<li>在调用异步任务后，使用<code>CFRunLoopRun()</code>启用<code>run loop</code>一直等待，且run loop去处理网络和定时器以完成异步任务。</li>
<li>在异步任务完成后，使用<code>CFRunLoopStop(CFRunLoopGetCurrent())</code>终止当前的<code>run loop</code>,以结束单元测试方法。</li>
</ol>


<p><code>CFRunLoopRun</code></p>

<blockquote><p>The current thread’s run loop runs in the default mode (see “Default Run Loop Mode”) until the run loop is stopped with CFRunLoopStop or all the sources and timers are removed from the default run loop mode.</p><p>Run loops can be run recursively. You can call CFRunLoopRun from within any run loop callout and create nested run loop activations on the current thread’s call stack.</p></blockquote>


<p><code>CFRunLoopStop</code></p>

<blockquote><p>This function forces rl to stop running and return control to the function that called CFRunLoopRun or CFRunLoopRunInMode for the current run loop activation. If the run loop is nested with a callout from one activation starting another activation running, only the innermost activation is exited.</p></blockquote>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)testAsyncTask
</span><span class='line'>{
</span><span class='line'>    [taskManager execAsyncTaskWithCompletion:^(NSError *error) {
</span><span class='line'>        XCTAssertNil(error, @"Error should be nil");
</span><span class='line'>         CFRunLoopStop(CFRunLoopGetCurrent());
</span><span class='line'>    }];
</span><span class='line'>    CFRunLoopRun();
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>github上有两个开源库使用<code>NSRunLoop</code>对此方法进行了扩展，增加了超时等机制。</p>

<ul>
<li><a href="https://github.com/premosystems/XCAsyncTestCase">XCAsyncTestCase</a></li>
<li><a href="https://github.com/iheartradio/xctest-additions">xctest-additions</a></li>
</ul>


<h1>参考</h1>

<ul>
<li>iOS测试指南,作者:芈峮</li>
<li><a href="http://hackazach.net/code/2014/02/24/slim-xctest-targets/">Slim XCTest Targets</a></li>
<li><a href="http://mentalfaculty.tumblr.com/post/83814421929/unit-testing-asynchronous-cocoa">Unit Testing Asynchronous Cocoa</a></li>
<li><a href="https://developer.apple.com/legacy/library/documentation/DeveloperTools/Conceptual/UnitTesting/00-About_Unit_Testing/about.html">Xcode Unit Testing Guide</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App Info]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/04/24/app-info/"/>
    <updated>2014-04-24T14:47:06+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/04/24/app-info</id>
    <content type="html"><![CDATA[<h2>Device信息</h2>

<h3>硬件设备类型</h3>

<p>硬件类型字符串，格式为&#8221;iPhone5,1&#8221;、&#8221;iPod5,1&#8221;、&#8221;iPad3,2&#8221;、&#8221;x86_64&#8221;等</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-(NSString *)platform
</span><span class='line'>{
</span><span class='line'>    size_t size;
</span><span class='line'>    sysctlbyname("hw.machine", NULL, &size, NULL, 0);
</span><span class='line'>    char *machine = malloc(size);
</span><span class='line'>    sysctlbyname("hw.machine", machine, &size, NULL, 0);
</span><span class='line'>    NSString *platform = [NSString stringWithUTF8String:machine];
</span><span class='line'>    free(machine);
</span><span class='line'>    return platform;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>或者</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-(NSString *)platform{
</span><span class='line'>    struct utsname systemInfo;
</span><span class='line'>    uname(&systemInfo);
</span><span class='line'>    NSString *machine =  [NSString stringWithCString:systemInfo.machine
</span><span class='line'>                                            encoding:NSUTF8StringEncoding];
</span><span class='line'>    return machine;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>硬件类型和具体设备的对应关系见<a href="https://dl.dropboxusercontent.com/u/5927761/iOSDeviceModelMapping.plist">iOSDeviceModelMapping.plist</a>。</p>

<h3>MAC地址</h3>

<p>自<a href="https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS7.html">iOS7</a>后，
获取Mac地址总会返回&#8221;02:00:00:00:00:00&#8221;。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (NSString *) macaddress{
</span><span class='line'>
</span><span class='line'>    int                 mib[6];
</span><span class='line'>    size_t              len;
</span><span class='line'>    char                *buf;
</span><span class='line'>    unsigned char       *ptr;
</span><span class='line'>    struct if_msghdr    *ifm;
</span><span class='line'>    struct sockaddr_dl  *sdl;
</span><span class='line'>
</span><span class='line'>    mib[0] = CTL_NET;
</span><span class='line'>    mib[1] = AF_ROUTE;
</span><span class='line'>    mib[2] = 0;
</span><span class='line'>    mib[3] = AF_LINK;
</span><span class='line'>    mib[4] = NET_RT_IFLIST;
</span><span class='line'>
</span><span class='line'>    if ((mib[5] = if_nametoindex("en0")) == 0) {
</span><span class='line'>        printf("Error: if_nametoindex error\n");
</span><span class='line'>        return NULL;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    if (sysctl(mib, 6, NULL, &len, NULL, 0) &lt; 0) {
</span><span class='line'>        printf("Error: sysctl, take 1\n");
</span><span class='line'>        return NULL;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    if ((buf = malloc(len)) == NULL) {
</span><span class='line'>        printf("Could not allocate memory. error!\n");
</span><span class='line'>        return NULL;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    if (sysctl(mib, 6, buf, &len, NULL, 0) &lt; 0) {
</span><span class='line'>        printf("Error: sysctl, take 2");
</span><span class='line'>        free(buf);
</span><span class='line'>        return NULL;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    ifm = (struct if_msghdr *)buf;
</span><span class='line'>    sdl = (struct sockaddr_dl *)(ifm + 1);
</span><span class='line'>    ptr = (unsigned char *)LLADDR(sdl);
</span><span class='line'>    NSString *outstring = [NSString stringWithFormat:@"%02X:%02X:%02X:%02X:%02X:%02X",
</span><span class='line'>                           *ptr, *(ptr+1), *(ptr+2), *(ptr+3), *(ptr+4), *(ptr+5)];
</span><span class='line'>    free(buf);
</span><span class='line'>
</span><span class='line'>    return outstring;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>操作系统名</h3>

<p>如&#8221;iPhone OS&#8221;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[UIDevice currentDevice] systemName];</span></code></pre></td></tr></table></div></figure>


<h3>操作系统版本号</h3>

<p>例如：7.1.1</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[UIDevice currentDevice] systemVersion];</span></code></pre></td></tr></table></div></figure>


<h3>Model</h3>

<p>例如&#8221;iPhone&#8221;,&ldquo;iPod touch&rdquo;,&ldquo;iPhone Simulator&rdquo;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[UIDevice currentDevice] model];</span></code></pre></td></tr></table></div></figure>


<h3>IDFV(Vendor ID)</h3>

<p>厂商ID,具体见<a href="http://iosapp.me/blog/2014/03/31/udid/">UDID</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[[UIDevice currentDevice] identifierForVendor] UUIDString];</span></code></pre></td></tr></table></div></figure>


<h3>设备方向(orientation)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>UIDeviceOrientation orientation = [[UIDevice currentDevice] orientation];</span></code></pre></td></tr></table></div></figure>


<p>注:<code>UIDeviceOrientation</code>与<code>UIInterfaceOrientation</code>定义有差别。</p>

<h3>物理内存</h3>

<p>获取设备物理内存大小,以字节为单位</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;sys/sysctl.h&gt;
</span><span class='line'>
</span><span class='line'>- (uint64_t)physicalMemory
</span><span class='line'>{
</span><span class='line'>    size_t size = sizeof(uint64_t);
</span><span class='line'>    uint64_t physicalMemorySize;
</span><span class='line'>    int mib[2] = {CTL_HW, HW_MEMSIZE};
</span><span class='line'>    sysctl(mib, 2, &physicalMemorySize, &size, NULL, 0);
</span><span class='line'>    return physicalMemorySize;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>用户空间内存大小</h3>

<p>获取用户空间可用的内存大小(去除内核、Video等内存占用)，以字节为单位</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;sys/sysctl.h&gt;
</span><span class='line'>- (uint64_t)userMemory
</span><span class='line'>{
</span><span class='line'>    size_t size = sizeof(uint64_t);
</span><span class='line'>    uint64_t userMemorySize;
</span><span class='line'>    int mib[2] = {CTL_HW, HW_USERMEM};
</span><span class='line'>    sysctl(mib, 2, &userMemorySize, &size, NULL, 0);
</span><span class='line'>    return userMemorySize;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>当前应用所占内存</h3>

<p>目前没有很好的方法获取App当前所占内存,有一种方法是使用<code>vm_statistics_data_t</code>获取虚拟内存信息，仅供参考
<a href="http://landonf.bikemonkey.org/code/iphone/Determining_Available_Memory.20081203.html">Determining Available Memory</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import &lt;mach/mach.h&gt;
</span><span class='line'>#import &lt;mach/mach_host.h&gt;
</span><span class='line'>
</span><span class='line'>static void print_free_memory () {
</span><span class='line'>    mach_port_t host_port;
</span><span class='line'>    mach_msg_type_number_t host_size;
</span><span class='line'>    vm_size_t pagesize;
</span><span class='line'>
</span><span class='line'>    host_port = mach_host_self();
</span><span class='line'>    host_size = sizeof(vm_statistics_data_t) / sizeof(integer_t);
</span><span class='line'>    host_page_size(host_port, &pagesize);
</span><span class='line'>
</span><span class='line'>    vm_statistics_data_t vm_stat;
</span><span class='line'>
</span><span class='line'>    if (host_statistics(host_port, HOST_VM_INFO, (host_info_t)&vm_stat, &host_size) != KERN_SUCCESS)
</span><span class='line'>        NSLog(@"Failed to fetch vm statistics");
</span><span class='line'>
</span><span class='line'>    /* Stats in bytes */
</span><span class='line'>    natural_t mem_used = (vm_stat.active_count +
</span><span class='line'>                          vm_stat.inactive_count +
</span><span class='line'>                          vm_stat.wire_count) * pagesize;
</span><span class='line'>    natural_t mem_free = vm_stat.free_count * pagesize;
</span><span class='line'>    natural_t mem_total = mem_used + mem_free;
</span><span class='line'>    NSLog(@"used: %u free: %u total: %u", mem_used, mem_free, mem_total);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/Split82/iOSMemoryBudgetTest">iOSMemoryBudgetTest</a>通过不断alloc内存来记录应用crash时总的内存分配量，
但记录的alloc的内存数量和使用上面方法获取的mem_used数据对不上。</p>

<h2>进程信息(NSProcessInfo)</h2>

<p><code>NSProcessInfo</code>中包含当前进程的信息,包括启动参数、环境变量、进程ID、进程名、操作系统名、操作系统版本、处理器个数、系统启动时间等。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSProcessInfo *processInfo = [NSProcessInfo processInfo];
</span><span class='line'>NSDictionary *environment = [processInfo environment];
</span><span class='line'>NSArray *arguments = [processInfo arguments];
</span><span class='line'>NSUInteger numcore = [processInfo processorCount];</span></code></pre></td></tr></table></div></figure>


<p>示例代码见<a href="https://github.com/markd2/SystemInfo">SystemInfo</a>。</p>

<h2>Application信息</h2>

<h3>当前应用状态(<code>UIApplicationState</code>)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> [[UIApplication sharedApplication] applicationState];</span></code></pre></td></tr></table></div></figure>


<p><code>UIApplicationState</code>状态有:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>typedef enum : NSInteger {
</span><span class='line'>   UIApplicationStateActive,
</span><span class='line'>   UIApplicationStateInactive,
</span><span class='line'>   UIApplicationStateBackground
</span><span class='line'>} UIApplicationState;</span></code></pre></td></tr></table></div></figure>


<h3>应用注册的推送类型(<code>UIRemoteNotificationType</code>)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[UIApplication sharedApplication] enabledRemoteNotificationTypes];</span></code></pre></td></tr></table></div></figure>


<p><code>UIRemoteNotificationType</code>定义的类型有</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>typedef enum : NSUInteger {
</span><span class='line'>   UIRemoteNotificationTypeNone    = 0,
</span><span class='line'>   UIRemoteNotificationTypeBadge   = 1 &lt;&lt; 0,
</span><span class='line'>   UIRemoteNotificationTypeSound   = 1 &lt;&lt; 1,
</span><span class='line'>   UIRemoteNotificationTypeAlert   = 1 &lt;&lt; 2,
</span><span class='line'>   UIRemoteNotificationTypeNewsstandContentAvailability = 1 &lt;&lt; 3
</span><span class='line'>} UIRemoteNotificationType;</span></code></pre></td></tr></table></div></figure>


<h2>Screen信息</h2>

<h3>分辨率scale</h3>

<p>1.0为普通分辨率，2.0为2倍分辨率，即为Retina屏幕</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[UIScreen mainScreen] scale];</span></code></pre></td></tr></table></div></figure>


<h2>Bundle信息</h2>

<h3>发布版本号(Version/ Bundle versions string, short)</h3>

<p>一般格式为三段.分隔的整数，如3.24.1等</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"];</span></code></pre></td></tr></table></div></figure>


<p>使用NSString的<code>compare</code>方法，指定<code>NSNumbericSearch</code>选项，可比较版本号</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-(BOOL)version:(NSString*)_oldver lessthan:(NSString*)_newver
</span><span class='line'>{
</span><span class='line'>    if([_oldver compare:_newver options:NSNumericSearch] == NSOrderedAscending){
</span><span class='line'>        return YES;
</span><span class='line'>    }
</span><span class='line'>    return NO;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>内部版本号(build/Bundle version)</h3>

<p>内部构建版本号，格式也一般为三段.分隔的整数，也可以使用单一整数递增</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[[NSBundle mainBundle] infoDictionary] objectForKey:(NSString *)kCFBundleVersionKey];</span></code></pre></td></tr></table></div></figure>


<p><code>kCFBundleVersionKey</code>定义即为字符串&#8221;CFBundleVersion&#8221;</p>

<h3>Bundle identifier</h3>

<p>每个应用的唯一bundle id</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[[NSBundle mainBundle] infoDictionary] objectForKey:(NSString *)kCFBundleIdentifierKey];</span></code></pre></td></tr></table></div></figure>


<p><code>kCFBundleIdentifierKey</code>定义为&#8221;CFBundleIdentifier&#8221;</p>

<h2>其他</h2>

<h3>广告ID(IDFA)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<ul>
<li><a href="https://github.com/erica/uidevice-extension/">uidevice-extension</a></li>
<li><a href="http://iosapp.me/blog/2014/03/31/udid/">UDID</a></li>
<li><a href="http://gamesfromwithin.com/whered-that-memory-go">Where’d That Memory Go?</a></li>
<li><a href="http://landonf.bikemonkey.org/code/iphone/Determining_Available_Memory.20081203.html">iPhone: Determining Available Memory</a></li>
<li><a href="https://forrst.com/posts/Get_current_Memory_usage-hzw">Get current Memory usage</a></li>
<li><a href="https://github.com/Split82/iOSMemoryBudgetTest">iOSMemoryBudgetTest</a></li>
<li><a href="https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html">Information Property List Key Reference</a></li>
<li><a href="https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFBundleRef/Reference/reference.html">CFBundle Reference</a></li>
<li><a href="http://www.bignerdranch.com/blog/we-want-information-information/">We want information&hellip; Information&hellip;</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UDID]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/03/31/udid/"/>
    <updated>2014-03-31T15:58:49+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/03/31/udid</id>
    <content type="html"><![CDATA[<p>用于标识iOS设备的各种方法。</p>

<h3>UDID(Unique Device Identifier)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[UIDevice CurrentDevice] uniqueIdentifier];</span></code></pre></td></tr></table></div></figure>


<ul>
<li>UDID是可以唯一标识iOS设备的由40个16进制字符组成的序列。</li>
<li>Available in iOS 2.0 &ndash; iOS 6.1；Deprecated in iOS 5.0.</li>
<li>自<a href="https://developer.apple.com/news/?id=3212013a">2013.5.1</a>起，App Store不允许访问<code>UDID</code>的新应用提交。</li>
</ul>


<h3>IDFV(identifierForVendor) 开发商ID</h3>

<p>用于应用的开发商(Vendor)唯一标识一台设备的ID。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSUUID *vendorId = [[UIDevice CurrentDevice] identifierForVendor];</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The value of this property is the same for apps that come from the same vendor running on the same device. A different value is returned for apps on the same device that come from different vendors, and for apps on different devices regardless of vendor. Normally, the vendor is determined by data provided by the App Store. If the app was not installed from the app store (such as when the app is still in development), the vendor is determined based on the app’s bundle ID. The bundle ID is assumed to be in reverse-DNS format, and the first two components are used to generate a vendor ID. For example, com.example.app1 and com.example.app2 would appear to have the same vendor ID.</p><p>If the value is nil, wait and get the value again later. This happens, for example, after the device has been restarted but before the user has unlocked the device.</p><p>The value in this property remains the same while the app (or another app from the same vendor) is installed on the iOS device. The value changes when the user deletes all of that vendor’s apps from the device and subsequently reinstalls one or more of them. The value can also when installing test builds using Xcode or when installing an app on a device using ad-hoc distribution. Therefore, if your app stores the value of this property anywhere, you should gracefully handle situations where the identifier changes.</p></blockquote>


<ul>
<li>Available in iOS 6.0 and later.</li>
<li>对运行在同一台设备上的同一个开发商(Vendor)的所有App都返回同一个值。</li>
<li>对运行在同一台设备上的不同开发商(Vendor)的App返回不同的值。</li>
<li>对运行在不同设备上的App,不论开发商(Vendor)，都返回不同的值。</li>
<li>从AppStore上下载的App,Vendor信息由AppStore中的数据决定。</li>
<li>不是从AppStore上下载的应用(例如开发中的应用),Vendor信息由app的bundle ID决定;bundle ID的前两部分用于
生成vendor ID，例如com.example.app1和com.example.app2会返回相同的vendor ID。</li>
<li>设备重启后、解锁前,vendor ID可能返回nil。</li>
<li>当同一个vendor的任意一个App在设备上存在时，vendor ID保持不变。当用户删除此vendor的所有App后，然后再次安装时vendor ID会
发生变化。</li>
</ul>


<h3>IDFA(Identifier for Advertisers)</h3>

<p>用于广告统计的设备标识符。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSUUID *adId = [[ASIdentifierManager sharedManager] advertisingIdentifier];</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Available in iOS 6.0 and later.</li>
<li><a href="https://developer.apple.com/library/ios/documentation/AdSupport/Reference/ASIdentifierManager_Ref/ASIdentifierManager.html#//apple_ref/occ/instp/ASIdentifierManager/advertisingIdentifier">advertisingIdentifier</a>
是<code>AdSupport.framework</code>框架的一部分。</li>
<li><p>几种情况下IDFA会变化</p>

<ul>
<li>系统Reset(iOS7:Settings.app &ndash;> General &ndash;> Reset &ndash;> Reset All Content and Settings)</li>
<li><p>Reset Advertising Identifier(iOS7:Settings.app &ndash;> Privacy &ndash;> Advertising &ndash;> Reset Advertising Identifier)</p>

<p>Reset Advertising Identifier后，如果应用已经运行在后台，则返回应用后调用<code>advertisingIdentifier</code>并不会返回新的值，只有应用终止再启动才会返回新的值。</p></li>
</ul>
</li>
<li><p><code>Limit Ad Tracking</code>设为<code>ON</code>状态不影响<code>advertisingIdentifier</code>的访问.</p></li>
<li>访问了<code>advertisingIdentifier</code>但没有显示任何广告的App会被拒掉,见<a href="http://blog.tapstream.com/post/75322632058/apple-rejecting-apps-for-not-showing-ads">tapstream的blog</a>。</li>
</ul>


<h4>Limit Ad Tracking</h4>

<p>在<code>Settings.app -&gt; Privacy -&gt; Advertising</code>设置有一项<code>Limit Ad Tracking</code>,是否限制广告跟踪，目前这一选项没有实质性作用。
在开发文档中对<code>advertisingTrackingEnabled</code>这样描述</p>

<blockquote><p>Check the value of this property before performing any advertising tracking. If the value is NO, use the advertising identifier only for the following purposes: frequency capping, conversion events, estimating the number of unique users, security and fraud detection, and debugging.</p></blockquote>


<p><code>advertisingTrackingEnabled</code>为NO,即<code>Limit Ad Tracking</code>为&#8217;ON&#8217;状态；这只是设置一个标识告诉广告商(advertisers)不要使用
Advertising ID对用户进行针对性的广告匹配；但没有任何强制措施来保证这一点,对访问<code>advertisingIdentifier</code>也没有任何限制。</p>

<h3>Mac Address</h3>

<p>在iOS之前可以获取设备的Mac地址做个MD5作为设备的唯一标识，但自<a href="https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS7.html">iOS7</a>起，获取Mac Address总是返回&#8221;02:00:00:00:00:00&#8221;</p>

<blockquote><p>In iOS 7 and later, if you ask for the MAC address of an iOS device, the system returns the value02:00:00:00:00:00. If you need to identify the device, use the identifierForVendor property ofUIDevice instead. (Apps that need an identifier for their own advertising purposes should consider using the advertisingIdentifier property of ASIdentifierManager instead.)</p></blockquote>


<h3>UUID(Universally Unique Identifiers)</h3>

<p>UUID是可以在空间和时间范围内保证唯一性的128bit序列，由<a href="http://www.ietf.org/rfc/rfc4122.txt">RFC 4122</a>定义，微软的一个实现也叫做GUID(Globally Unique Identifier).</p>

<blockquote><p>UUIDs (Universally Unique Identifiers), also known as GUIDs (Globally Unique Identifiers) or IIDs (Interface Identifiers), are 128-bit values A UUID is made unique over both space and time by combining a value unique to the computer on which it was generated and a value representing the number of 100-nanosecond intervals since October 15, 1582 at 00:00:00.</p></blockquote>


<p>在iOS6中有<a href="https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSUUID_Class/Reference/Reference.html">NSUUID</a>类来表示UUID,上面介绍的<code>identifierForVendor</code>和<code>advertisingIdentifier</code>返回值类型都是NSUUID。</p>

<p>也可以直接使用<code>NSUUID</code>生成一个新的UUID,使用<code>UUIDString</code>方法获取其字符串表示;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSUUID *uuid = [NSUUID UUID];
</span><span class='line'>NSString *uuidString = [uuid UUIDString];</span></code></pre></td></tr></table></div></figure>


<p><code>NSUUID</code>与Core Fundation的<a href="https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFUUIDRef/Reference/reference.html#//apple_ref/c/tdef/CFUUIDRef">CFUUIDRef</a>不是toll-free bridged的，不能直接进行转换。
需要使用UUID string在<code>NSUUID</code>与<code>CFUUID</code>间中转。</p>

<p><code>CFUUID</code>可在iOS5及之前的版本使用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CFUUIDRef uuid = CFUUIDCreate(NULL);
</span><span class='line'>NSString *UUID = CFUUIDCreateString(NULL, uuid);</span></code></pre></td></tr></table></div></figure>


<h3><a href="https://github.com/ylechelle/OpenUDID">OpenUDID</a></h3>

<p>一个用于替换UDID的开源方案，<a href="http://blog.appsfire.com/udid-is-dead-openudid-is-deprecated-long-live-advertisingidentifier/">不推荐使用</a></p>

<h3><a href="https://github.com/crashlytics/secureudid">SecureUDID Deprecated</a></h3>

<p><a href="http://try.crashlytics.com/">Crashlytics</a>发布的开源沙盒UDID方案，现已<a href="http://www.secureudid.org/">废弃</a>。</p>

<h3>参考</h3>

<ul>
<li><a href="http://nshipster.com/uuid-udid-unique-identifier/">NSUUID CFUUIDRef UIDevice -unique​Identifier -identifier​For​Vendor</a></li>
<li><a href="http://oleb.net/blog/2012/09/udid-apis-in-ios-6/">UDID Replacement APIs in iOS 6</a></li>
<li><a href="http://www.doubleencore.com/2013/04/unique-identifiers/">The Developer’s Guide to Unique Identifiers</a></li>
<li><a href="http://oleb.net/blog/2011/09/how-to-replace-the-udid/">How to Replace the UDID</a></li>
<li><a href="http://www.doubleencore.com/2013/04/what-apples-limit-ad-tracking-feature-actually-means-to-users/">What Apple’s ‘Limit Ad Tracking’ Means to Users</a></li>
<li><a href="http://blog.tapstream.com/post/75322632058/apple-rejecting-apps-for-not-showing-ads">Apple Rejecting Apps For Not Showing Ads</a></li>
<li><a href="https://developer.apple.com/library/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS7.html">What&rsquo;s New in iOS7</a>
*</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rvm]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/03/27/rvm/"/>
    <updated>2014-03-27T17:27:57+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/03/27/rvm</id>
    <content type="html"><![CDATA[<p><a href="https://rvm.io/">Ruby Version Manager(RVM)</a>是用于管理和切换多个版本ruby环境的命令行工具。</p>

<p>安装RVM</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby</span></code></pre></td></tr></table></div></figure>


<p>安装完成有提示:</p>

<pre><code>To start using RVM you need to run `source /Users/xuguoxing/.rvm/scripts/rvm`
in all your open shell windows, in rare cases you need to reopen all shell windows.
</code></pre>

<p>安装Ruby 1.9.3(Octopress使用)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install 1.9.3
</span><span class='line'>rvm use 1.9.3
</span><span class='line'>rvm rubygems latest</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homebrew]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/03/27/homebrew/"/>
    <updated>2014-03-27T17:13:23+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/03/27/homebrew</id>
    <content type="html"><![CDATA[<p><a href="http://brew.sh/index.html">Homebrew</a>是OS X上的包管理器</p>

<p>安装Homebrew</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"</span></code></pre></td></tr></table></div></figure>


<p>使用Homebrew安装包</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install wget</span></code></pre></td></tr></table></div></figure>


<p>Homebrew会将包安装到/usr/local下自己的目录中，然后在/usr/local/bin中创建符号链接指向实际的执行文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pwd
</span><span class='line'>/usr/local/Cellar
</span><span class='line'>$ ls
</span><span class='line'>openssl   wget
</span><span class='line'>$ pwd
</span><span class='line'>/usr/local/bin
</span><span class='line'>$ ls -l wget
</span><span class='line'>wget -&gt; ../Cellar/wget/1.15/bin/wget</span></code></pre></td></tr></table></div></figure>


<p>卸载Homebrew</p>

<p>使用以下脚本卸载</p>

<div><script src='https://gist.github.com/1173223.js'></script>
<noscript><pre><code>#!/bin/sh
# Just copy and paste the lines below (all at once, it won't work line by line!)
# MAKE SURE YOU ARE HAPPY WITH WHAT IT DOES FIRST! THERE IS NO WARRANTY!

function abort {
  echo &quot;$1&quot;
  exit 1
}

set -e

/usr/bin/which -s git || abort &quot;brew install git first!&quot;
test -d /usr/local/.git || abort &quot;brew update first!&quot;

cd `brew --prefix`
git checkout master
git ls-files -z | pbcopy
rm -rf Cellar
bin/brew prune
pbpaste | xargs -0 rm
rm -r Library/Homebrew Library/Aliases Library/Formula Library/Contributions 
test -d Library/LinkedKegs &amp;&amp; rm -r Library/LinkedKegs
rmdir -p bin Library share/man/man1 2&gt; /dev/null
rm -rf .git
rm -rf ~/Library/Caches/Homebrew
rm -rf ~/Library/Logs/Homebrew
rm -rf /Library/Caches/Homebrew
</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ImageOptim]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/03/27/imageoptim/"/>
    <updated>2014-03-27T09:40:59+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/03/27/imageoptim</id>
    <content type="html"><![CDATA[<h2><a href="http://imageoptim.com/">ImageOptim</a></h2>

<p>ImageOptim通过寻找最好的压缩参数和移除不必要的<code>comments</code>和<code>color profiles</code>来减少图片大小，提高加载速度。</p>

<p>ImageOptim可以处理PNG,JPEG和GIF动画。</p>

<p>ImageOptim无缝集成以下优化工具:</p>

<ul>
<li><a href="http://www.advsys.net/ken/util/pngout.htm">PNGOUT</a></li>
<li><a href="http://googledevelopers.blogspot.co.uk/2013/02/compress-data-more-densely-with-zopfli.html">Zopfli</a></li>
<li><a href="http://pmt.sourceforge.net/pngcrush/">Pngcrush</a></li>
<li><a href="http://advancemame.sourceforge.net/doc-advpng.html">AdvPNG</a></li>
<li><a href="http://optipng.sourceforge.net/">OptiPNG</a></li>
<li><a href="http://www.kokkonen.net/tjko/projects.html">JpegOptim</a></li>
<li>jpegrescan</li>
<li>jpegtran</li>
<li><a href="http://www.lcdf.org/gifsicle/">Gifsicle</a></li>
</ul>


<p>ImageOptim代码是开源的，其<a href="https://github.com/pornel/ImageOptim">源代码</a>在GitHub上。</p>

<p><a href="http://calendar.perfplanet.com/2010/png-that-works/">PNG that works</a>文章中解释了为什么ImageOptim移除gamma信息，和怎么在
保留透明度的情况下获取更小的png图片。</p>

<h2>Xcode内置的图片优化 <a href="http://pmt.sourceforge.net/pngcrush/index.html">pngcrush</a></h2>

<p>Xcode默认会将所有的PNG图片转换成一个非标准的iOS特定的PNG格式<a href="http://iphonedevwiki.net/index.php/CgBI_file_format">CgBI file format</a>。</p>

<p>这种格式使用<code>premultiplied BGRA</code>代替了<code>RGBA</code>颜色空间，会在<code>loading</code>阶段节省一点点转换时间，但完全不影响
图片渲染(Rendering)速度。</p>

<p>Xcode的这种转换有时会使图片增大，会抵消<code>ImageOptim</code>的优化。</p>

<p>可以在<code>Build Settings</code>中将<code>Compress PNG Files</code>设为<code>NO</code>来禁止这种转换。</p>

<p>Apple的PNG变体，在iOS外无法使用，也无法使用<code>Preview</code>工具查看，可以使用<code>pngcrush</code>工具进行逆向转换成正常的png图片。</p>

<p><code>pngcrush</code>在Xcode的安装目录中存在，路径类似为<code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/pngcrush</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ /Applications/Xcode.app/Contents/Developer\/Platforms/iPhoneOS.platform/Developer/usr/bin/pngcrush \-revert-iphone-optimizations -q Local.png Local-standard.png</span></code></pre></td></tr></table></div></figure>


<p>可将Local.png 恢复成正常的Local-standard.png</p>

<h2><a href="http://pngmini.com/">Image Alpha</a></h2>

<p>ImageAlpha通过<a href="http://pngmini.com/lossypng.html">有损压缩</a>和转换为更有效率的<code>PNG8+alpha</code>格式，可以有效的减小24-bit
PNG文件(包括alpha透明度)的大小。其生成的图片兼容iOS,所有的浏览器设置IE6。</p>

<p>ImageAlpha通过使用最新的<a href="http://pngquant.org/">pngquant</a>,<a href="http://sourceforge.net/projects/pngnqs9/">pngnq-s9</a>和<code>alpha-channel-aware</code>的<a href="https://github.com/pornel/mediancut-posterizer">posterizer</a>
能达到比Adobe Fireworks中类似功能更好的图片质量。</p>

<p>ImageAlpha基于<a href="http://pngquant.org/">pngquant</a>,在<code>ImageAlpha.app/Contents/Resources</code>目录下会有<code>pngquant</code>执行文件，可以用于批量处理。<a href="http://jamiemason.github.io/ImageOptim-CLI/">ImageOptim-CLI</a>也会使用此文件。</p>

<p>ImageAlpha是开源的，其代码是python的。<a href="https://github.com/pornel/ImageAlpha">source code</a>在github上。</p>

<h2><a href="http://jpegmini.com/mac">JPEGmini for Mac</a></h2>

<p>JPEGmini Mac版本可以对JPEG图片最高进行5倍的压缩，并保持原始的质量和JPEG格式。</p>

<p>JPEGmini是收费软件,在appstore有一个免费版本<a href="http://itunes.apple.com/us/app/jpegmini-lite/id525742250?mt=12">JPEGmini Lite下载</a>，免费版本每天只能压缩20张图片。</p>

<h2><a href="https://github.com/JamieMason/ImageOptim-CLI">ImageOptim-CLI</a></h2>

<p>ImageOptim-CLI命令行工具使用<a href="http://imageoptim.com/">ImageOptim</a>,<a href="http://pngmini.com/">ImageAlpha</a>,<a href="http://jpegmini.com/mac">JPEGmini for Mac</a>
对图片进行批量优化。</p>

<p>从目前的<a href="http://jamiemason.github.io/ImageOptim-CLI/">benchmarks</a>可看出ImageOptim,ImageAlpha和JPEGmini的优化效果比其他替代品要好。</p>

<p>下载最新的zip包，解压并将ImageOptim-CLI的路径添加到$PATH中。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl --output imageoptim-cli.zip https://codeload.github.com/JamieMason/ImageOptim-CLI/zip/1.7.11
</span><span class='line'>$ unzip imageoptim-cli.zip
</span><span class='line'>$ export PATH=$PATH:imageoptim-cli/bin</span></code></pre></td></tr></table></div></figure>


<p>使用方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  Usage: imageOptim [options]
</span><span class='line'>
</span><span class='line'>  Options:
</span><span class='line'>
</span><span class='line'>  -d, --directory     directory of images to process
</span><span class='line'>  -a, --image-alpha   pre-process PNGs with ImageAlpha.app *
</span><span class='line'>  -j, --jpeg-mini     pre-process JPGs with JPEGmini.app **
</span><span class='line'>  -q, --quit          quit all apps when complete
</span><span class='line'>  -h, --help          display this usage information
</span><span class='line'>  -e, --examples      display some example commands and uses
</span><span class='line'>  -v, --version       display the version number
</span><span class='line'>
</span><span class='line'>*  http://pngmini.com
</span><span class='line'>** https://itunes.apple.com/us/app/jpegmini/id498944723</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>-d</code>指定要优化的图片文件目录;</li>
<li><code>-a</code>,<code>-j</code>指定预先使用<code>ImageAlpha</code>优化PNG图片和使用<code>JPEGmini</code>优化JPEG图片，因为JPEGmini为收费的，如果没有
安装，不指定<code>-j</code>即可;</li>
</ul>


<p>一些示例命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>imageOptim --directory ~/Sites/Awesome # [options]
</span><span class='line'>find ~/Sites/Awesome -name '*.jpg' | imageOptim # [options]
</span><span class='line'>imageOptim --jpeg-mini --image-alpha --quit --directory path/to/images
</span><span class='line'>imageOptim -j -a -q -d path/to/images</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress建站流程]]></title>
    <link href="http://xuguoxing.github.io/blog/2014/03/20/octopressjian-zhan-liu-cheng/"/>
    <updated>2014-03-20T21:20:35+08:00</updated>
    <id>http://xuguoxing.github.io/blog/2014/03/20/octopressjian-zhan-liu-cheng</id>
    <content type="html"><![CDATA[<h2>一.设置Octopress</h2>

<h3>检查Ruby环境</h3>

<p>确保Ruby环境为1.9.3,若不是，则下载RVM,安装1.9.3版本</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ url -L https://get.rvm.io | bash -s stable --ruby
</span><span class='line'>$ rvm install 1.9.3
</span><span class='line'>$ rvm use 1.9.3
</span><span class='line'>$ rvm rubygems latest</span></code></pre></td></tr></table></div></figure>


<p>Clone Octopress</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>$ cd octopress</span></code></pre></td></tr></table></div></figure>


<p>安装依赖(dependencies)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo gem install bundler
</span><span class='line'>$ sudo bundle install</span></code></pre></td></tr></table></div></figure>


<p>安装默认主题</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h2>二.部署到Github Pages</h2>

<h3>若本机无SSH Key,则生成Github SSH Key并上传</h3>

<p>生成SSH key</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-keygen -t rsa -C "your_email@example.com"
</span><span class='line'>$ ssh-add id_rsa</span></code></pre></td></tr></table></div></figure>


<p>添加SSH Key到GitHub</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pbcopy &lt; ~/.ssh/id_rsa.pub #拷贝到clipboard</span></code></pre></td></tr></table></div></figure>


<p>在github的<a href="https://github.com/settings">Account Settings</a>添加SSH Key</p>

<p>测试环境输出</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh -T git@github.com</span></code></pre></td></tr></table></div></figure>


<h3><a href="https://github.com/repositories/new">创建Github Repository</a></h3>

<ul>
<li><p>创建名字格式为username.github.io,username必须为github的用户名。即xuguoxing.github.io</p></li>
<li><p>Initialize this repository with a README 项不勾选</p></li>
</ul>


<h3>设置 github pages</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>该命令会询问repo地址，并在_deploy目录下设置master branch</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake generate
</span><span class='line'>$ rake deploy</span></code></pre></td></tr></table></div></figure>


<p>生成blog,拷贝生成的文件到_deploy/,添加到git,commit并push到master branch.
  等待大约10分钟</p>

<h3>source上传到Github</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git add .
</span><span class='line'>$ git commit -m 'your message'
</span><span class='line'>$ git push origin source</span></code></pre></td></tr></table></div></figure>


<h2>三.新增Posts</h2>

<p>Blog Post需用存储到<code>source/_posts</code>目录中，命名需符合Jekyll的命名规范:<code>YYYY-MM-DD-post-title.markdown</code></p>

<p>Octopress提供rake task创建新的post，自动符合命名规范的文件，并包含yaml元数据</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["title"]</span></code></pre></td></tr></table></div></figure>


<p>示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["Zombie Ninjas Attack: A survivor's retrospective"]</span></code></pre></td></tr></table></div></figure>


<p>会生成文件<code>source/_posts/2011-07-03-zombie-ninjas-attack-a-survivors-retrospective.markdown</code>;url访问地址为<code>http://site.com/blog/2011/07/03/zombie-ninjas-attack-a-survivors-retrospective/index.html</code></p>

<p>生成的文件头部包含<a href="http://jekyllrb.com/docs/frontmatter/">yaml front matter</a>告诉Jekyll如何处理Posts和Pages</p>

<pre><code>---
layout: post
title: "Zombie Ninjas Attack: A survivor's retrospective"
date: 2011-07-03 5:59
comments: true
external-url:
categories:
---
</code></pre>

<p>可能存在的数据有</p>

<ul>
<li>layout:指定使用的layout文件(不带.Layout扩展名),Layout文件必须放置在_layouts目录下</li>
<li>title:标题</li>
<li>date: 发布日期</li>
<li>comments: true或false,是否允许评论</li>
<li>author: 对于多作者blog,可设置文章作者</li>
<li>published: true或false,是否发布，如果在写草稿，可设为false</li>
<li>external-url: 发布<a href="http://octopress.org/docs/blogging/linklog">linklog</a>样式post,填写指向的外部链接</li>
<li><p>categories:可设置单个category或者多个category,格式件下面</p>

<pre><code>  # One category
  categories: Sass

  # Multiple categories example 1
  categories: [CSS3, Sass, Media Queries]

  # Multiple categories example 2
  categories:
  - CSS3
  - Sass
  - Media Queries
</code></pre></li>
<li><p>permalink: 代替blog post中的<code>/year/month/day/title.html</code>作为最终url</p></li>
<li>tags: 文字的tag标注，用法和categories相同</li>
</ul>


<h2>四.新增Pages</h2>

<p>可以在blog source目录下的任意位置增加pages,对应的URL会指向对应路径，如<code>about.markdown</code>会生成链接<code>site.com/about.html</code>,<code>about/index.markdown</code>会生成链接<code>site.com/about/index.html</code></p>

<p>生成新pages的rake task为:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_page[super-awesome]
</span><span class='line'>rake new_page[super-awesome/page.html]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第一种方式生成markdown文件<code>/source/super-awesome/index.markdown</code></li>
<li>第二种方式生成html文件<code>/source/super-awesome/page.html</code></li>
</ul>


<p>生成markdown文件的yaml头样式为:</p>

<pre><code>---
layout: page
title: "Super Awesome"
date: 2011-07-03 5:59
comments: true
sharing: true
footer: true
---
</code></pre>

<p>和post很相似,但不包括<code>categories</code>, sharing和footer是做什么用的；如果不需要显示日期<code>date</code>可删除</p>

<h2>五.生成和预览</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate   # Generates posts and pages into the public directory
</span><span class='line'>rake watch      # Watches source/ and sass/ for changes and regenerates
</span><span class='line'>rake preview    # Watches, and mounts a webserver at http://localhost:4000</span></code></pre></td></tr></table></div></figure>


<p>使用<code>rake preview</code>可在本地<code>http://localhost:4000</code>预览生成效果。</p>

<h2>六.配置Octopress</h2>

<p>配置文件包括</p>

<pre><code>_config.yml       # Main config (Jekyll's settings)
Rakefile          # Configs for deployment
config.rb         # Compass config
config.ru         # Rack config
</code></pre>

<p>一般情况下只需要配置<code>_config.yml</code>;<code>Rakefile</code>是关于部署的,如果需要使用rsync同步,则需要设置;另外两个文件一般不用。</p>

<p>_config.yml配置包包括三部分</p>

<h3>Main Configs</h3>

<pre><code>url:                # For rewriting urls for RSS, etc
title:              # Used in the header and title tags
subtitle:           # A description used in the header
author:             # Your name, for RSS, Copyright, Metadata
simple_search:      # Search engine for simple site search
description:        # A default meta description for your site
date_format:        # Format dates using Ruby's date strftime syntax
subscribe_rss:      # Url for your blog's feed, defauts to /atom.xml
subscribe_email:    # Url to subscribe by email (service required)
category_feeds:     # Enable per category RSS feeds (defaults to false in 2.1)
email:              # Email address for the RSS feed if you want it.
</code></pre>

<h3>Jekyll &amp; Plugins</h3>

<p>关于Jekyll和插件的配置，可参考<a href="https://github.com/mojombo/jekyll/wiki/Configuration">configuration docs</a></p>

<pre><code>root:               # Mapping for relative urls (default: /)
permalink:          # Permalink structure for blog posts
source:             # Directory for site source files
destination:        # Directory for generated site files
plugins:            # Directory for Jekyll plugins
code_dir:           # Directory for code snippets (for include_code plugin)
category_dir:       # Directory for generated blog category pages

pygments:           # Toggle python pygments syntax highlighting
paginate:           # Posts per page on the blog index
pagination_dir:     # Directory base for pagination URLs eg. /blog/page/2/
recent_posts:       # Number of recent posts to appear in the sidebar

default_asides:     # Configure what shows up in the sidebar and in what order
blog_index_asides:  # Optional sidebar config for blog index page
post_asides:        # Optional sidebar config for post layout
page_asides:        # Optional sidebar config for page layout
</code></pre>

<h3>第三方设置</h3>

<ul>
<li>Github &ndash; 在侧边栏列出 github repositories</li>
<li>Twitter &ndash; 设置twitter用户名(不带@),添加Twitter分享按钮</li>
<li>Google Plus One &ndash; Setup sharing for posts and pages on Google&rsquo;s plus one network.</li>
<li>Pinboard &ndash; Share your recent Pinboard bookmarks in the sidebar.</li>
<li>Delicious &ndash; Share your recent Delicious bookmarks in the sidebar.</li>
<li>Disqus Comments &ndash; Add your disqus short name to enable disqus comments on your site.</li>
<li>Google Analytics &ndash; 添加Google Analytics的tracking id分析页面访问.</li>
<li>Facebook &ndash; 添加Facebook like按钮</li>
</ul>


<p>Google Analytics的tracking id在Google Analytics页面的 管理->媒体资源->跟踪代码中可以找到</p>

<h2>七.设置自定义域名</h2>

<p>在<code>source</code>目录下，新建文件<code>CNAME</code>,将域名添加到此文件中。</p>

<p>可设置顶级域名，如</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo 'iosapp.me' &gt;&gt; source/CNAME</span></code></pre></td></tr></table></div></figure>


<p>或者子域名</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo 'www.iosapp.me' &gt;&gt; source/CNAME</span></code></pre></td></tr></table></div></figure>


<p>只能设置一个定制域名,如果需要设置多个定制域名,则需要使用其他服务将域名重定向到github pages的域名</p>

<p>部署发布至master</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake generate
</span><span class='line'>$ rake deploy</span></code></pre></td></tr></table></div></figure>


<p>使用DNSPod管理域名</p>

<p>新建<a href="https://www.dnspod.cn">DNSPod</a>账号，添加域名<code>iosapp.me</code>,在godaddy账号中将域名的DNS设置DNSPod的DNS， <code>f1g1ns1.dnspod.net</code>和<code>f1g1ns2.dnspod.net</code></p>

<ul>
<li><p>DNSPod DNS生效后,在其中添加A或者CNAME记录</p>

<ul>
<li><p>若第一步设置的顶级域名<code>iosapp.me</code>,则需要添加一条A记录，将<code>iosapp.me</code>指向固定IP地址，IP地址可通过dig命令获得</p>

<pre><code>  $ dig xuguoxing.github.io +nostats +nocomments +nocmd
  xuguoxing.github.io.    898 IN  CNAME           github.map.fastly.net.
  github.map.fastly.net.  8   IN  A   199.27.79.133
</code></pre></li>
<li>若第一步设置的子域名<code>www.iosapp.me</code>,则需要添加一条CNAME域名,将<code>www.iosapp.me</code>指向<code>xuguoxing.github.io</code></li>
</ul>
</li>
<li><p>待github设置域名和DNS解析都生效后，即可以通过<code>iosapp.me</code>或者<code>www.iosapp.me</code>访问blog;</p></li>
</ul>


<p>可通过dig命令查询解析流程:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dig iosapp.me +nostats +nocomments +nocmd</span></code></pre></td></tr></table></div></figure>


<h2>八.插件</h2>

<h3><a href="http://octopress.org/docs/plugins/image-tag/">Image Tag</a>图片</h3>

<p>增加图片的语法为</p>

<pre><code>&lt;img class="[position]" src="http://xuguoxing.github.io/path/to/image" title="[width] [height] [title text [alt text]]" &gt;
</code></pre>

<p>其中<code>/path/to/image</code>可以为网上的图片URL,也可是是本站的图片；如果自己站点的图片，
通常放在source/images目录下，可以按照年和月建立两层目录，如2014/03。<code>rake generate</code>命令会自动生成博客，
放在<code>source/images</code>目录下的图片也会被复制过去。</p>

<p>图片代码示例</p>

<pre><code>&lt;img src="http://xuguoxing.github.io/images/2014/03/picture.jpg"&gt;
&lt;img src="http://placekitten.com/890/280"&gt;
&lt;img class="left" src="http://placekitten.com/320/250" title="Place Kitten #2" &gt;
&lt;img class="right" src="http://placekitten.com/300/500" width="150" height="250" title="Place Kitten #3" &gt;
&lt;img class="right" src="http://placekitten.com/300/500" width="150" height="250" title="Place Kitten #4" alt="An image of a very cute kitten"&gt;
&lt;img src="http://placekitten.com/890/280"&gt;
</code></pre>

<p><img src="http://placekitten.com/890/280"></p>

<h3><a href="http://octopress.org/docs/plugins/blockquote/">Blockquote</a>引用</h3>

<blockquote><p>Last night I lay in bed looking up at the stars in the sky and I thought to myself, where the heck is the ceiling.</p></blockquote>


<p>从Twitter引用</p>

<blockquote><p>Over the past 24 hours I&#8217;ve been reflecting on my life & I&#8217;ve realized only one thing. I need a medieval battle axe.</p><footer><strong>@allanbranch</strong> <cite><a href='https://twitter.com/allanbranch/status/90766146063712256'>twitter.com/allanbranch/status/&hellip;</a></cite></footer></blockquote>


<p>从Web引用</p>

<blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong> <cite><a href='http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html'>Welcome to Island Marketing</a></cite></footer></blockquote>


<h3>代码块</h3>

<p>关于代码的引用参见</p>

<ul>
<li><a href="http://octopress.org/docs/plugins/codeblock/">Codeblock</a></li>
<li><a href="http://octopress.org/docs/plugins/backtick-codeblock/">Backtick Code Blocks</a></li>
<li><a href="http://octopress.org/docs/plugins/include-code/">Include Code</a></li>
<li><a href="http://octopress.org/docs/plugins/gist-tag/">Gist Tag</a></li>
</ul>


<h2>参考:</h2>

<ul>
<li><a href="http://octopress.org/docs/setup/">Octopress Setup</a></li>
<li><a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages</a></li>
<li><a href="https://help.github.com/articles/generating-ssh-keys">GitHub Generating SSH Keys</a></li>
<li><a href="http://octopress.org/docs/configuring/">Configuring Octopress</a></li>
<li><a href="http://octopress.org/docs/blogging/">Start blogging with Octopress</a></li>
<li><a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">Setting up a custom domain with Pages</a></li>
<li><a href="https://support.dnspod.cn/Kb/showarticle/tsid/42/">Godaddy注册商域名修改DNS地址</a></li>
<li><a href="http://octopress.org/docs/blogging/plugins/">Plugins</a></li>
<li><a href="http://octopress.org/docs/plugins/image-tag/">Image Tag</a></li>
<li><a href="http://octopress.org/docs/plugins/blockquote/">Blockquote</a></li>
<li><a href="http://octopress.org/docs/plugins/codeblock/">Codeblock</a></li>
<li><a href="http://octopress.org/docs/plugins/backtick-codeblock/">Backtick Code Blocks</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
